0.0,0.0
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


37.0,0.01000839945291343
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


34.0,0.012236584475163514
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


32.0,0.01626854701302427
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


53.0,0.026332102113089118
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


57.0,0.010652678425385198
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


80.0,0.019479542983581677
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


32.0,0.014240706491798316
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


31.0,0.015137079744601212
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


37.0,0.01892675524875609
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


33.0,0.006761931462448634
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


52.0,0.022291324818921487
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


48.0,0.02139941186908545
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


48.0,0.024825913823826817
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


62.0,0.038923661804320164
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


30.0,0.03984075370163431
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


60.0,0.025767785483209238
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


90.0,0.055737621326699904
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


39.0,0.011601254876800082
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

40.0,0.021875219917376065
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

114.0,0.04155661686876466
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


52.0,0.013067800730813706
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


36.0,0.015064562185047481
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


39.0,0.015510415310265868
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

56.0,0.022483342271631734
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


44.0,0.019297826098727766
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


39.0,0.011587380494266442
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


39.0,0.01615671631606752
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


41.0,0.015407115779634495
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


49.0,0.037780485616654924
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

32.0,0.012561545134294194
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


38.0,0.016035110491818494
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

31.0,0.011899109066632496
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


36.0,0.011572159012591454
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


32.0,0.01240786316677256
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


31.0,0.010981667148618812
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

32.0,0.012046469458294351
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


34.0,0.011051013622615624
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

32.0,0.011417812190455123
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

28.0,0.010510756284299982
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

41.0,0.03262052388503456
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


44.0,0.016871971789429563
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

31.0,0.013962013522361816
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

40.0,0.05506659033178618
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


42.0,0.054213089779277746
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


42.0,0.035848954005744615
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

34.0,0.019115540395573172
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


37.0,0.021254130134577998
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


39.0,0.01744674457772366
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


36.0,0.019128313504318317
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


42.0,0.019022970847888065
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

48.0,0.01972191060681472
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


54.0,0.02548854825853819
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


49.0,0.0348054918222338
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


41.0,0.014404847259465337
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


43.0,0.025288717625035262
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


32.0,0.014299470208319232
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


32.0,0.016935649318549406
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


41.0,0.01586493407402889
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


44.0,0.02137603417215872
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


37.0,0.017008472872151792
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


48.0,0.09155555168274576
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
print("HelloWorld")

40.0,0.014693839538182374
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


36.0,0.010880342533357013
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


41.0,0.008282062398478618
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


57.0,0.007766339956881696
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


47.0,0.011630080219264038
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


41.0,0.00736490655384292
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


39.0,0.012653912121105226
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


40.0,0.02221010174889848
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


111.0,0.038480488010558145
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


48.0,0.01844257298349028
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
import random
print(random.random()*100)
```


49.0,0.018585758064184832
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


45.0,0.013120031388153208
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


38.0,0.014103935568338777
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


44.0,0.014374374551651914
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


44.0,0.01194739125357347
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


36.0,0.01290848889533347
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


46.0,0.01579716236551043
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


33.0,0.01573128314013872
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


41.0,0.01184419733033959
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


36.0,0.018556013151663997
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


68.0,0.02486940056259146
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


37.0,0.06091230564723027
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

32.0,0.06288573085736604
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

41.0,0.08586494695413982
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

36.0,0.03769247839715817
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

43.0,0.06745703486640808
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

40.0,0.04212698174217
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


41.0,0.03401613950221005
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


51.0,0.022123681328713563
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


45.0,0.02025740466077608
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


50.0,0.01562379675794745
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


38.0,0.02377962808393974
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


38.0,0.02315438270102166
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


46.0,0.017931787981265046
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


37.0,0.01000839945291343
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


0.0,-2.220446049250313e-16
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


32.0,0.010032434267948087
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


26.0,0.017380676922730265
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


39.0,0.025802114826833367
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


61.0,0.01355317120335564
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


83.0,0.025850807836290346
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


27.0,0.01889140845488735
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


33.0,0.014031890110633993
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


30.0,0.027430895780510944
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


43.0,0.009224231462168997
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


78.0,0.03865493841986245
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


52.0,0.02457318136266018
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


52.0,0.02870628398494668
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


64.0,0.04927807091721881
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


32.0,0.049298648937227685
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


62.0,0.028021775900508583
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


103.0,0.0643551134127266
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


39.0,0.012867607459535524
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

38.0,0.01787814528208942
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

124.0,0.0466520674444344
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


55.0,0.01912543899469865
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


22.0,0.009644059436079377
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


36.0,0.012427381763691736
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

50.0,0.024836632144490278
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


28.0,0.018049231394719367
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


28.0,0.009655507380543993
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


29.0,0.019590911737910832
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


31.0,0.01618435412082786
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


52.0,0.04294629079266543
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

28.0,0.011438190874098364
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


40.0,0.018377001501277634
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

31.0,0.014037429457727124
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


37.0,0.01707229309287206
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


34.0,0.016747879728923887
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


31.0,0.015211872760340195
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

34.0,0.01516712066921555
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


36.0,0.014410443034031384
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

34.0,0.015017808916725883
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

31.0,0.014828742302646969
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

39.0,0.046436090333
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


48.0,0.028658159660693405
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

33.0,0.01352098309157379
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

37.0,0.06657391899611598
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


34.0,0.06526969940394378
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


43.0,0.047426655451568434
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

32.0,0.024068531566878826
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


29.0,0.02681016885007348
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


29.0,0.010924626831105178
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


28.0,0.020044846910587166
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


29.0,0.0174535003973304
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

35.0,0.01874196752587931
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


46.0,0.021126274007074564
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


38.0,0.030751562309142666
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


31.0,0.012563447848642051
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


32.0,0.018439745790421957
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


29.0,0.019779672514088742
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


29.0,0.023733680465648055
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


30.0,0.014626428964403915
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


33.0,0.02139575380614489
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


25.0,0.015271064489666863
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


38.0,0.08661188469523873
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
print("HelloWorld")

34.0,0.012621903080058505
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


7.0,0.003631211432941983
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


17.0,0.004898377452539293
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


43.0,0.007996149177107337
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


50.0,0.010530789901146753
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


54.0,0.008106553132984362
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


37.0,0.018549759129702692
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


27.0,0.016997154618975996
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


109.0,0.044078018719880374
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


38.0,0.01674351792203599
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
import random
print(random.random()*100)
```


40.0,0.016286662097187432
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


36.0,0.022275087609192834
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


43.0,0.025147536501624712
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


37.0,0.018107888561779473
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


38.0,0.020440212342476505
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


45.0,0.0227411790986074
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


36.0,0.020086980365932816
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


24.0,0.020697825693385408
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


29.0,0.012166464237473584
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


29.0,0.022989330398549
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


68.0,0.031095445722277404
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


36.0,0.07515290721484069
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

43.0,0.07884789892657129
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

39.0,0.10656956450099231
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

29.0,0.04032438442066
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

40.0,0.08584161562898474
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

33.0,0.051693175540166614
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


36.0,0.04580708240032172
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


52.0,0.027351257085560188
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


36.0,0.019129220985036888
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


53.0,0.025887498450863466
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


29.0,0.016611989407064653
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


28.0,0.016327826175699056
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


39.0,0.020085952097391058
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


34.0,0.012236584475163514
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


32.0,0.010032434267948087
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


0.0,-2.220446049250313e-16
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


21.0,0.015321935569367895
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


39.0,0.03994540076341169
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


55.0,0.01262668175415238
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


63.0,0.03025414322447395
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


36.0,0.017177472158029894
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


28.0,0.02460231770054766
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


27.0,0.02800822714148632
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


36.0,0.013267441150963233
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


68.0,0.046783591689159576
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


43.0,0.035948488241095644
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


43.0,0.041616015824299746
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


52.0,0.053911141917987404
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


28.0,0.04943115667518283
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


48.0,0.04532350945946506
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


95.0,0.08719945546404229
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


39.0,0.015886529142885353
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

32.0,0.027961431049103425
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

114.0,0.06365968787967746
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


46.0,0.023346726316094912
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


36.0,0.011689594904979894
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


35.0,0.021511787357636702
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

48.0,0.035835778256175566
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


38.0,0.02039449460177567
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


37.0,0.011904415588862016
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


35.0,0.022542369494637948
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


37.0,0.021725960244573517
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


37.0,0.06380767998110637
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

39.0,0.025999100127880648
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


31.0,0.025087130338149133
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

21.0,0.009225694503782633
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


29.0,0.014360381695862956
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


27.0,0.013934900534500971
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


26.0,0.013512068206238181
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

28.0,0.012660322727505391
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


30.0,0.012629245855612092
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

28.0,0.01298885079662615
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

26.0,0.013994761027310565
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

35.0,0.051983819884644955
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


40.0,0.03248186962490207
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

30.0,0.017271117226998256
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

39.0,0.0717491106979774
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


36.0,0.07018074750140835
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


39.0,0.05539733260191948
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

34.0,0.02319204778359918
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


32.0,0.02616035048078047
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


32.0,0.016369980091822778
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


25.0,0.026451462606318255
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


40.0,0.02968597344758417
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

40.0,0.03096902453631989
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


50.0,0.037008919836078125
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


42.0,0.02223115543720855
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


35.0,0.021213064918387592
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


38.0,0.028236588709196875
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


28.0,0.021282678336404515
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


28.0,0.025758500497403136
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


34.0,0.011040662277420621
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


37.0,0.01909561838944085
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


26.0,0.011683723334569907
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


42.0,0.0662270392290728
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
print("HelloWorld")

16.0,0.004401578024754493
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


36.0,0.013430563090161884
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


39.0,0.011766552814886921
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


54.0,0.013459416619026054
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


49.0,0.020270321306285366
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


53.0,0.014802709357680577
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


38.0,0.01818292597443749
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


34.0,0.011964197473070204
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


107.0,0.06139213928226772
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


42.0,0.009719119086085581
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
import random
print(random.random()*100)
```


43.0,0.008998585083835886
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


37.0,0.01974596946348639
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


39.0,0.023709883050431313
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


41.0,0.012334700902971618
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


36.0,0.01755944849628477
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


40.0,0.020687787154117343
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


42.0,0.015486447603393017
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


32.0,0.02339324774670737
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


37.0,0.0073626117294089966
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


34.0,0.0217672032723919
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


56.0,0.042448106643300565
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


33.0,0.08001168428310024
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

34.0,0.0849410121757408
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

34.0,0.1093440614251523
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

30.0,0.02897360695802198
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

34.0,0.0866058132615175
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

33.0,0.05692523787087733
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


33.0,0.05312512318564222
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


46.0,0.04383604276751485
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


42.0,0.03322946979940766
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


43.0,0.029284091124886835
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


30.0,0.009995904466020611
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


29.0,0.009976819357952693
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


41.0,0.01774273927468517
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


32.0,0.01626854701302427
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


26.0,0.017380676922730265
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


21.0,0.015321935569367895
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


0.0,-2.220446049250313e-16
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


32.0,0.029833908031669965
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


55.0,0.01595481469610016
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


67.0,0.021545544026724817
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


20.0,0.01404618395611934
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


20.0,0.024107805467146748
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


20.0,0.01391349784597351
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


29.0,0.011740137802263462
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


71.0,0.03249849863297549
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


41.0,0.026918160579398553
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


41.0,0.031616437815037424
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


55.0,0.029589823341008126
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


22.0,0.027948735906490274
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


44.0,0.03545776278975099
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


95.0,0.07450820074272324
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


35.0,0.0161489499194718
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

35.0,0.039019878706497924
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

112.0,0.05527955385599581
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


42.0,0.014939810815963739
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


25.0,0.01854573550577643
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


30.0,0.019132358707343422
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

48.0,0.02700429325415654
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


30.0,0.017277529881203124
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


27.0,0.012966001453890152
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


25.0,0.017611386847037003
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


30.0,0.01373812551028919
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


36.0,0.043341244835935044
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

25.0,0.02554901629531159
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


28.0,0.01772311754216782
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

15.0,0.0122636845104791
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


26.0,0.012339546367194032
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


22.0,0.013940609062529141
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


16.0,0.014021993600029425
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

20.0,0.016019907066843975
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


22.0,0.015542473159325776
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

20.0,0.01608343632681586
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

19.0,0.014088284627895908
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

21.0,0.02795521117528621
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


38.0,0.017221397636155822
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

21.0,0.019026963963163168
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

33.0,0.04439369499745638
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


30.0,0.04307081479055974
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


38.0,0.034014972763588
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

24.0,0.01641134418117085
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


22.0,0.017237970318362716
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


19.0,0.021063804247818618
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


11.0,0.020932074518813293
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


31.0,0.02488872781566598
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

36.0,0.025988641223754883
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


46.0,0.035347923039514506
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


31.0,0.034714306541294926
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


26.0,0.024814544664095828
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


28.0,0.03268457600967256
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


18.0,0.0113483319793648
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


18.0,0.011889654820041229
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


25.0,0.015714892184952367
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


25.0,0.014014016409808927
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


16.0,0.009346630682526835
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


31.0,0.07947734241896165
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
print("HelloWorld")

27.0,0.018175726726350816
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


27.0,0.023794797381543553
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


37.0,0.015674615537435432
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


55.0,0.01476453329432259
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


48.0,0.02801842328633042
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


52.0,0.022378693393611537
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


31.0,0.01951260125071108
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


24.0,0.016986248888562483
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


108.0,0.05407878561073798
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


31.0,0.016995562286837185
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
import random
print(random.random()*100)
```


32.0,0.017211274599478243
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


29.0,0.019718964109923798
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


34.0,0.02272422075846603
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


29.0,0.016881732158532725
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


31.0,0.017160306723399743
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


36.0,0.022236838976324336
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


30.0,0.019696648698669827
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


18.0,0.011598020510611873
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


25.0,0.013025852813072225
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


21.0,0.00974794425646519
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


62.0,0.0352301014511236
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


28.0,0.052336547853085724
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

34.0,0.056131522771952325
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

28.0,0.07480771923598306
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

19.0,0.03642378891760556
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

28.0,0.05876193659416651
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

26.0,0.0337855184528123
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


24.0,0.02962171232036004
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


44.0,0.031071428654997013
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


33.0,0.026268988978309538
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


42.0,0.016106758509149777
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


20.0,0.01717815208366502
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


19.0,0.015671293922718932
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


31.0,0.019552587452116965
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


53.0,0.026332102113089118
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


39.0,0.025802114826833367
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


39.0,0.03994540076341169
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


32.0,0.029833908031669965
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


0.0,-2.220446049250313e-16
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


67.0,0.03415448305320279
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


81.0,0.022214513292152294
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


42.0,0.03943245243349991
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


36.0,0.01583153976453
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


45.0,0.03174352931099178
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


49.0,0.019222607634595157
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


78.0,0.025093241456185633
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


56.0,0.0124276978951664
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


56.0,0.013911898007823775
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


67.0,0.03263473569409847
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


48.0,0.04097722745927168
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


61.0,0.01411280539320836
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


99.0,0.03642386859148483
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


47.0,0.02207997834116593
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

47.0,0.02325002689964928
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

125.0,0.02875085992925097
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


52.0,0.01824705590195963
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


39.0,0.042044208466553434
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


38.0,0.019612266366928255
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

42.0,0.011764573084422358
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


43.0,0.034373771984814505
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


41.0,0.0326489896270048
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


43.0,0.028744908093333743
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


44.0,0.025521414557460154
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


51.0,0.014199364993072505
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

41.0,0.01623291959098938
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


45.0,0.015611619321622805
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

41.0,0.030662540722501852
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


44.0,0.02669410318672405
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


41.0,0.029110427566327868
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


41.0,0.03289737395946535
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

43.0,0.03664176784613793
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


45.0,0.03484301012715585
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

43.0,0.03568082877664658
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

42.0,0.03298697116896987
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

44.0,0.03530288814803062
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


56.0,0.025333646700054002
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

43.0,0.02986101524223128
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

51.0,0.04864455322131578
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


49.0,0.04824985674033322
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


55.0,0.037988199451451155
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

44.0,0.034965764187674386
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


42.0,0.03610701950359252
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


29.0,0.026427901088352357
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


33.0,0.02685567126838795
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


29.0,0.007129297098465437
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

27.0,0.00562382648068438
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


40.0,0.007902015867024437
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


52.0,0.06282312991896999
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


38.0,0.02611685406060893
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


37.0,0.019136989356494327
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


41.0,0.030970220088587963
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


41.0,0.03057105689214512
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


42.0,0.04422362103463995
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


46.0,0.03820511438996521
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


41.0,0.035977984519703465
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


51.0,0.11622793677106169
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
print("HelloWorld")

46.0,0.04188998425220569
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


41.0,0.024161005691896276
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


45.0,0.023773481473817526
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


63.0,0.021186609504439624
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


57.0,0.020120300952106818
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


60.0,0.019522287127271665
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


51.0,0.0330050343935141
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


43.0,0.045525505935812616
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


112.0,0.024548738448679108
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


49.0,0.04518155944785485
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
import random
print(random.random()*100)
```


51.0,0.04574365061258068
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


49.0,0.03702750794105547
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


52.0,0.035614017637548345
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


49.0,0.04240039743834867
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


50.0,0.03506439636583569
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


53.0,0.03792146531794727
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


47.0,0.04452371655334686
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


36.0,0.03047986273122083
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


42.0,0.03519867500384921
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


44.0,0.032203439194382844
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


70.0,0.016334761833996847
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


47.0,0.058715329022592244
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

53.0,0.05891198816427434
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

49.0,0.07618813822816706
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

42.0,0.06188918137856936
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

50.0,0.06496386455890835
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

45.0,0.043886562378124716
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


47.0,0.03880244744933914
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


58.0,0.01129471300001128
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


36.0,0.008863007542594059
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


56.0,0.021065073497434028
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


44.0,0.04876057603478212
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


43.0,0.04789912193181578
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


50.0,0.04470127886443365
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


57.0,0.010652678425385198
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


61.0,0.01355317120335564
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


55.0,0.01262668175415238
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


55.0,0.01595481469610016
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


67.0,0.03415448305320279
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


0.0,-2.220446049250313e-16
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


69.0,0.016596252990659255
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


50.0,0.012061740645908037
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


58.0,0.024529134073420167
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


48.0,0.02007548700522932
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


40.0,0.008961588170507184
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


77.0,0.03325130624275108
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


68.0,0.027897640848173144
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


68.0,0.032652394745776525
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


61.0,0.04285708594219517
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


55.0,0.0488053374622156
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


58.0,0.03536256153394013
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


79.0,0.06752654257659207
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


58.0,0.013265983424614713
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

62.0,0.032761494208499164
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

104.0,0.049098366307995356
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


59.0,0.012464375480275125
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


65.0,0.015986526446191585
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


61.0,0.015397026106304335
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

65.0,0.02475943487439214
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


71.0,0.023129531921377344
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


68.0,0.015715092511596085
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


66.0,0.02117590564163585
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


69.0,0.020189043895222802
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


58.0,0.05137569279500853
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

69.0,0.025052679108435894
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


68.0,0.02288426857522219
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

63.0,0.012969521498931602
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


59.0,0.013119212514575596
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


59.0,0.013335492699206197
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


63.0,0.012348113105384861
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

63.0,0.011354094534431147
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


64.0,0.010371892480338096
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

63.0,0.010827384035845378
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

61.0,0.011283397690342922
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

64.0,0.03978414577740852
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


63.0,0.02023294108026208
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

67.0,0.018878636656254555
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

66.0,0.06343300254070383
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


64.0,0.061704144215240064
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


66.0,0.04230169055626609
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

69.0,0.026994588502062933
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


67.0,0.028911903971918007
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


65.0,0.017059631779297146
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


59.0,0.01943176748194131
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


68.0,0.02617854424055055
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

64.0,0.027854609941245112
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


65.0,0.03126229816571646
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


78.0,0.03614289474711896
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


66.0,0.01754480657263069
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


71.0,0.027700427708326925
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


56.0,0.013747420058256465
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


56.0,0.0185050280650082
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


62.0,0.013015138747071053
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


72.0,0.024534160677894046
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


62.0,0.015572760507264527
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


77.0,0.09684252394128323
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
print("HelloWorld")

56.0,0.013615223622651329
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


64.0,0.016500089058505973
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


63.0,0.011715138204718367
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


63.0,0.00798225924350604
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


57.0,0.01733450039224227
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


64.0,0.01235008852912134
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


71.0,0.019447634293579652
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


67.0,0.01909350738134452
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


102.0,0.04811170765281103
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


72.0,0.018199600843255892
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
import random
print(random.random()*100)
```


73.0,0.017807024688108908
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


66.0,0.017795992030377406
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


71.0,0.01972725974688949
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


68.0,0.01627734890683208
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


68.0,0.015959355751655413
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


70.0,0.017297153416049427
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


70.0,0.0207036518961472
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


55.0,0.018130375886506234
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


65.0,0.01121774721971458
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


65.0,0.021615018058178004
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


58.0,0.02874314155547464
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


63.0,0.07063555123944387
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

65.0,0.07401403090760428
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

63.0,0.10160906983487694
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

61.0,0.029695030369158437
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

63.0,0.07751163168125585
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

63.0,0.04829363910362483
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


65.0,0.036740168632218406
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


59.0,0.03236241843004439
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


63.0,0.025760764583269258
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


62.0,0.0188287106292091
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


65.0,0.020698642452467664
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


64.0,0.019468428502261492
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


66.0,0.015305199226096411
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


80.0,0.019479542983581677
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


83.0,0.025850807836290346
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


63.0,0.03025414322447395
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


67.0,0.021545544026724817
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


81.0,0.022214513292152294
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


69.0,0.016596252990659255
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


0.0,1.1102230246251565e-16
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


79.0,0.022860401200518465
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


76.0,0.027997567621207087
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


71.0,0.01996536555405204
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


66.0,0.014789253355786403
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


81.0,0.018483618869002072
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


77.0,0.013429515433785011
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


77.0,0.015450528570681188
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


62.0,0.02452315039744213
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


78.0,0.03535504127893774
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


62.0,0.02052079089079306
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


82.0,0.04162677746553001
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


80.0,0.01906027033917279
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

76.0,0.03438417644868741
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

94.0,0.02933832999051489
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


63.0,0.008794204392027716
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


89.0,0.032126442073197814
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


79.0,0.017867179740450267
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

78.0,0.014478371617336006
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


93.0,0.02593523357444616
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


91.0,0.028371369771790445
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


89.0,0.023490689083393912
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


91.0,0.0222605972826333
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


65.0,0.026950791246465933
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

90.0,0.02406465827927229
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


77.0,0.019500222323664884
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

77.0,0.02209470870419805
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


71.0,0.01771212154694679
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


71.0,0.01980832624971851
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


79.0,0.02233355098303791
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

78.0,0.023824924163242445
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


80.0,0.022465343004205773
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

78.0,0.023051308913256463
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

78.0,0.020395495628511173
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

74.0,0.025517200148834185
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


72.0,0.012592922200010404
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

83.0,0.03028357504833945
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

83.0,0.041619888698323115
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


83.0,0.04031243071387747
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


83.0,0.025760048575698247
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

88.0,0.025207842157517035
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


87.0,0.02578499244841448
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


82.0,0.0277047756539488
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


75.0,0.02283624382644467
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


86.0,0.02163081174131576
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

83.0,0.018882430947346762
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


84.0,0.023414744232217233
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


97.0,0.055517225066642695
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


85.0,0.02752821557094165
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


90.0,0.033896565778465115
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


76.0,0.01844465967902742
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


76.0,0.018898193823824516
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


88.0,0.03308258596297742
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


91.0,0.029389183375437278
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


81.0,0.02706013422142428
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


97.0,0.11637440323058135
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
print("HelloWorld")

67.0,0.03169654627845553
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


85.0,0.027550984902570352
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


83.0,0.01906416462828442
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


76.0,0.011894000747288302
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


68.0,0.020623768937848563
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


70.0,0.016745771109125784
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


89.0,0.02235833547197197
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


88.0,0.03641719354411166
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


102.0,0.025380183445259163
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


95.0,0.03632639224022571
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
import random
print(random.random()*100)
```


96.0,0.03736258560405503
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


89.0,0.021067233994203738
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


90.0,0.020430327476749888
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


94.0,0.029279426109997675
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


90.0,0.018963016905314878
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


91.0,0.0204651452519643
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


94.0,0.03216582320841377
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


79.0,0.02079027152873425
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


89.0,0.024766880738573915
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


85.0,0.020386435345095766
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


57.0,0.011434374618566556
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


81.0,0.04791220739088109
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

82.0,0.048363408635090366
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

78.0,0.07103518705764511
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

75.0,0.03600887955300358
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

78.0,0.05472941034671441
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

81.0,0.032090978907294954
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


76.0,0.022536932481851513
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


78.0,0.015531834891986507
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


78.0,0.01689775203468158
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


78.0,0.0138733799671098
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


84.0,0.042308653637624705
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


82.0,0.04041820690934206
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


94.0,0.02587907081423313
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


32.0,0.014240706491798316
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


27.0,0.01889140845488735
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


36.0,0.017177472158029894
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


20.0,0.01404618395611934
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


42.0,0.03943245243349991
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


50.0,0.012061740645908037
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


79.0,0.022860401200518465
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


0.0,-2.220446049250313e-16
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


26.0,0.03168914382603916
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


20.0,0.01348682220233366
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


29.0,0.015401567862980303
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


75.0,0.03538802782602701
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


51.0,0.033426847720374964
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


51.0,0.03673654270904536
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


69.0,0.04664158752968983
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


21.0,0.040583175086359
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


61.0,0.04416579429865686
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


94.0,0.07552631212389593
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


36.0,0.023787150613578723
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

42.0,0.04619092717318096
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

123.0,0.0592931357968034
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


50.0,0.016773921880731235
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


21.0,0.014987787885002324
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


38.0,0.022353703079412313
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

51.0,0.03107602861538128
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


25.0,0.01932075971601499
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


23.0,0.011824761549805718
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


25.0,0.017481983331694817
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


25.0,0.016930283665530843
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


51.0,0.05602393720018495
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

25.0,0.02937482133603586
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


38.0,0.023859105611706344
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

29.0,0.013131296550524474
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


37.0,0.013713528021484511
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


33.0,0.01381495887587647
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


24.0,0.012847765700823577
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

26.0,0.01194330099809393
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


28.0,0.011907263855490124
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

26.0,0.012216347893493906
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

22.0,0.011510823519111812
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

35.0,0.03843415472229894
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


50.0,0.02347355005211904
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

26.0,0.02025380024818435
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

36.0,0.060775330119461235
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


34.0,0.059048403411391615
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


43.0,0.04094130761299719
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

21.0,0.021313086514949675
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


19.0,0.02231022092004442
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


22.0,0.021617250001817467
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


23.0,0.02273933869880984
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


31.0,0.03243877525283301
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

40.0,0.0346395679514544
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


50.0,0.04152188096507137
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


28.0,0.032914914837326226
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


28.0,0.02603431307347559
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


26.0,0.03957708338681132
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


24.0,0.01441088498747145
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


24.0,0.016968910267937565
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


20.0,0.010774638231318523
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


22.0,0.017889291451811395
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


18.0,0.012633151216898453
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


27.0,0.08937906808816742
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
print("HelloWorld")

38.0,0.02260985082427469
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


27.0,0.02481178688104002
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


39.0,0.01839503089699701
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


60.0,0.01646716842890994
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


52.0,0.02602442071813671
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


58.0,0.02045519988692801
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


28.0,0.0181053503968297
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


18.0,0.014673008151699807
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


118.0,0.05747884620642363
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


27.0,0.015185474158397327
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
import random
print(random.random()*100)
```


28.0,0.01708851606206807
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


30.0,0.013623113578761226
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


36.0,0.017435103370826988
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


25.0,0.012429600146982578
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


32.0,0.01347319759177934
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


37.0,0.016753049077267046
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


26.0,0.014327017044792889
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


15.0,0.01584537818427434
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


20.0,0.010734899329000736
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


21.0,0.01776220089540037
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


73.0,0.036459085009559966
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


30.0,0.06636883917189929
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

39.0,0.07051355002422288
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

36.0,0.09543443392588957
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

22.0,0.034611863533016485
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

37.0,0.07598911894001747
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

28.0,0.042905518630291795
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


38.0,0.034197819045460265
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


49.0,0.03734870068770124
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


40.0,0.03158407468697866
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


44.0,0.01980736821079354
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


22.0,0.02050303305877077
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


21.0,0.01865752617006944
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


26.0,0.011139690031938931
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


31.0,0.015137079744601212
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


33.0,0.014031890110633993
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


28.0,0.02460231770054766
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


20.0,0.024107805467146748
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


36.0,0.01583153976453
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


58.0,0.024529134073420167
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


76.0,0.027997567621207087
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


26.0,0.03168914382603916
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


0.0,0.0
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


27.0,0.03506936528628035
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


40.0,0.008608373448608875
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


72.0,0.03399712688738399
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


46.0,0.017561987321462524
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


46.0,0.021429030526188275
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


63.0,0.04761259817071861
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


28.0,0.05121013542036723
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


53.0,0.012375391743140396
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


98.0,0.0460005056415802
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


24.0,0.012004170305254136
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

33.0,0.009084902652103932
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

116.0,0.03246687546357796
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


47.0,0.020725245861568875
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


29.0,0.03148246120864229
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


36.0,0.018917359834085823
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

45.0,0.023206160557911804
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


32.0,0.03571638990225867
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


28.0,0.02627438822798278
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


30.0,0.03208986273353276
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


31.0,0.027270656062261645
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


44.0,0.025813251551021987
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

34.0,0.010581966529364606
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


39.0,0.016296806521715723
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

26.0,0.025402103604261872
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


31.0,0.024531030382964114
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


27.0,0.025680219734586784
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


23.0,0.024874158836740934
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

27.0,0.02683538160585741
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


29.0,0.02526599425620768
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

27.0,0.02580510889778731
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

26.0,0.026171496398423977
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

32.0,0.04596231327834721
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


38.0,0.029413559751962137
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

31.0,0.018327233097352846
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

33.0,0.06385640547502569
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


32.0,0.06284937141181357
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


39.0,0.04951904828061959
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

31.0,0.03585195523922502
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


28.0,0.038421814143533295
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


27.0,0.02024072844185032
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


23.0,0.026857264637733524
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


34.0,0.01613931644414568
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

34.0,0.015594289188498256
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


45.0,0.016873572787570956
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


36.0,0.04730407860870667
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


31.0,0.014392944336327318
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


29.0,0.01622865469537682
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


24.0,0.02832980095178106
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


24.0,0.03097592975853669
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


26.0,0.03130737360627556
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


30.0,0.033066500561128365
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


21.0,0.02903358157685587
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


35.0,0.1043442552357946
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
print("HelloWorld")

36.0,0.026971465944387263
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


33.0,0.00969775431490949
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


42.0,0.014506734802856469
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


62.0,0.01559906807485889
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


54.0,0.010338888429613169
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


59.0,0.011852818511716712
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


33.0,0.02269103198840694
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


26.0,0.03633275193076402
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


114.0,0.03211785877557605
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


33.0,0.03336755489414489
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
import random
print(random.random()*100)
```


36.0,0.03316444999758217
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


34.0,0.03443348592994799
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


40.0,0.03581941483018469
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


30.0,0.03496720092124583
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


36.0,0.03205234303114146
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


42.0,0.03534101216653496
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


32.0,0.03763390770506436
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


25.0,0.02736072346089269
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


25.0,0.025558890822576563
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


27.0,0.030112089754906757
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


62.0,0.022862943121279233
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


30.0,0.06994542314815289
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

36.0,0.0727716948374253
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

34.0,0.09500865612522102
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

24.0,0.05463913499500794
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

33.0,0.07828336158307247
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

28.0,0.05113479253903275
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


37.0,0.047445217242956916
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


43.0,0.016477857756399206
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


38.0,0.016846733596351804
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


43.0,0.024313095673610285
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


25.0,0.03280372814483612
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


23.0,0.03213907136919192
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


32.0,0.038121022374447144
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


37.0,0.01892675524875609
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


30.0,0.027430895780510944
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


27.0,0.02800822714148632
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


20.0,0.01391349784597351
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


45.0,0.03174352931099178
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


48.0,0.02007548700522932
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


71.0,0.01996536555405204
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


20.0,0.01348682220233366
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


27.0,0.03506936528628035
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


0.0,1.1102230246251565e-16
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


34.0,0.019124241881543047
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


78.0,0.02067912133110239
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


49.0,0.028242388210731884
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


49.0,0.02886747924847821
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


64.0,0.025616791331853572
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


20.0,0.01803358946087308
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


56.0,0.04069253599663836
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


95.0,0.07000155841062561
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


32.0,0.023168323858305584
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

37.0,0.050524206181494
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

116.0,0.057286248580166066
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


46.0,0.01571209599159107
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


28.0,0.02622077050239513
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


37.0,0.026748651219935637
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

51.0,0.027177134199562136
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


30.0,0.01980764247278255
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


31.0,0.019446832476968545
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


32.0,0.013927246328924392
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


32.0,0.015313633711338093
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


46.0,0.04285087959276823
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

35.0,0.03010280503387397
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


36.0,0.022862637480662862
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

29.0,0.02164193009290638
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


35.0,0.01875979752226442
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


31.0,0.021348818518912682
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


28.0,0.023734655625488266
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

30.0,0.026291955859948923
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


32.0,0.02508830443305421
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

30.0,0.025891066784002437
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

28.0,0.022229492786844274
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

35.0,0.022854752050219918
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


47.0,0.016797913159623312
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

30.0,0.02748467070315319
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

35.0,0.03271058038906327
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


34.0,0.03199641710955825
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


39.0,0.02206259664381205
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

29.0,0.013582506214789958
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


28.0,0.013326620340478934
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


30.0,0.0324980940787557
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


26.0,0.028132838415861894
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


36.0,0.025828880414071942
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

42.0,0.027520480266674863
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


50.0,0.04117932816278724
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


36.0,0.0454040411816673
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


35.0,0.03556714261653571
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


33.0,0.042030276950240864
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


23.0,0.014485134194128446
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


23.0,0.013183451462046247
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


25.0,0.0242816805893038
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


30.0,0.02272848202759281
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


20.0,0.019184724691109434
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


35.0,0.09447487367606833
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
print("HelloWorld")

34.0,0.02879629962745367
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


33.0,0.03523915892991514
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


41.0,0.02423926554990319
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


61.0,0.019405106739050715
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


58.0,0.03644889777916105
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


62.0,0.02923602739186848
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


35.0,0.0220526000336847
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


25.0,0.025907018747427513
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


114.0,0.0531441060366149
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


34.0,0.026956361002448248
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
import random
print(random.random()*100)
```


36.0,0.027894643449822287
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


35.0,0.013428073997806433
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


38.0,0.01490601114095702
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


31.0,0.017750914387149708
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


36.0,0.012596127646777644
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


39.0,0.01666543606736104
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


33.0,0.019856313794979652
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


24.0,0.018298327709839968
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


25.0,0.02110442899255971
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


30.0,0.014299401605395223
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


68.0,0.029917863095361374
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


29.0,0.039975220670912526
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

38.0,0.04283381725247837
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

36.0,0.05651888587422471
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

29.0,0.034795305802764576
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

35.0,0.04329734198491042
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

27.0,0.025307116333969093
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


36.0,0.024490330344579037
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


47.0,0.03069514163267273
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


43.0,0.030021495239183293
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


33.0,0.012839718147409918
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


23.0,0.033270722885276216
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


22.0,0.03227263552431414
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


32.0,0.019689224036106734
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


33.0,0.006761931462448634
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


43.0,0.009224231462168997
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


36.0,0.013267441150963233
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


29.0,0.011740137802263462
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


49.0,0.019222607634595157
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


40.0,0.008961588170507184
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


66.0,0.014789253355786403
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


29.0,0.015401567862980303
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


40.0,0.008608373448608875
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


34.0,0.019124241881543047
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


0.0,0.0
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


58.0,0.024422986946916136
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


51.0,0.01618045602405449
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


51.0,0.020746931485146836
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


59.0,0.033554235621314876
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


33.0,0.034930908900186464
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


47.0,0.018723654754469576
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


71.0,0.051886954950935094
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


46.0,0.007067724766170458
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

41.0,0.015319521553330273
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

103.0,0.03723242105950075
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


46.0,0.01046426035254222
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


47.0,0.01994796354684014
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


42.0,0.012699820036219056
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

54.0,0.01839643653503753
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


52.0,0.022262162520205298
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


50.0,0.014950231710818773
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


47.0,0.018136281541221266
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


51.0,0.015747881111972784
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


47.0,0.03069785887640486
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

48.0,0.011671047433680526
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


46.0,0.013673399923050056
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

38.0,0.013538403204732874
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


42.0,0.012661769790488608
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


40.0,0.014142024907470852
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


40.0,0.013651437408492506
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

44.0,0.014887379582599447
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


46.0,0.013602597780766112
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

44.0,0.014137071848079441
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

40.0,0.014079220817526217
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

44.0,0.03174592952113364
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


51.0,0.015713611155462215
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

42.0,0.013344737333586543
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

48.0,0.04806055714086144
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


48.0,0.04732574252783994
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


48.0,0.0332509050123132
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

47.0,0.01992668764204064
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


46.0,0.022503268620083783
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


40.0,0.016337567303823297
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


37.0,0.0204305882114999
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


49.0,0.014812490607860607
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

50.0,0.01506972183055244
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


55.0,0.020547547343889083
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


57.0,0.035211428600782635
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


46.0,0.012692828258244693
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


50.0,0.017912726258577538
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


39.0,0.014558984822711452
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


39.0,0.01723879011317464
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


47.0,0.018700563999202613
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


51.0,0.021588445145492297
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


40.0,0.017392219182900015
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


56.0,0.0888497665346053
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
print("HelloWorld")

42.0,0.014326151294864808
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


46.0,0.010085529107720204
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


47.0,0.008567935896797052
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


55.0,0.006457649690789324
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


47.0,0.01050632473504165
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


52.0,0.0077014266430481815
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


49.0,0.012571135398261268
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


47.0,0.024120364210312273
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


104.0,0.03484082081095419
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


56.0,0.02045951892029374
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
import random
print(random.random()*100)
```


56.0,0.019818026981026193
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


46.0,0.016900688002051245
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


48.0,0.01821532843219853
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


53.0,0.019475361909971234
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


45.0,0.014855851080568527
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


48.0,0.017427900963780774
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


54.0,0.022412752923588908
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


37.0,0.01602353955958824
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


47.0,0.013439468154212153
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


46.0,0.016142547808938756
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


62.0,0.019833830371384198
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


43.0,0.05351293564289028
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

46.0,0.056969907498013894
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

42.0,0.07958157617575201
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

38.0,0.03408849940983494
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

44.0,0.06137630000754135
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

45.0,0.03590354145959129
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


47.0,0.03235260108842908
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


48.0,0.016799263556975252
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


44.0,0.017629315052546835
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


50.0,0.012555735484409802
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


44.0,0.022606376791069804
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


44.0,0.021736941892060546
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


55.0,0.02193180072282086
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


52.0,0.022291324818921487
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


78.0,0.03865493841986245
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


68.0,0.046783591689159576
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


71.0,0.03249849863297549
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


78.0,0.025093241456185633
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


77.0,0.03325130624275108
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


81.0,0.018483618869002072
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


75.0,0.03538802782602701
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


72.0,0.03399712688738399
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


78.0,0.02067912133110239
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


58.0,0.024422986946916136
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


0.0,2.220446049250313e-16
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


66.0,0.020446951847730488
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


66.0,0.01904072737728202
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


79.0,0.019858332259934053
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


66.0,0.027803821321896405
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


67.0,0.025230376438106106
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


84.0,0.0427257989002916
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


75.0,0.02930096742289101
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

72.0,0.04549631112465502
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

106.0,0.03522482267064253
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


69.0,0.019296543489997653
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


83.0,0.044301952418528745
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


68.0,0.03116044316400135
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

78.0,0.02405266099169001
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


89.0,0.03588549146281361
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


86.0,0.037065758578720964
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


82.0,0.024708222478212583
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


87.0,0.02807327676205784
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


62.0,0.023632278867650736
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

76.0,0.026977910788178905
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


66.0,0.020522714298092937
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

70.0,0.03620727858569184
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


69.0,0.028363449332384327
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


70.0,0.03278683947547034
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


72.0,0.03595743476463942
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

73.0,0.040190558531414955
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


75.0,0.03844611904271156
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

73.0,0.03907325013266949
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

73.0,0.03567478520191547
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

69.0,0.019570841870973354
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


68.0,0.015780275536308674
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

68.0,0.03713279263624647
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

76.0,0.03297038821691889
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


80.0,0.033469986998183154
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


78.0,0.021488643459647738
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

77.0,0.026462588322229808
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


81.0,0.026676670190197482
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


79.0,0.04743054845903183
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


73.0,0.03735629386902928
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


81.0,0.023214804923122223
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

81.0,0.021937627281335415
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


84.0,0.03321183170677544
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


94.0,0.07329374038852243
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


80.0,0.04124522035134204
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


88.0,0.04625100007646399
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


78.0,0.028932239397479242
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


78.0,0.026098244608911525
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


85.0,0.05053376372036378
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


89.0,0.043840097260902544
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


79.0,0.04123006399888274
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


93.0,0.12201466351771395
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
print("HelloWorld")

72.0,0.045037845126355225
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


75.0,0.0411107166517628
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


73.0,0.029153014355525197
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


75.0,0.022680186937098723
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


69.0,0.035679302143550085
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


68.0,0.030496052948515318
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


84.0,0.030902707751150227
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


84.0,0.05410158576781099
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


107.0,0.03201015448243849
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


90.0,0.05026905176776608
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
import random
print(random.random()*100)
```


89.0,0.05153743595764437
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


81.0,0.024350421566478153
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


74.0,0.02177290802312115
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


89.0,0.037759144902122954
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


81.0,0.024188619190220195
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


74.0,0.025229774337459876
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


91.0,0.03974040493465836
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


76.0,0.029877643949958732
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


86.0,0.04053896370632981
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


80.0,0.029384777899127856
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


73.0,0.017980288913888476
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


78.0,0.04041549446744974
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

72.0,0.03970566922070784
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

74.0,0.04915921359127784
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

79.0,0.05127902663008965
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

77.0,0.040103020605110284
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

80.0,0.03239471148516804
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


75.0,0.025681800778128205
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


68.0,0.01922805388112281
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


78.0,0.02558732570856892
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


71.0,0.015548368978144933
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


82.0,0.06092823151861526
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


81.0,0.059680771558402346
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


90.0,0.04123884315778503
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


48.0,0.02139941186908545
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


52.0,0.02457318136266018
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


43.0,0.035948488241095644
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


41.0,0.026918160579398553
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


56.0,0.0124276978951664
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


68.0,0.027897640848173144
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


77.0,0.013429515433785011
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


51.0,0.033426847720374964
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


46.0,0.017561987321462524
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


49.0,0.028242388210731884
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


51.0,0.01618045602405449
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


66.0,0.020446951847730488
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


0.0,0.0
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


0.0,0.0031962521176776004
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


61.0,0.027545430976584018
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


47.0,0.035743424102800514
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


58.0,0.010323589847311188
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


92.0,0.02852205068134317
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


52.0,0.018607838265190857
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

51.0,0.0256986901857994
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

101.0,0.02039614169792281
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


50.0,0.01258202905639616
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


51.0,0.03640700123283169
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


47.0,0.018495579131362905
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

60.0,0.012047672364872697
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


57.0,0.029593466575133065
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


58.0,0.03101569302879381
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


54.0,0.024402099432574653
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


57.0,0.022431384957327216
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


50.0,0.0142218904901249
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

54.0,0.01332621743639295
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


43.0,0.013548975925536388
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

43.0,0.027541969941051958
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


46.0,0.02344582264609174
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


45.0,0.025260051593909427
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


41.0,0.029640589332127876
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

39.0,0.03223831810847266
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


41.0,0.03067280163308106
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

39.0,0.03154384721356629
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

41.0,0.028226602783744115
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

47.0,0.031032997451139188
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


51.0,0.019901063590513357
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

46.0,0.02416603828689179
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

54.0,0.04529511971550171
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


53.0,0.044659114761591345
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


54.0,0.0325711966550174
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

51.0,0.0292961319642443
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


52.0,0.030297653832266125
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


51.0,0.027352949647326597
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


47.0,0.027306794689683
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


52.0,0.016189122753979657
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

52.0,0.01232574159951616
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


54.0,0.01656800132588354
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


64.0,0.058070241518840104
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


52.0,0.023654837886135316
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


57.0,0.02754512237027784
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


45.0,0.025462949575922877
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


45.0,0.024713028503889012
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


56.0,0.038600472519489615
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


58.0,0.03408746805096685
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


49.0,0.03203813781494791
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


63.0,0.11169146361004267
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
print("HelloWorld")

46.0,0.0370744544367092
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


52.0,0.023842455244525773
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


53.0,0.020255193472061173
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


69.0,0.017145424356353356
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


63.0,0.019355133948188885
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


67.0,0.01797548171648966
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


54.0,0.026100370093946834
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


56.0,0.041911259732732464
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


105.0,0.018646045006994405
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


60.0,0.04179304982930809
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
import random
print(random.random()*100)
```


60.0,0.042108253095270665
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


57.0,0.030428364494788696
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


58.0,0.02954148051548544
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


58.0,0.036245659923107465
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


56.0,0.02772149065370466
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


57.0,0.030604093493658335
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


60.0,0.037730247581873044
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


45.0,0.026005968232276078
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


57.0,0.031566019229683606
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


50.0,0.027610854091228765
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


65.0,0.012039082006998547
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


50.0,0.05315553351354818
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

51.0,0.05266348706367063
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

48.0,0.07443716351360186
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

51.0,0.05672950971657642
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

49.0,0.06289488803201315
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

50.0,0.03846402160193396
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


50.0,0.032658705827352974
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


53.0,0.009732882190767955
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


54.0,0.011320971853944428
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


50.0,0.01720803507087798
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


50.0,0.04557017158501009
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


50.0,0.043968506415410946
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


60.0,0.03751515938098948
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


48.0,0.024825913823826817
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


52.0,0.02870628398494668
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


43.0,0.041616015824299746
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


41.0,0.031616437815037424
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


56.0,0.013911898007823775
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


68.0,0.032652394745776525
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


77.0,0.015450528570681188
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


51.0,0.03673654270904536
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


46.0,0.021429030526188275
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


49.0,0.02886747924847821
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


51.0,0.020746931485146836
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


66.0,0.01904072737728202
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


0.0,0.0031962521176776004
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


0.0,0.0
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


61.0,0.02681062590965011
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


47.0,0.03547950592819882
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


58.0,0.011436445645377047
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


92.0,0.027517566876351318
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


52.0,0.02303399136843809
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

51.0,0.02990075144206883
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

101.0,0.019992153435185345
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


50.0,0.015485697156462752
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


51.0,0.04041302556514503
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


47.0,0.02219497074515797
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

60.0,0.01282695603274464
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


57.0,0.032056826948451356
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


58.0,0.03467544920858867
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


54.0,0.02568023894258098
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


57.0,0.024166281372671072
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


50.0,0.013799444029252261
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

54.0,0.014975764916447143
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


43.0,0.014252576012992124
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

43.0,0.03200521222984054
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


46.0,0.02728445298498028
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


45.0,0.029123294267933142
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


41.0,0.03439832488444938
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

39.0,0.03722071543941652
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


41.0,0.03568112265908252
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

39.0,0.03657903710287713
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

41.0,0.03317266136740038
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

47.0,0.029029851997771305
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


51.0,0.021371493568641653
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

46.0,0.026535799548242034
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

54.0,0.04347225591138548
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


53.0,0.04258814600056027
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


54.0,0.030819958222947363
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

51.0,0.0316163412647561
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


52.0,0.03192363186961722
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


51.0,0.03161567800810838
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


47.0,0.029338902168225545
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


52.0,0.017894147156255147
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

52.0,0.014532045658717574
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


54.0,0.019236002605937053
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


64.0,0.06262750163861575
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


52.0,0.026963224557601806
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


57.0,0.03162677982034734
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


45.0,0.02857188017557133
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


45.0,0.027113087240832945
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


56.0,0.04387433173329647
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


58.0,0.036846196702491896
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


49.0,0.035526424999736794
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


63.0,0.11459316193014635
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
print("HelloWorld")

46.0,0.04300082478906175
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


52.0,0.02815051186765616
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


53.0,0.02385410623572981
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


69.0,0.020789027581433195
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


63.0,0.023455114522750398
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


67.0,0.022326302444328427
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


54.0,0.028239288554723685
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


56.0,0.046671620579426976
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


105.0,0.018400270221702653
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


60.0,0.04659429944957072
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
import random
print(random.random()*100)
```


60.0,0.047350490871338136
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


57.0,0.03158782592602316
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


58.0,0.030140225273727617
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


58.0,0.04013299213800614
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


56.0,0.029340407724503192
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


57.0,0.03154790405388341
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


60.0,0.04116883784957681
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


45.0,0.029228182963173754
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


57.0,0.036077691790817545
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


50.0,0.029750939982073232
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


65.0,0.011972070880321928
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


50.0,0.0513185198133187
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

51.0,0.05014885539918701
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

48.0,0.07126297418654126
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

51.0,0.0593271887968565
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

49.0,0.06087391369843764
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

50.0,0.03780575547988296
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


50.0,0.032553758117752185
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


53.0,0.010816513812505035
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


54.0,0.012969193659413403
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


50.0,0.018682726953570317
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


50.0,0.0513533879596102
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


50.0,0.049934793250592024
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


60.0,0.040695498120996376
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


62.0,0.038923661804320164

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


64.0,0.04927807091721881

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


52.0,0.053911141917987404

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


55.0,0.029589823341008126

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


67.0,0.03263473569409847

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


61.0,0.04285708594219517

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


62.0,0.02452315039744213

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


69.0,0.04664158752968983

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


63.0,0.04761259817071861

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


64.0,0.025616791331853572

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


59.0,0.033554235621314876

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


79.0,0.019858332259934053

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


61.0,0.027545430976584018

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


61.0,0.02681062590965011

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


0.0,-2.220446049250313e-16

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


63.0,0.02195946307838348

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


64.0,0.03832942901705727

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


93.0,0.06254218629349584

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


65.0,0.037035906155372444

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

66.0,0.06056885990765326

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

102.0,0.053919270154098364

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


56.0,0.024368808346552084

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


72.0,0.05400353603626107

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


61.0,0.03703212540497747

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

56.0,0.028689004999069567

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


76.0,0.037125305993294

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


76.0,0.04433887407228543

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


74.0,0.028240612039143187

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


75.0,0.028703972386271648

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


58.0,0.030739489146188625

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

73.0,0.03957429314675398

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


64.0,0.028216738843080846

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

62.0,0.041963039205416997

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


60.0,0.03385793919764413

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


58.0,0.03855661847660796

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


63.0,0.044326252788604026

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

62.0,0.05020355780917252

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


64.0,0.04817136259999588

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

62.0,0.049046074479567325

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

61.0,0.04407553791907981

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

65.0,0.01738826076421185

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


62.0,0.019595994764267655

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

68.0,0.044511313744001524

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

72.0,0.02609812968855285

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


69.0,0.026056002515135956

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


73.0,0.021757012126690567

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

72.0,0.028362245870213187

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


71.0,0.027152139602879544

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


66.0,0.0526145460816434

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


60.0,0.040815677178746346

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


67.0,0.033151988579382285

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

63.0,0.031231120593374073

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


70.0,0.04616632989284608

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


82.0,0.07359789506867898

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


70.0,0.050662953152280754

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


74.0,0.05604262670541371

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


59.0,0.030078093151613472

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


59.0,0.02596828791610495

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


71.0,0.056211571305175956

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


76.0,0.04045215880407682

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


66.0,0.041497736122016904

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


82.0,0.11312967861574386

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
print("HelloWorld")

53.0,0.05115960272584452

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


65.0,0.05541376787971386

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


61.0,0.040152040168263015

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


67.0,0.033191353511235255

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


68.0,0.05341926040661782

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


70.0,0.04658326632339105

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


75.0,0.04077846711335231

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


72.0,0.05784081923762541

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


104.0,0.04864017490931938

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


78.0,0.05423505592804789

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
import random
print(random.random()*100)
```


78.0,0.05494903254569172

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


75.0,0.03579509473753728

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


74.0,0.03288346423210564

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


78.0,0.04620039550368571

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


75.0,0.033356117675787056

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


74.0,0.03581886353223451

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


79.0,0.04815080981296427

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


60.0,0.029759228258317894

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


72.0,0.04663741766142848

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


70.0,0.028598796292464534

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


61.0,0.02895570293219718

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


70.0,0.03537518565798925

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

72.0,0.034162983165182625

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

68.0,0.04409094673055369

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

63.0,0.057737444708515606

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

66.0,0.03726110069100763

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

67.0,0.028394427783372755

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


59.0,0.02602747333192501

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


63.0,0.02944518423941367

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


65.0,0.03538289253301141

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


60.0,0.017408016237233093

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


70.0,0.062405236900225924

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


68.0,0.06083221724893306

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


80.0,0.049290543504124096

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


30.0,0.03984075370163431

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


32.0,0.049298648937227685

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


28.0,0.04943115667518283

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


22.0,0.027948735906490274

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


48.0,0.04097722745927168

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


55.0,0.0488053374622156

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


78.0,0.03535504127893774

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


21.0,0.040583175086359

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


28.0,0.05121013542036723

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


20.0,0.01803358946087308

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


33.0,0.034930908900186464

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


66.0,0.027803821321896405

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


47.0,0.035743424102800514

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


47.0,0.03547950592819882

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


63.0,0.02195946307838348

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


0.0,-2.220446049250313e-16

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


57.0,0.051850573835398484

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


94.0,0.08081901088110732

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


37.0,0.04040580687329465

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

37.0,0.06597586011096312

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

118.0,0.07203276874574605

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


50.0,0.03188719053303046

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


31.0,0.052891024116155316

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


38.0,0.04889097652499397

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

51.0,0.04446571181507453

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


33.0,0.03188061072978565

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


30.0,0.04258482602280167

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


29.0,0.026690547603274717

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


32.0,0.029396258750670645

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


48.0,0.04489201886970984

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

34.0,0.04446970615312151

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


36.0,0.03319522407879116

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

28.0,0.04254473097438194

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


38.0,0.03714320839005725

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


34.0,0.04268924310605693

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


27.0,0.04963890455175923

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

30.0,0.05594810684128715

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


31.0,0.05399622856499009

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

30.0,0.05536420503474071

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

26.0,0.04961501067579155

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

36.0,0.025817301932439474

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


46.0,0.02838947430030736

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

29.0,0.04782329995711587

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

32.0,0.01708556796243077

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


33.0,0.018186091325768428

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


35.0,0.01940258780640569

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

27.0,0.014106664939006475

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


25.0,0.013981997654282208

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


30.0,0.060440551190477865

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


25.0,0.05565771025936472

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


35.0,0.03637130747208939

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

40.0,0.03602281503429072

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


51.0,0.06006364128009678

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


38.0,0.06411459603832104

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


34.0,0.05886566658051473

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


34.0,0.06374093154376603

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


22.0,0.031897521565171116

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


22.0,0.025672699735129534

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


29.0,0.05382426033469734

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


32.0,0.03998415384580889

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


22.0,0.04201014420850624

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


37.0,0.09540205522846201

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
print("HelloWorld")

32.0,0.04566982851074686

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


34.0,0.060120957719813184

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


42.0,0.04557954638752071

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


58.0,0.04032551316497268

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


53.0,0.06309676974810796

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


58.0,0.05395513595300794

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


31.0,0.036492339753698144

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


28.0,0.052378145788249286

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


113.0,0.0644700886828733

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


34.0,0.05104932424633757

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
import random
print(random.random()*100)
```


34.0,0.05052106186921612

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


26.0,0.0285002405000625

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


32.0,0.028112115248641212

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


32.0,0.03877280305073827

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


26.0,0.026675212467355935

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


33.0,0.032648357959595864

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


34.0,0.039921725886508996

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


23.0,0.035269818548457676

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


29.0,0.04568502247497619

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


31.0,0.02490819252421428

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


70.0,0.0453632691629523

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


20.0,0.02344546272898851

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

25.0,0.024969085524601087

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

23.0,0.02773327890120736

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

29.0,0.05387289778112436

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

28.0,0.027639196356152418

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

23.0,0.021196752824714893

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


40.0,0.03681463248570682

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


44.0,0.04080271296975735

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


44.0,0.04844423348701454

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


40.0,0.021147914515791122

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


24.0,0.057682775083992444

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


23.0,0.05738832345200606

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


35.0,0.04998365330867338

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


60.0,0.025767785483209238

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


62.0,0.028021775900508583

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


48.0,0.04532350945946506

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


44.0,0.03545776278975099

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


61.0,0.01411280539320836

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


58.0,0.03536256153394013

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


62.0,0.02052079089079306

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


61.0,0.04416579429865686

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


53.0,0.012375391743140396

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


56.0,0.04069253599663836

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


47.0,0.018723654754469576

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


67.0,0.025230376438106106

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


58.0,0.010323589847311188

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


58.0,0.011436445645377047

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


64.0,0.03832942901705727

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


57.0,0.051850573835398484

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


0.0,1.1102230246251565e-16

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


91.0,0.018473931321823622

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


54.0,0.021870638038955614

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

52.0,0.019187001858216646

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

70.0,0.009892017555072519

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


54.0,0.02131287587451569

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


65.0,0.04713486733377481

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


59.0,0.02221647717190678

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

60.0,0.01570884749096424

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


70.0,0.043745451730065166

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


68.0,0.041229540606698256

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


65.0,0.038962768497861844

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


69.0,0.034583198039032426

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


52.0,0.010897396316655206

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

64.0,0.014966098647935855

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


55.0,0.019475367708520208

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

53.0,0.03931997468737625

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


52.0,0.03441306783186082

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


52.0,0.03684958711889652

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


54.0,0.037700876072787826

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

54.0,0.04053771783106608

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


55.0,0.0384781856344687

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

54.0,0.0391830619144935

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

53.0,0.037481257954987246

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

51.0,0.039660514081695686

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


57.0,0.027601636318161926

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

55.0,0.031161391391672844

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

59.0,0.057379038212606925

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


59.0,0.056451161497751645

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


59.0,0.04196014394061798

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

62.0,0.04299812575319806

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


61.0,0.04399265074040426

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


59.0,0.03400658564553649

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


52.0,0.03370187798806057

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


65.0,0.020101028137549104

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

63.0,0.015985855663700144

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


66.0,0.013147826098844795

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


73.0,0.06934008186213969

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


63.0,0.024260997243909066

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


67.0,0.026832842125089074

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


57.0,0.034808763318985525

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


57.0,0.03580064884022505

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


65.0,0.04946443473051343

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


67.0,0.04537009492601862

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


56.0,0.044386088640111176

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


73.0,0.12949958809936635

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
print("HelloWorld")

50.0,0.04591294506367549

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


62.0,0.02319451780708115

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


63.0,0.023762979611730684

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


65.0,0.020801116711848033

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


57.0,0.01492058814638908

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


64.0,0.018227117369930657

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


65.0,0.03352865870690447

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


66.0,0.05479607858233926

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


98.0,0.010624496388556337

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


71.0,0.053942117163050196

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
import random
print(random.random()*100)
```


71.0,0.054484845343948485

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


62.0,0.040873314116480874

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


63.0,0.039869337976647934

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


68.0,0.05004669592146371

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


63.0,0.03870681032090362

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


64.0,0.040665292658199514

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


71.0,0.05171921293439963

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


57.0,0.03449684402311781

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


65.0,0.041622878224107374

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


63.0,0.037860775976519045

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


57.0,0.012625297632078203

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


57.0,0.0647523981033804

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

59.0,0.06475852026619988

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

57.0,0.08605955781411556

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

54.0,0.06969649135723999

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

57.0,0.07277165157463739

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

56.0,0.04930513436065731

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


55.0,0.04111916113607628

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


61.0,0.007540094988247259

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


60.0,0.01362910941759865

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


58.0,0.026414924197998513

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


60.0,0.05547625804382195

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


58.0,0.054132032048062606

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


69.0,0.04914505386215784

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


90.0,0.055737621326699904

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


103.0,0.0643551134127266

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


95.0,0.08719945546404229

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


95.0,0.07450820074272324

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


99.0,0.03642386859148483

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


79.0,0.06752654257659207

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


82.0,0.04162677746553001

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


94.0,0.07552631212389593

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


98.0,0.0460005056415802

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


95.0,0.07000155841062561

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


71.0,0.051886954950935094

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


84.0,0.0427257989002916

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


92.0,0.02852205068134317

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


92.0,0.027517566876351318

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


93.0,0.06254218629349584

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


94.0,0.08081901088110732

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


91.0,0.018473931321823622

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


0.0,0.0

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


96.0,0.05432008074301087

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

100.0,0.05378371750275046

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

111.0,0.009518053705264151

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


89.0,0.04698431390928348

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


111.0,0.08110472651105205

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


97.0,0.050525985559313535

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

98.0,0.03244405269302775

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


117.0,0.07397584092339182

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


114.0,0.07461982937249567

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


109.0,0.0662088594828093

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


115.0,0.0637011339181317

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


81.0,0.023360406241160425

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

109.0,0.04093043439648436

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


100.0,0.050770333487640706

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

100.0,0.07278259529232145

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


96.0,0.06447401264710562

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


96.0,0.06717608423377408

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


99.0,0.06969657323397538

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

102.0,0.0727969735637588

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


103.0,0.07111977072289055

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

102.0,0.07170276984897317

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

100.0,0.06798504930917804

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

102.0,0.06399067529908387

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


98.0,0.053988406782222165

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

101.0,0.06616559152123258

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

108.0,0.08371339569584557

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


108.0,0.0829782014994096

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


107.0,0.06508603410451319

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

110.0,0.07457188427390016

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


110.0,0.07434872172793061

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


106.0,0.06911816422462636

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


102.0,0.06450117652951337

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


108.0,0.04883714700739239

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

102.0,0.041732903653016296

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


100.0,0.032871757085041864

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


122.0,0.10908416048607616

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


107.0,0.054854166596201126

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


114.0,0.06091890022748769

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


101.0,0.062122974748842985

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


101.0,0.062441391660501666

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


108.0,0.08310054841280279

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


116.0,0.08408370989441216

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


107.0,0.08346518187401453

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


121.0,0.1731467354555083

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
print("HelloWorld")

94.0,0.087710075525539

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


106.0,0.0580660488300736

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


102.0,0.056883787157596455

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


95.0,0.05073477415952621

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


87.0,0.041909296222040204

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


87.0,0.04570898866712625

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


114.0,0.06694203424308154

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


112.0,0.09114917173153214

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


108.0,0.01062957484234639

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


116.0,0.09197936437386556

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
import random
print(random.random()*100)
```


116.0,0.09432906592214096

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


109.0,0.06891355638470564

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


108.0,0.0676830988268271

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


113.0,0.08174232232514567

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


109.0,0.06751888234301928

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


107.0,0.06956901224188294

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


116.0,0.08133527988902711

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


98.0,0.06678132867293363

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


111.0,0.07746258181186128

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


107.0,0.07202556040489139

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


89.0,0.030086352993273113

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


106.0,0.09280600629331637

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

106.0,0.09116313395874487

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

104.0,0.11110160832053129

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

103.0,0.11091631398598845

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

104.0,0.10021161112267929

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

106.0,0.07887939055328952

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


102.0,0.06602410508284273

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


84.0,0.025276513280522273

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


104.0,0.03440347490415585

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


96.0,0.05366549040401891

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


108.0,0.09848887039705001

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


108.0,0.09695398546135492

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


113.0,0.08058269631693948

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


39.0,0.011601254876800082
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


39.0,0.012867607459535524
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


39.0,0.015886529142885353
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


35.0,0.0161489499194718
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


47.0,0.02207997834116593
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


58.0,0.013265983424614713
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


80.0,0.01906027033917279
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


36.0,0.023787150613578723
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


24.0,0.012004170305254136
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


32.0,0.023168323858305584
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


46.0,0.007067724766170458
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


75.0,0.02930096742289101
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


52.0,0.018607838265190857
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


52.0,0.02303399136843809
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


65.0,0.037035906155372444
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


37.0,0.04040580687329465
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


54.0,0.021870638038955614
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


96.0,0.05432008074301087
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


0.0,-2.220446049250313e-16
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

46.0,0.018527225721237106
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

104.0,0.037172116747299144
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


51.0,0.0131748139321346
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


38.0,0.022351806479041003
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


45.0,0.015421333016346517
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

51.0,0.020824412424361616
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


40.0,0.025915462693952396
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


39.0,0.020421099636156126
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


40.0,0.023521414315684996
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


40.0,0.02235218155268126
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


45.0,0.03700732526289752
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

44.0,0.016970141484103696
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


46.0,0.0179697676008419
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

38.0,0.019235794646453863
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


42.0,0.01842582642337809
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


38.0,0.020224773321238065
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


34.0,0.020610067879899163
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

36.0,0.021443809050007423
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


37.0,0.02022835760879116
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

36.0,0.02106327339948877
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

33.0,0.019409884886516404
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

46.0,0.03906406117937933
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


47.0,0.021470718975964642
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

41.0,0.01629352789106897
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

48.0,0.05452884124895352
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


46.0,0.05351734779034334
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


48.0,0.03994501948052287
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

42.0,0.024832382184710622
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


40.0,0.027245109011866275
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


39.0,0.01911197496951189
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


35.0,0.025441638051606486
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


45.0,0.018851621338022984
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

43.0,0.017405514343594164
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


55.0,0.02284947227427503
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


49.0,0.03821919202100221
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 

```python
raise RuntimeError('something wrong')
```


41.0,0.016792161312124798
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


43.0,0.022476613465877482
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


29.0,0.01873221886675691
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


29.0,0.021542633993320126
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


38.0,0.02108690759140064
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


44.0,0.028993545035487234
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


34.0,0.020686412686042877
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


48.0,0.08694680313244174
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
print("HelloWorld")

43.0,0.016504391304632215
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


40.0,0.01280110080113972
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


49.0,0.011140342807308246
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


65.0,0.009013936289252955
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


59.0,0.013229936276466736
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


65.0,0.010434835427911793
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


45.0,0.019881095231903623
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


38.0,0.024580001101811133
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


115.0,0.03547291989043522
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


45.0,0.025134668350552114
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
import random
print(random.random()*100)
```


46.0,0.0243130477106569
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
import random
print(random.random()*100-5)
```


43.0,0.025259895262703336
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


47.0,0.027155206886112726
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


42.0,0.022016664496248173
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


44.0,0.022060840952237037
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


48.0,0.025013359449711614
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


43.0,0.025624615125269812
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
import random
print(random.randrange(7,16))
```


31.0,0.02053405019057175
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


37.0,0.016284251985922538
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


37.0,0.022330393809814608
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


67.0,0.024193416931364675
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


42.0,0.06260945225154413
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

47.0,0.06622502842709199
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

43.0,0.08658912493957738
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

36.0,0.038141868675879764
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

44.0,0.06848297174826812
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

40.0,0.04560188440115398
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


48.0,0.03986908936666289
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


50.0,0.02102441261724819
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


44.0,0.01831121078749376
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


45.0,0.017720932594523786
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


39.0,0.02279890778267446
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


37.0,0.022799448968272573
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


43.0,0.02324743591001477
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


40.0,0.021875219917376065
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


38.0,0.01787814528208942
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


32.0,0.027961431049103425
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


35.0,0.039019878706497924
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


47.0,0.02325002689964928
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


62.0,0.032761494208499164
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


76.0,0.03438417644868741
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


42.0,0.04619092717318096
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


33.0,0.009084902652103932
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


37.0,0.050524206181494
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


41.0,0.015319521553330273
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


72.0,0.04549631112465502
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


51.0,0.0256986901857994
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


51.0,0.02990075144206883
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


66.0,0.06056885990765326
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


37.0,0.06597586011096312
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


52.0,0.019187001858216646
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


100.0,0.05378371750275046
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


46.0,0.018527225721237106
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

0.0,0.0
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

114.0,0.038250361534827415
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


51.0,0.03363972276031091
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


39.0,0.03918870490180648
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


41.0,0.02579545148150153
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

52.0,0.03086894497598236
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


44.0,0.04565706409727699
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


41.0,0.03536851870574531
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


40.0,0.04153591236844845
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


43.0,0.0374455083014682
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


47.0,0.03389419049266307
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

36.0,0.013834019714431989
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


41.0,0.0275484084257569
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

37.0,0.03523386538786588
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


40.0,0.03690832757321283
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


37.0,0.03748819660468017
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


38.0,0.03640121869111956
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

40.0,0.03720133427687167
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


42.0,0.03549362649032617
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

40.0,0.03616242074428189
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

39.0,0.037797938355440874
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

44.0,0.05976326917823149
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


42.0,0.04017873734730881
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

36.0,0.026252675142245274
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

40.0,0.07395442906663352
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


44.0,0.07337633037250257
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


41.0,0.05936770093602384
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

35.0,0.0449571817046206
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


35.0,0.04921345172823588
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


40.0,0.026141636058043982
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


32.0,0.038700587195891534
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


41.0,0.019994150118563203
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

42.0,0.019605938085520136
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


47.0,0.01758076608596726
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


49.0,0.05035013791334175
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 

```python
raise RuntimeError('something wrong')
```


42.0,0.019515483363784947
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


42.0,0.015875949164355196
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


38.0,0.0440364870531339
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


38.0,0.04817439881932506
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


44.0,0.04352303472516672
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


43.0,0.04412813652259895
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


38.0,0.04169877983933845
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


49.0,0.10292366791218366
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
print("HelloWorld")

36.0,0.02888874911331074
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


38.0,0.010966012898700694
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


40.0,0.019567729185664073
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


58.0,0.020745655959984677
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


50.0,0.0104281125761706
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


54.0,0.012700555326384255
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


40.0,0.02684995688923375
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


42.0,0.04782535343538896
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


101.0,0.03354073112175404
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


50.0,0.041048273816299496
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
import random
print(random.random()*100)
```


50.0,0.0390398130221743
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
import random
print(random.random()*100-5)
```


38.0,0.040814303909383676
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


39.0,0.04094788965942653
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


47.0,0.04358929535546863
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


38.0,0.03834536273114164
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


40.0,0.039184416753692664
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


49.0,0.04662634598755688
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
import random
print(random.randrange(7,16))
```


39.0,0.04224690304888479
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


43.0,0.03402366799276357
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


41.0,0.04009130140496464
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


66.0,0.02572180560807691
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


37.0,0.07806877638018106
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

38.0,0.08155393411225598
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

38.0,0.10714870622084205
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

36.0,0.05320426574175663
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

41.0,0.087915055044396
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

40.0,0.060902247127954445
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


43.0,0.060408795666715864
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


50.0,0.022136374485484
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


44.0,0.024324339665646066
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


47.0,0.03926092550211635
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


39.0,0.0411684278206913
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


39.0,0.04130809400843649
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


47.0,0.04734988193882561
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


114.0,0.04155661686876466

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


124.0,0.0466520674444344

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


114.0,0.06365968787967746

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


112.0,0.05527955385599581

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


125.0,0.02875085992925097

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


104.0,0.049098366307995356

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


94.0,0.02933832999051489

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


123.0,0.0592931357968034

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


116.0,0.03246687546357796

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


116.0,0.057286248580166066

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


103.0,0.03723242105950075

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


106.0,0.03522482267064253

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


101.0,0.02039614169792281

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


101.0,0.019992153435185345

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


102.0,0.053919270154098364

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


118.0,0.07203276874574605

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


70.0,0.009892017555072519

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


111.0,0.009518053705264151

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


104.0,0.037172116747299144

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

114.0,0.038250361534827415

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

0.0,-2.220446049250313e-16

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


108.0,0.0345517010289873

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


129.0,0.062304093490558765

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


117.0,0.03505946388275383

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

110.0,0.023488738669707798

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


131.0,0.060781337859228346

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


134.0,0.059407853923337695

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


129.0,0.05592595998145522

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


132.0,0.052724246944048314

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


106.0,0.02222832353411508

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

129.0,0.031386354682384154

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


117.0,0.03569518716684028

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

120.0,0.055708175397797266

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


116.0,0.05050642692890206

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


117.0,0.0526003532836562

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


122.0,0.05375253596629803

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

120.0,0.05453703186025016

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


120.0,0.05327027527035644

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

120.0,0.05401837238945606

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

120.0,0.05210789991058229

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

117.0,0.05521047389787537

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


113.0,0.0425722576540527

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

118.0,0.04951265480234224

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

122.0,0.07769785548104369

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


122.0,0.07620270355652792

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


121.0,0.05813001960825914

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

128.0,0.06279283121516288

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


129.0,0.06334456158907076

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


124.0,0.05204939350101412

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


120.0,0.050948256707034734

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


126.0,0.03836394842772406

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

120.0,0.0315318615688166

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


120.0,0.023001289914337808

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


141.0,0.08722993015227709

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


128.0,0.039929835019085314

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


132.0,0.04581092181658597

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


115.0,0.05076076918315853

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


115.0,0.05240493459579776

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


125.0,0.06510352031675837

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


135.0,0.065803897197529

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


124.0,0.0630173717211715

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


140.0,0.1448366883669855

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
print("HelloWorld")

113.0,0.06483048088121413

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


124.0,0.04107081110794586

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


117.0,0.03969940861529275

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


112.0,0.03431935090804672

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


108.0,0.02667983826543352

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


115.0,0.030455174707179622

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


130.0,0.05020980159137722

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


130.0,0.0696175901893702

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


122.0,0.005116078691531745

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


134.0,0.07039355100848677

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
import random
print(random.random()*100)
```


133.0,0.07157686936811647

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


128.0,0.05425878292919217

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


125.0,0.05353383575533888

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


130.0,0.06502650648872732

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


128.0,0.05307002364949798

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


125.0,0.05415228003226735

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


132.0,0.06651918582726368

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


116.0,0.05094757525425697

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


128.0,0.05758875811287223

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


128.0,0.056264798650782155

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


103.0,0.02156117807826885

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


122.0,0.08582275868958233

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

121.0,0.08514940336403831

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

120.0,0.10824377560555165

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

122.0,0.08708074152622047

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

120.0,0.09441732854877571

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

122.0,0.07019918784488532

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


119.0,0.055997535769615414

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


108.0,0.01885291364890429

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


119.0,0.024837832623676892

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


114.0,0.043943449666987044

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


128.0,0.0723526779962338

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


126.0,0.07149069186891555

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


127.0,0.061585954686029454

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


52.0,0.013067800730813706

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


55.0,0.01912543899469865

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


46.0,0.023346726316094912

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


42.0,0.014939810815963739

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


52.0,0.01824705590195963

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


59.0,0.012464375480275125

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


63.0,0.008794204392027716

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


50.0,0.016773921880731235

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


47.0,0.020725245861568875

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


46.0,0.01571209599159107

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


46.0,0.01046426035254222

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


69.0,0.019296543489997653

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


50.0,0.01258202905639616

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


50.0,0.015485697156462752

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


56.0,0.024368808346552084

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


50.0,0.03188719053303046

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


54.0,0.02131287587451569

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


89.0,0.04698431390928348

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


51.0,0.0131748139321346

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

51.0,0.03363972276031091

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

108.0,0.0345517010289873

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


0.0,0.0

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


59.0,0.024739829900326415

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


54.0,0.01357468996127087

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

43.0,0.012188571874488963

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


61.0,0.021265076545685324

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


61.0,0.020334362874815493

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


59.0,0.018387733252653415

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


61.0,0.01708156600391386

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


49.0,0.028546468590809893

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

58.0,0.020202422354761107

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


53.0,0.013705211254153804

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

43.0,0.015843851940648412

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


39.0,0.011379185889371257

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


37.0,0.013088861813757346

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


48.0,0.016758831958112896

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

50.0,0.018416567427206543

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


51.0,0.01692033464824938

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

50.0,0.01770926455483901

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

49.0,0.015128798652866537

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

58.0,0.02605836216006019

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


54.0,0.012417691928913066

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

52.0,0.021299404705931724

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

63.0,0.04575127985773342

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


61.0,0.044863661240708286

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


66.0,0.028877089149734747

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

58.0,0.02205515598882024

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


58.0,0.022783465138638603

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


50.0,0.02138976994184516

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


48.0,0.01731194574577699

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


51.0,0.017634725386091787

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

53.0,0.01610057293200895

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


57.0,0.023185558760789426

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


68.0,0.04848930719555333

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


57.0,0.02102692495207359

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


60.0,0.02887575791520358

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


48.0,0.01134409373826728

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


48.0,0.01200421482976477

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


58.0,0.0221511401288923

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


63.0,0.025247525134394877

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


52.0,0.01968467308693811

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


67.0,0.10786474156026926

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
print("HelloWorld")

51.0,0.025991373863846867

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


53.0,0.021424474882145716

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


59.0,0.014235276904415617

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


65.0,0.009640744285582481

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


60.0,0.018210365709574572

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


65.0,0.013968464062388053

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


62.0,0.021906074519209007

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


58.0,0.027776804664614296

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


106.0,0.03253185992268659

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


63.0,0.02882414939306044

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
import random
print(random.random()*100)
```


64.0,0.029725540169650233

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


62.0,0.02029828466336603

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


63.0,0.02027321022147921

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


63.0,0.023348129508148796

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


63.0,0.018094641339983064

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


64.0,0.020702361473024955

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


64.0,0.026133119951792128

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


48.0,0.014235126906873785

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


59.0,0.018363648273648447

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


59.0,0.019944956434265637

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


61.0,0.017487987402439842

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


59.0,0.054456905432671676

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

62.0,0.05500597832407017

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

59.0,0.07621227276267128

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

53.0,0.04554189903461947

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

59.0,0.06145354687790339

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

59.0,0.03651871591215483

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


59.0,0.026185840660134962

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


50.0,0.016869706318328404

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


55.0,0.014252920379910106

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


36.0,0.006172019528235428

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


56.0,0.03159754814003546

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


55.0,0.030336713486935674

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


65.0,0.022771367336329895

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


36.0,0.015064562185047481

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


22.0,0.009644059436079377

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


36.0,0.011689594904979894

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


25.0,0.01854573550577643

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


39.0,0.042044208466553434

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


65.0,0.015986526446191585

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


89.0,0.032126442073197814

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


21.0,0.014987787885002324

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


29.0,0.03148246120864229

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


28.0,0.02622077050239513

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


47.0,0.01994796354684014

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


83.0,0.044301952418528745

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


51.0,0.03640700123283169

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


51.0,0.04041302556514503

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


72.0,0.05400353603626107

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


31.0,0.052891024116155316

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


65.0,0.04713486733377481

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


111.0,0.08110472651105205

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


38.0,0.022351806479041003

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

39.0,0.03918870490180648

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

129.0,0.062304093490558765

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


59.0,0.024739829900326415

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


0.0,0.0

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


28.0,0.0174669195462257

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

54.0,0.03440020022966339

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


13.0,0.011244681861338202

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


13.0,0.005180759863958717

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


20.0,0.016196824827294898

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


16.0,0.01460078392070574

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


54.0,0.06151947643940836

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

16.0,0.023028273941426702

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


37.0,0.02593898267838357

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

29.0,0.012302529479089719

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


39.0,0.017071792523728924

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


35.0,0.015890480556791764

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


25.0,0.01370943414803838

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

26.0,0.01238475739892353

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


28.0,0.012764204644444832

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

26.0,0.013095024840869884

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

25.0,0.01223756860015024

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

36.0,0.048577169240673346

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


52.0,0.032671270575401756

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

26.0,0.019478014299824542

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

31.0,0.073520058231338

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


28.0,0.07090857926184846

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


36.0,0.05200635803506182

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

17.0,0.02391216466750712

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


14.0,0.024359068715105292

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


22.0,0.015316973813458201

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


25.0,0.02265640657757695

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


24.0,0.02960795281137374

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

35.0,0.03200977864960097

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


46.0,0.03704711334212274

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


21.0,0.026299337255167643

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


20.0,0.021391647943901693

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


20.0,0.03306122285107549

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


22.0,0.018880447934234157

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


22.0,0.02229543890232699

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


17.0,0.010883508466576819

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


17.0,0.018935637375499637

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


13.0,0.013770586700193821

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


20.0,0.08023594383442434

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
print("HelloWorld")

37.0,0.015206247146549612

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


21.0,0.015125222304091301

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


36.0,0.010979945795877577

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


61.0,0.015239773465573814

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


55.0,0.02409329344540001

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


60.0,0.018598439517321652

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


24.0,0.021294166920494906

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


15.0,0.012417658114736163

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


118.0,0.06031084393973685

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


22.0,0.012509995455461387

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
import random
print(random.random()*100)
```


24.0,0.012877226970834488

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


25.0,0.02121137976846832

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


32.0,0.026530263393933717

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


20.0,0.010766136146689531

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


27.0,0.019254933464685098

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


34.0,0.023002371320904547

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


20.0,0.012745976467844367

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


21.0,0.02217967332497106

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


14.0,0.010705351787126172

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


15.0,0.02255357705653671

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


75.0,0.04347459427882838

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


29.0,0.0828922724555835

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

39.0,0.08740705834424023

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

36.0,0.11549768731480814

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

24.0,0.03890780335636013

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

37.0,0.09363280767673554

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

26.0,0.05704629334453726

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


39.0,0.047462733125255396

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


55.0,0.04376544037581254

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


37.0,0.029596719542013705

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


51.0,0.0322766649912517

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


17.0,0.014787166216714054

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


15.0,0.013469273149576022

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


23.0,0.01450294633694893

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


39.0,0.015510415310265868
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


36.0,0.012427381763691736
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


35.0,0.021511787357636702
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


30.0,0.019132358707343422
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


38.0,0.019612266366928255
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


61.0,0.015397026106304335
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


79.0,0.017867179740450267
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


38.0,0.022353703079412313
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


36.0,0.018917359834085823
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


37.0,0.026748651219935637
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


42.0,0.012699820036219056
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


68.0,0.03116044316400135
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


47.0,0.018495579131362905
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


47.0,0.02219497074515797
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


61.0,0.03703212540497747
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


38.0,0.04889097652499397
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


59.0,0.02221647717190678
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


97.0,0.050525985559313535
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


45.0,0.015421333016346517
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

41.0,0.02579545148150153
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

117.0,0.03505946388275383
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


54.0,0.01357468996127087
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


28.0,0.0174669195462257
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


0.0,-2.220446049250313e-16
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

52.0,0.013241611191508018
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


39.0,0.02151159198037167
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


40.0,0.015797109836857115
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


39.0,0.021746503011553564
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


42.0,0.017867759096101832
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


46.0,0.03184640980132125
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

39.0,0.015985036803281116
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


39.0,0.018980851005429233
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

31.0,0.01809134817561142
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


41.0,0.018115028331203487
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


37.0,0.018458039022077655
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


32.0,0.018219014280318024
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

33.0,0.0188352281650902
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


35.0,0.017992377775220558
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

33.0,0.018407711733926968
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

32.0,0.01696405629439146
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

41.0,0.03704421544508352
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


53.0,0.02204542014358768
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

35.0,0.02153287179547847
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

44.0,0.06157134880095472
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


41.0,0.05920209509332908
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


46.0,0.04183977726419352
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

36.0,0.02931211980841275
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


33.0,0.02990755639420739
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


33.0,0.014163095705972073
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


30.0,0.017094949660715564
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


31.0,0.017013489956646533
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

34.0,0.016828947452600773
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


39.0,0.015574511219447862
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


47.0,0.03841245946713534
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 

```python
raise RuntimeError('something wrong')
```


37.0,0.016296992111534903
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


42.0,0.017007099053261476
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


36.0,0.016847609727771995
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


36.0,0.020016523710205014
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


42.0,0.020924720292234023
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


43.0,0.02319710759561444
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


36.0,0.02031168196766231
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


46.0,0.10062691818435221
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
print("HelloWorld")

40.0,0.023490736392402845
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


37.0,0.013521396730018176
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


39.0,0.010426539973764859
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


58.0,0.00942823971825324
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


55.0,0.01364001383473723
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


56.0,0.011509644250882745
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


46.0,0.022275076273382655
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


41.0,0.024540306661904876
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


107.0,0.03286824868128635
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


46.0,0.024005172367902894
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
import random
print(random.random()*100)
```


46.0,0.024306776729480895
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
import random
print(random.random()*100-5)
```


42.0,0.02579222840622153
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


43.0,0.02773591450100621
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


44.0,0.02347266668562975
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


42.0,0.02383622569560495
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


43.0,0.025785230409621218
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


46.0,0.025920342409252117
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
import random
print(random.randrange(7,16))
```


34.0,0.017364093318404716
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


39.0,0.017755609578208653
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


38.0,0.024021841158359036
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


65.0,0.022133429544976213
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


42.0,0.07132419568676407
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

44.0,0.07294880929788028
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

44.0,0.10016642546476384
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

37.0,0.04700359056596026
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

45.0,0.08114232837674795
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

43.0,0.048249891128167244
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


45.0,0.03748929189905159
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


55.0,0.021241681652773403
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


37.0,0.013933556407914827
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


51.0,0.021008507319044245
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


39.0,0.02525855520616238
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


39.0,0.023825620962696914
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


44.0,0.023531102526046288
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


56.0,0.022483342271631734
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


50.0,0.024836632144490278
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


48.0,0.035835778256175566
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


48.0,0.02700429325415654
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


42.0,0.011764573084422358
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


65.0,0.02475943487439214
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


78.0,0.014478371617336006
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


51.0,0.03107602861538128
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


45.0,0.023206160557911804
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


51.0,0.027177134199562136
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


54.0,0.01839643653503753
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


78.0,0.02405266099169001
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


60.0,0.012047672364872697
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


60.0,0.01282695603274464
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


56.0,0.028689004999069567
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


51.0,0.04446571181507453
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


60.0,0.01570884749096424
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


98.0,0.03244405269302775
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


51.0,0.020824412424361616
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

52.0,0.03086894497598236
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

110.0,0.023488738669707798
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


43.0,0.012188571874488963
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


54.0,0.03440020022966339
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


52.0,0.013241611191508018
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

0.0,1.1102230246251565e-16
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


57.0,0.03051549125957631
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


56.0,0.028843270698990064
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


55.0,0.025732772715195695
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


54.0,0.02246888227742283
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


56.0,0.021074328475389814
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

56.0,0.018271197919093263
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


59.0,0.0194521527004764
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

53.0,0.027085962785613593
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


52.0,0.023641217338698173
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


52.0,0.025317264426160002
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


50.0,0.028046027930016315
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

51.0,0.03009731785889036
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


52.0,0.029026853007977138
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

51.0,0.02965395571635121
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

50.0,0.02637825337416766
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

54.0,0.032385746149705796
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


58.0,0.020880657940478775
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

56.0,0.02743446162392915
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

59.0,0.05203147748518466
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


57.0,0.05094114299494068
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


59.0,0.034527350644002475
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

58.0,0.03266901063123029
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


56.0,0.03317984902107762
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


45.0,0.022917059884005386
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


48.0,0.020011238492046002
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


44.0,0.01577592463144173
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

40.0,0.01321804988422115
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


51.0,0.012543744595392425
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


66.0,0.05374167871309021
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


55.0,0.023603364998896703
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


50.0,0.02141175973089604
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


48.0,0.021996316883711287
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


48.0,0.02311213429244452
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


55.0,0.03425930177239267
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


60.0,0.031188583607577147
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


53.0,0.03004158248069233
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


65.0,0.11183937299128976
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
print("HelloWorld")

52.0,0.03835142788383428
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


52.0,0.024847237066355166
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


54.0,0.020885650423519753
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


65.0,0.01627695122618944
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


61.0,0.018365133659714927
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


68.0,0.017256923803600444
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


60.0,0.029560888609819536
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


56.0,0.03805647086940123
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


110.0,0.020606856235765414
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


62.0,0.039546776519722604
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
import random
print(random.random()*100)
```


64.0,0.04095781506908358
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


60.0,0.03001240286899598
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


60.0,0.029594980434952567
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


60.0,0.035046651563626185
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


61.0,0.027972131947394008
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


61.0,0.029991880113663605
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


62.0,0.03677476170518945
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


47.0,0.022942794639874142
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


55.0,0.027446676538625203
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


56.0,0.028686706932953165
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


67.0,0.012928290834610112
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


55.0,0.0631494879648169
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

57.0,0.06358716026022593
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

53.0,0.08643976357574645
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

52.0,0.05882335571653596
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

55.0,0.07148825911853507
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

53.0,0.04424292607861202
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


55.0,0.03333640132449378
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


59.0,0.013286737641259871
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


50.0,0.009637953198568416
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


56.0,0.017913317079647162
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


55.0,0.04326100593624671
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


54.0,0.04202328758616236
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


64.0,0.033335930073470355
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


44.0,0.019297826098727766

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


28.0,0.018049231394719367

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


38.0,0.02039449460177567

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


30.0,0.017277529881203124

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


43.0,0.034373771984814505

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


71.0,0.023129531921377344

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


93.0,0.02593523357444616

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


25.0,0.01932075971601499

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


32.0,0.03571638990225867

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


30.0,0.01980764247278255

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


52.0,0.022262162520205298

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


89.0,0.03588549146281361

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


57.0,0.029593466575133065

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


57.0,0.032056826948451356

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


76.0,0.037125305993294

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


33.0,0.03188061072978565

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


70.0,0.043745451730065166

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


117.0,0.07397584092339182

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


40.0,0.025915462693952396

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

44.0,0.04565706409727699

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

131.0,0.060781337859228346

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


61.0,0.021265076545685324

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


13.0,0.011244681861338202

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


39.0,0.02151159198037167

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

57.0,0.03051549125957631

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


0.0,0.0

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


10.0,0.011222147493797019

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


13.0,0.009210547171691008

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


7.0,0.008201592294973192

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


53.0,0.04697577088927596

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

21.0,0.024813702140364713

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


41.0,0.02326317695474922

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

32.0,0.012876613739299492

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


44.0,0.014310249816620324

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


40.0,0.015031252595985478

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


30.0,0.01620188647398335

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

30.0,0.01830244293714267

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


32.0,0.017586555483312116

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

30.0,0.01817883086983163

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

30.0,0.014747339058872488

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

40.0,0.03154091428442407

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


56.0,0.022864569711899763

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

29.0,0.024767833321461374

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

34.0,0.04634386710286231

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


31.0,0.0441121177049385

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


43.0,0.03235456159034822

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

22.0,0.0138316923061238

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


19.0,0.01250176895300037

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


26.0,0.021392345004351943

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


27.0,0.021537604297800272

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


31.0,0.024015590343812954

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

38.0,0.025016936299324444

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


49.0,0.03805540494960569

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


16.0,0.03476705564492577

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


28.0,0.027996817683200947

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


13.0,0.03824886017890072

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


23.0,0.015556999647843295

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


23.0,0.014882689760747914

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


13.0,0.02062618637924385

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


13.0,0.01791249975128395

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


16.0,0.018094974171688705

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


15.0,0.08608973873740922

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
print("HelloWorld")

42.0,0.020852705166694574

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


28.0,0.025376464131408816

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


41.0,0.016321936750466004

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


65.0,0.018684160754098067

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


63.0,0.032824101353262414

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


68.0,0.02521955095856554

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


21.0,0.02086669562238408

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


12.0,0.02100881895089246

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


123.0,0.05456211201066341

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


16.0,0.021166806287055584

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
import random
print(random.random()*100)
```


18.0,0.02146665663159042

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


24.0,0.020870292999006557

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


33.0,0.02390152818488034

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


16.0,0.01411172483806078

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


26.0,0.017382650011912193

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


35.0,0.02164970973067326

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


13.0,0.014471395152525934

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


23.0,0.020588679109621366

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


13.0,0.016232342227027075

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


18.0,0.0156655923680028

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


79.0,0.03885108127698922

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


31.0,0.0559608778279993

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

41.0,0.05881671774448294

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

38.0,0.08091202994607061

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

28.0,0.043258168987433177

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

39.0,0.06662537279405467

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

28.0,0.03671811435017891

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


44.0,0.03332251694198163

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


57.0,0.03574734127798962

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


45.0,0.026959591446663378

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


52.0,0.02271481546938736

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


19.0,0.02678918520847795

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


17.0,0.02492449581049261

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


17.0,0.021109584766524025

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


39.0,0.011587380494266442
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


28.0,0.009655507380543993
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


37.0,0.011904415588862016
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


27.0,0.012966001453890152
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


41.0,0.0326489896270048
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


68.0,0.015715092511596085
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


91.0,0.028371369771790445
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


23.0,0.011824761549805718
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


28.0,0.02627438822798278
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


31.0,0.019446832476968545
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


50.0,0.014950231710818773
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


86.0,0.037065758578720964
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


58.0,0.03101569302879381
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


58.0,0.03467544920858867
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


76.0,0.04433887407228543
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


30.0,0.04258482602280167
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


68.0,0.041229540606698256
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


114.0,0.07461982937249567
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


39.0,0.020421099636156126
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

41.0,0.03536851870574531
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

134.0,0.059407853923337695
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


61.0,0.020334362874815493
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


13.0,0.005180759863958717
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


40.0,0.015797109836857115
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

56.0,0.028843270698990064
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


10.0,0.011222147493797019
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


0.0,0.0
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


9.0,0.010212344986284094
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


4.0,0.008187166611432262
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


49.0,0.050968209650467444
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

15.0,0.0186267037312684
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


36.0,0.021082949761550784
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

29.0,0.009672602766159222
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


40.0,0.0129668773401872
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


36.0,0.012540797712508156
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


27.0,0.011294324048593762
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

31.0,0.011439568349866258
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


33.0,0.011565399288624656
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

31.0,0.011802581807858537
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

27.0,0.01042791582330882
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

37.0,0.03963205928620117
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


53.0,0.025995611670331042
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

26.0,0.01633830981649309
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

31.0,0.06236380298953592
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


28.0,0.06059519227613541
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


40.0,0.04437300832451274
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

19.0,0.018611058777251888
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


16.0,0.01958381706690815
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


24.0,0.014406628772874575
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


24.0,0.020080174056758993
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


35.0,0.02372129496072728
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

42.0,0.02613701393581125
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


52.0,0.032313738759695565
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


13.0,0.02402574528911905
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


25.0,0.01956006920263087
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


15.0,0.02793734539417192
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


24.0,0.015076301933027225
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


24.0,0.01742115211312245
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


15.0,0.009945492634364284
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


13.0,0.013171347066677996
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


13.0,0.011070307193344786
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


12.0,0.07570629897439296
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
print("HelloWorld")

38.0,0.01623280800359006
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


28.0,0.015093570065492945
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


42.0,0.010892119222445928
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


66.0,0.013498110090865656
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


60.0,0.02188870691591216
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


65.0,0.016090800094679558
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


20.0,0.018202692595922887
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


12.0,0.011421775018690905
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


125.0,0.05600051379428295
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


13.0,0.010238119725200723
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
import random
print(random.random()*100)
```


16.0,0.01126092539542567
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


23.0,0.016720557150915583
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


33.0,0.021162840461358412
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


12.0,0.009632960515568834
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


25.0,0.015519921351552557
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


35.0,0.01953374906023231
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


12.0,0.010311440922110005
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


25.0,0.016906266619889476
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


13.0,0.009041358280579392
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


16.0,0.016798187786897345
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


76.0,0.03827705557525396
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


28.0,0.07131998478340895
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

37.0,0.07555696634653974
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

34.0,0.10041669316505397
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

25.0,0.03761072683373923
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

35.0,0.08013389281831962
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

25.0,0.047128299773880555
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


41.0,0.04096191131406046
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


55.0,0.036279142465587944
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


42.0,0.025691504500906404
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


52.0,0.024799554068709373
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


17.0,0.014712119561266945
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


15.0,0.013405381574159936
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


16.0,0.014744584213707501
```python
def printValue(n):
    print(str(n))

printValue(3)
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


39.0,0.01615671631606752
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


29.0,0.019590911737910832
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


35.0,0.022542369494637948
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


25.0,0.017611386847037003
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


43.0,0.028744908093333743
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


66.0,0.02117590564163585
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


89.0,0.023490689083393912
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


25.0,0.017481983331694817
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


30.0,0.03208986273353276
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


32.0,0.013927246328924392
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


47.0,0.018136281541221266
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


82.0,0.024708222478212583
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


54.0,0.024402099432574653
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


54.0,0.02568023894258098
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


74.0,0.028240612039143187
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


29.0,0.026690547603274717
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


65.0,0.038962768497861844
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


109.0,0.0662088594828093
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


40.0,0.023521414315684996
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

40.0,0.04153591236844845
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

129.0,0.05592595998145522
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


59.0,0.018387733252653415
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


20.0,0.016196824827294898
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


39.0,0.021746503011553564
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

55.0,0.025732772715195695
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


13.0,0.009210547171691008
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


9.0,0.010212344986284094
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


0.0,0.0
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


6.0,0.0034207570369755302
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


43.0,0.03837598318257662
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

18.0,0.02062364707292974
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


35.0,0.019652362959074354
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

27.0,0.016227305478542453
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


39.0,0.01596651084597589
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


35.0,0.017195440107516058
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


26.0,0.01948164579887368
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

30.0,0.02191860401395407
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


32.0,0.02093355745592962
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

30.0,0.021480069322851625
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

28.0,0.017907925304022854
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

37.0,0.02751921581895067
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


53.0,0.02039627047796888
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

27.0,0.0189220667755734
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

35.0,0.04259145406384446
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


32.0,0.04162131981125583
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


41.0,0.028923719280390725
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

22.0,0.013794596117761349
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


19.0,0.013472664813866442
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


24.0,0.02500765315731779
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


23.0,0.02641324746979523
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


33.0,0.020955175784354574
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

38.0,0.022354540104366438
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


50.0,0.036110748046176866
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


22.0,0.035890451083861685
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


24.0,0.028240850509187787
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


21.0,0.034675487458744936
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


26.0,0.01506696498860638
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


26.0,0.01444384763189377
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


22.0,0.020963877286780175
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


21.0,0.019541917199067504
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


18.0,0.017967021588631837
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


21.0,0.0829789400284261
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
print("HelloWorld")

37.0,0.0228158170247994
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


27.0,0.025690697170378862
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


36.0,0.016766045314586253
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


60.0,0.01701489157808289
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


60.0,0.031209175083255603
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


65.0,0.024202336219888654
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


25.0,0.020320366445615523
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


20.0,0.022810170631687887
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


123.0,0.048882149107876804
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


18.0,0.02352670247837707
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
import random
print(random.random()*100)
```


20.0,0.024220860183239767
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


24.0,0.01683108064561123
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


33.0,0.018752051057333685
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


17.0,0.014870621148421748
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


26.0,0.014571215179866925
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


35.0,0.018457966909241064
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


19.0,0.01564368934745375
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


23.0,0.01925990611204864
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


21.0,0.016809939815382702
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


21.0,0.01732953047834407
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


75.0,0.03157563111362305
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


31.0,0.05214543950729866
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

38.0,0.05510240646896036
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

34.0,0.07403884741578726
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

27.0,0.03942202882001178
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

34.0,0.05965247603665291
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

28.0,0.03482429531292841
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


40.0,0.03198188486428477
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


53.0,0.030577646212473275
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


43.0,0.026430837891329606
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


49.0,0.0168671069666384
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


22.0,0.03046682723540306
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


20.0,0.028622342367589093
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


21.0,0.022945406399907053
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


41.0,0.015407115779634495
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


31.0,0.01618435412082786
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


37.0,0.021725960244573517
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


30.0,0.01373812551028919
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


44.0,0.025521414557460154
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


69.0,0.020189043895222802
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


91.0,0.0222605972826333
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


25.0,0.016930283665530843
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


31.0,0.027270656062261645
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


32.0,0.015313633711338093
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


51.0,0.015747881111972784
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


87.0,0.02807327676205784
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


57.0,0.022431384957327216
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


57.0,0.024166281372671072
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


75.0,0.028703972386271648
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


32.0,0.029396258750670645
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


69.0,0.034583198039032426
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


115.0,0.0637011339181317
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


40.0,0.02235218155268126
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

43.0,0.0374455083014682
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

132.0,0.052724246944048314
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


61.0,0.01708156600391386
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


16.0,0.01460078392070574
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


42.0,0.017867759096101832
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

54.0,0.02246888227742283
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


7.0,0.008201592294973192
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


4.0,0.008187166611432262
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


6.0,0.0034207570369755302
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


0.0,1.1102230246251565e-16
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


49.0,0.03415128576494464
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

17.0,0.01710580502184822
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


39.0,0.0172375543196156
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

30.0,0.013140891928506204
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


42.0,0.01336912724474526
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


38.0,0.014091994893045579
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


28.0,0.015217391368567035
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

30.0,0.017812011104505254
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


32.0,0.016887412346309416
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

30.0,0.017333593614673237
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

30.0,0.014416456315218262
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

40.0,0.02608756134343948
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


55.0,0.01779258415966567
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

27.0,0.01707279007943674
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

32.0,0.04217354004898388
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


29.0,0.041005381714663613
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


42.0,0.028719791251533233
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

21.0,0.015359391408804712
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


18.0,0.015014200650082521
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


26.0,0.02018049107678277
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


27.0,0.020880136942727723
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


34.0,0.01855913639647022
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

40.0,0.020602618001978046
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


52.0,0.030850960658502236
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


16.0,0.03373637419897213
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


27.0,0.02289275183135342
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


16.0,0.029538230938743082
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


25.0,0.012673397287935817
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


25.0,0.012350278636104495
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


18.0,0.018521266665084357
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


15.0,0.014838214969464247
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


16.0,0.015498853168632865
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


15.0,0.08557067752122371
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
print("HelloWorld")

39.0,0.023865701199308975
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


30.0,0.022193366729100106
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


42.0,0.014963588041961295
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


66.0,0.0157307671057606
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


63.0,0.02735336217739992
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


67.0,0.021245673350194116
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


21.0,0.017354445011247277
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


15.0,0.021548615218481504
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


123.0,0.047032054509759
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


16.0,0.021122576485812172
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
import random
print(random.random()*100)
```


19.0,0.021689816526432537
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


24.0,0.018088107205553317
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


34.0,0.019826481164354037
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


15.0,0.016805772376327077
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


25.0,0.015518141356159254
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


35.0,0.01943784333708709
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


16.0,0.017122361315335177
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


26.0,0.01633111786687369
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


16.0,0.015351185041047155
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


19.0,0.013327229396874252
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


79.0,0.029787079977707243
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


30.0,0.050430317161117455
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

39.0,0.05327043234900897
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

36.0,0.0757155757750908
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

28.0,0.04227969784364627
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

37.0,0.06100521538107595
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

27.0,0.03201201905138784
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


44.0,0.028393290008657535
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


57.0,0.026766669908459995
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


45.0,0.022956276418364285
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


51.0,0.016583758390484427
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


19.0,0.026892781408055177
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


17.0,0.02468782071150144
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


19.0,0.021793485945379443
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


49.0,0.037780485616654924
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


52.0,0.04294629079266543
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


37.0,0.06380767998110637
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


36.0,0.043341244835935044
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


51.0,0.014199364993072505
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


58.0,0.05137569279500853
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


65.0,0.026950791246465933
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


51.0,0.05602393720018495
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


44.0,0.025813251551021987
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


46.0,0.04285087959276823
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


47.0,0.03069785887640486
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


62.0,0.023632278867650736
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


50.0,0.0142218904901249
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


50.0,0.013799444029252261
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


58.0,0.030739489146188625
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


48.0,0.04489201886970984
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


52.0,0.010897396316655206
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


81.0,0.023360406241160425
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


45.0,0.03700732526289752
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

47.0,0.03389419049266307
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

106.0,0.02222832353411508
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


49.0,0.028546468590809893
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


54.0,0.06151947643940836
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


46.0,0.03184640980132125
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

56.0,0.021074328475389814
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


53.0,0.04697577088927596
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


49.0,0.050968209650467444
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


43.0,0.03837598318257662
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


49.0,0.03415128576494464
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


0.0,1.1102230246251565e-16
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

46.0,0.021874320163408845
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


45.0,0.023502289892078365
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

39.0,0.04954253869173353
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


36.0,0.04185000423008767
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


36.0,0.04510842774627544
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


40.0,0.04852453227962095
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

44.0,0.05419848478434153
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


44.0,0.0515498711820459
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

44.0,0.052401568095580275
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

41.0,0.048591253116932576
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

51.0,0.032845592595523554
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


51.0,0.02835669397808338
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

44.0,0.04385826870542486
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

58.0,0.04515547487377525
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


56.0,0.04467818203239349
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


57.0,0.03519837933039671
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

54.0,0.04556727902282787
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


53.0,0.0448242012551171
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


47.0,0.04768692775763872
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


42.0,0.041192875896301606
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


57.0,0.021749358537999086
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

53.0,0.018134916359320297
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


56.0,0.02033945157922601
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


60.0,0.08769015076161846
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 

```python
raise RuntimeError('something wrong')
```


47.0,0.03902261545642538
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


56.0,0.038355659810775156
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


46.0,0.043515315720602965
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


46.0,0.0408036230096086
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


52.0,0.0669062445508487
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


55.0,0.05369742225373053
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


45.0,0.05655557202739425
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


59.0,0.1464937725396872
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
print("HelloWorld")

42.0,0.06354910646947698
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


53.0,0.03963459909516376
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


54.0,0.03596955065633023
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


58.0,0.032226522401800906
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


51.0,0.032642021847780645
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


54.0,0.03393188797469371
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


58.0,0.04265631389818281
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


51.0,0.07123125272658848
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


97.0,0.018103615377226268
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


60.0,0.06804245856199653
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
import random
print(random.random()*100)
```


61.0,0.06869736367127643
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
import random
print(random.random()*100-5)
```


55.0,0.04862166543922131
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


57.0,0.045884182753970104
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


57.0,0.06156653947283974
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


55.0,0.04612669639207578
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


57.0,0.04888427963853503
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


60.0,0.062478951308588604
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
import random
print(random.randrange(7,16))
```


44.0,0.04107860998501611
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


53.0,0.05713637863886745
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


51.0,0.04160635652697886
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


59.0,0.016431739237215526
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


54.0,0.05237038121091042
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

57.0,0.05089646176624418
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

52.0,0.06685545463992326
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

49.0,0.08179588137137173
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

52.0,0.05983823464861038
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

53.0,0.04168974096564637
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


49.0,0.03713623295468349
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


48.0,0.009632324306850015
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


51.0,0.019132039832671532
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


51.0,0.02811475853850043
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


49.0,0.07567303571776818
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


48.0,0.07329108490907754
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


59.0,0.06304349012511468
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


32.0,0.012561545134294194
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


28.0,0.011438190874098364
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


39.0,0.025999100127880648
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


25.0,0.02554901629531159
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


41.0,0.01623291959098938
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


69.0,0.025052679108435894
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


90.0,0.02406465827927229
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


25.0,0.02937482133603586
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


34.0,0.010581966529364606
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


35.0,0.03010280503387397
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


48.0,0.011671047433680526
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


76.0,0.026977910788178905
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


54.0,0.01332621743639295
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


54.0,0.014975764916447143
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


73.0,0.03957429314675398
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


34.0,0.04446970615312151
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


64.0,0.014966098647935855
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


109.0,0.04093043439648436
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


44.0,0.016970141484103696
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

36.0,0.013834019714431989
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

129.0,0.031386354682384154
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


58.0,0.020202422354761107
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


16.0,0.023028273941426702
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


39.0,0.015985036803281116
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

56.0,0.018271197919093263
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


21.0,0.024813702140364713
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


15.0,0.0186267037312684
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


18.0,0.02062364707292974
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


17.0,0.01710580502184822
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


46.0,0.021874320163408845
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

0.0,-2.220446049250313e-16
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


32.0,0.012940133051215663
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

27.0,0.022644252731100267
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


37.0,0.022678680753126956
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


33.0,0.023112626649072543
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


24.0,0.023126833698627558
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

27.0,0.025053385520732774
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


29.0,0.023804769365130207
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

27.0,0.024431052233720885
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

27.0,0.022876844989320744
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

36.0,0.0376643136598267
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


48.0,0.02452485130343307
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

20.0,0.015040644417900095
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

33.0,0.05445413900812579
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


33.0,0.053541161820335526
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


41.0,0.0382832851570577
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

17.0,0.027820812632803116
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


19.0,0.02982078625800999
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


21.0,0.01730757766036861
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


24.0,0.02246775435987325
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


33.0,0.01218825538044821
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

42.0,0.012716341155602495
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


52.0,0.01560638476447751
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


23.0,0.04302589448388816
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 

```python
raise RuntimeError('something wrong')
```


20.0,0.01195372669535999
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


22.0,0.017422980672555988
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


29.0,0.02533184687617418
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


29.0,0.026308690667232737
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


24.0,0.030244421329675197
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


22.0,0.02778202419646436
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


21.0,0.027486433634646312
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


22.0,0.09816694685688077
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
print("HelloWorld")

40.0,0.02765685118994332
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


28.0,0.00969095349793292
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


38.0,0.011112981544640688
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


62.0,0.013503150933526387
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


55.0,0.012627389047040305
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


58.0,0.011462826860565323
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


25.0,0.01807348460926006
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


22.0,0.034815985462829935
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


122.0,0.028158769994209076
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


24.0,0.030972868069778614
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
import random
print(random.random()*100)
```


25.0,0.030960314272004297
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
import random
print(random.random()*100-5)
```


27.0,0.025097332995321464
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


32.0,0.025404545921622
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


21.0,0.029196515091220676
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


29.0,0.023168855177237546
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


34.0,0.02511908635482496
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


24.0,0.030063856446998827
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


26.0,0.024831057463327588
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


21.0,0.023826296526891833
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


19.0,0.02533876385909639
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


76.0,0.019084043270221507
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


32.0,0.05952647996355431
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

36.0,0.060676782880148994
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

36.0,0.0881462824236039
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

22.0,0.05058198951500015
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

38.0,0.07243683687777058
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

30.0,0.04244133775429615
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


37.0,0.037991325565491896
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


53.0,0.014999722629808976
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


41.0,0.013611568091451143
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


55.0,0.02376618503719774
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


24.0,0.03555150549488806
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


22.0,0.03448332965453682
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


26.0,0.03083903069529592
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


38.0,0.016035110491818494
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


40.0,0.018377001501277634
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


31.0,0.025087130338149133
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


28.0,0.01772311754216782
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


45.0,0.015611619321622805
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


68.0,0.02288426857522219
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


77.0,0.019500222323664884
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


38.0,0.023859105611706344
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


39.0,0.016296806521715723
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


36.0,0.022862637480662862
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


46.0,0.013673399923050056
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


66.0,0.020522714298092937
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


43.0,0.013548975925536388
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


43.0,0.014252576012992124
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


64.0,0.028216738843080846
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


36.0,0.03319522407879116
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


55.0,0.019475367708520208
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


100.0,0.050770333487640706
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


46.0,0.0179697676008419
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

41.0,0.0275484084257569
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

117.0,0.03569518716684028
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


53.0,0.013705211254153804
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


37.0,0.02593898267838357
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


39.0,0.018980851005429233
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

59.0,0.0194521527004764
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


41.0,0.02326317695474922
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


36.0,0.021082949761550784
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


35.0,0.019652362959074354
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


39.0,0.0172375543196156
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


45.0,0.023502289892078365
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

32.0,0.012940133051215663
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


0.0,0.0
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

17.0,0.017678606321336
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


22.0,0.01515212422958434
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


21.0,0.016828550251795305
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


20.0,0.020580689574458244
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

24.0,0.02273376776723135
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


26.0,0.02179573371956811
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

24.0,0.022385222453400355
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

23.0,0.020708396738513324
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

37.0,0.025453341938322493
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


49.0,0.017490844136134442
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

26.0,0.019393927503721153
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

41.0,0.04359662297720568
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


37.0,0.04181902830052098
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


47.0,0.030514374156338953
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

31.0,0.024848963514745415
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


30.0,0.02475676271192595
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


34.0,0.022071318930185102
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


32.0,0.02084969591321717
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


41.0,0.013103126883384442
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

45.0,0.012894768324593575
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


56.0,0.021483909369402365
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


42.0,0.04995163373992495
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 

```python
raise RuntimeError('something wrong')
```


35.0,0.020481607286759962
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


38.0,0.02684718058317792
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


34.0,0.021357848628957177
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


34.0,0.020720635394405162
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


36.0,0.030424823809023782
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


36.0,0.025683697255974747
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


29.0,0.022631682501639605
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


41.0,0.0988302222404307
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
print("HelloWorld")

38.0,0.029133596538187922
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


41.0,0.019286140788317474
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


44.0,0.01546072609781568
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


66.0,0.015692627016765215
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


59.0,0.021240254045814422
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


62.0,0.018685670966853474
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


41.0,0.01922208218871202
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


34.0,0.03293168980399874
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


113.0,0.03470033870459566
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


43.0,0.030220981333481944
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
import random
print(random.random()*100)
```


43.0,0.030613130204194094
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
import random
print(random.random()*100-5)
```


41.0,0.02341860243993843
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


43.0,0.02320722276267817
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


40.0,0.02804503823954907
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


40.0,0.0217533737256993
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


43.0,0.02381294091114894
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


41.0,0.029852322966097633
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
import random
print(random.randrange(7,16))
```


37.0,0.019982634042517766
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


38.0,0.02298060366163579
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


33.0,0.020181740158018657
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


72.0,0.020380104614772132
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


39.0,0.04981680848478376
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

42.0,0.05046183407530991
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

42.0,0.07215680509757894
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

36.0,0.04557818388476431
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

42.0,0.05915935603850164
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

38.0,0.03500226049126365
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


39.0,0.027617873211218447
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


57.0,0.01714866803946624
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


47.0,0.015517258778128706
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


47.0,0.014614158041074465
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


31.0,0.034204557953137926
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


30.0,0.03250497666830365
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


40.0,0.02809005816899346
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


31.0,0.011899109066632496
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


31.0,0.014037429457727124
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


21.0,0.009225694503782633
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


15.0,0.0122636845104791
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


41.0,0.030662540722501852
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


63.0,0.012969521498931602
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


77.0,0.02209470870419805
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


29.0,0.013131296550524474
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


26.0,0.025402103604261872
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


29.0,0.02164193009290638
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


38.0,0.013538403204732874
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


70.0,0.03620727858569184
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


43.0,0.027541969941051958
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


43.0,0.03200521222984054
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


62.0,0.041963039205416997
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


28.0,0.04254473097438194
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


53.0,0.03931997468737625
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


100.0,0.07278259529232145
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


38.0,0.019235794646453863
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

37.0,0.03523386538786588
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

120.0,0.055708175397797266
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


43.0,0.015843851940648412
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


29.0,0.012302529479089719
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


31.0,0.01809134817561142
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

53.0,0.027085962785613593
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


32.0,0.012876613739299492
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


29.0,0.009672602766159222
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


27.0,0.016227305478542453
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


30.0,0.013140891928506204
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


39.0,0.04954253869173353
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

27.0,0.022644252731100267
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


17.0,0.017678606321336
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

0.0,1.1102230246251565e-16
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


12.0,0.002238365644478324
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


8.0,0.0014472318268361484
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


5.0,0.0026818067985935334
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

9.0,0.003734658409187741
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


11.0,0.0038467178751058206
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

9.0,0.003869922534936454
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

8.0,0.0032300632665630546
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

30.0,0.03962518408073079
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


41.0,0.021050735474780646
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

18.0,0.01801454208679454
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

36.0,0.061199652748189615
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


32.0,0.05937679676272001
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


39.0,0.0441712296374992
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

26.0,0.020670014748378263
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


25.0,0.021776666717798432
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


25.0,0.01485680537719336
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


22.0,0.01738232686472696
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


36.0,0.024767806932833536
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

42.0,0.025947725466822336
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


50.0,0.03291928694410995
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


34.0,0.02851384874545726
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


29.0,0.019327451060493384
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


30.0,0.02920616398124387
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


26.0,0.015183076966744369
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


26.0,0.01765968166801324
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


28.0,0.012903426291969167
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


29.0,0.015513452241088688
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


19.0,0.012010670812866997
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


34.0,0.08064468331461638
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
print("HelloWorld")

29.0,0.014986480868816487
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


34.0,0.01858342375340616
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


38.0,0.013370317748663818
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


61.0,0.013841609366562424
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


55.0,0.021920399860752005
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


58.0,0.01574831791628506
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


31.0,0.018458581467593937
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


27.0,0.014922397224780948
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


110.0,0.05331823059671459
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


34.0,0.013027300368481987
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
import random
print(random.random()*100)
```


36.0,0.01388763038369023
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


34.0,0.01785872074275685
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


38.0,0.020830972038409334
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


32.0,0.013743357005236434
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


33.0,0.016035868629200922
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


37.0,0.01960539786329396
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


33.0,0.015572087176117577
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


26.0,0.016983016938593054
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


29.0,0.008580893201631468
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


26.0,0.017110232163525252
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


66.0,0.033942331386326074
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


28.0,0.07001033277509583
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

36.0,0.07287816911805556
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

32.0,0.09687011750616181
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

25.0,0.03583162398661355
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

34.0,0.0772556221637114
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

26.0,0.04726397554739348
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


32.0,0.03826807394409315
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


47.0,0.03479875036963531
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


40.0,0.02574029617763196
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


38.0,0.0203455538275652
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


23.0,0.017780230660367935
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


21.0,0.01607589878991178
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


33.0,0.017012213831772538
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


36.0,0.011572159012591454
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


37.0,0.01707229309287206
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


29.0,0.014360381695862956
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


26.0,0.012339546367194032
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


44.0,0.02669410318672405
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


59.0,0.013119212514575596
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


71.0,0.01771212154694679
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


37.0,0.013713528021484511
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


31.0,0.024531030382964114
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


35.0,0.01875979752226442
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


42.0,0.012661769790488608
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


69.0,0.028363449332384327
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


46.0,0.02344582264609174
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


46.0,0.02728445298498028
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


60.0,0.03385793919764413
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


38.0,0.03714320839005725
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


52.0,0.03441306783186082
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


96.0,0.06447401264710562
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


42.0,0.01842582642337809
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

40.0,0.03690832757321283
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

116.0,0.05050642692890206
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


39.0,0.011379185889371257
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


39.0,0.017071792523728924
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


41.0,0.018115028331203487
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

52.0,0.023641217338698173
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


44.0,0.014310249816620324
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


40.0,0.0129668773401872
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


39.0,0.01596651084597589
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


42.0,0.01336912724474526
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


36.0,0.04185000423008767
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

37.0,0.022678680753126956
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


22.0,0.01515212422958434
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

12.0,0.002238365644478324
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


0.0,0.0
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


4.0,0.0007971771625429058
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


17.0,0.003912457462492691
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

21.0,0.005882914806411232
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


22.0,0.005497780065397584
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

21.0,0.005634004134563275
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

17.0,0.00434511493276879
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

40.0,0.03131210984267763
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


47.0,0.014884956758150825
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

30.0,0.020020673417709856
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

44.0,0.052952218280522434
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


41.0,0.05145341589228758
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


46.0,0.03642283285595105
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

37.0,0.02005084511162547
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


35.0,0.0207589960787814
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


34.0,0.018594332632703825
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


31.0,0.01634053711181649
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


42.0,0.02216914145260962
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

46.0,0.02320326705175957
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


52.0,0.031018755464963355
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


46.0,0.0380583916169992
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


38.0,0.02087346537298651
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


39.0,0.03156226337652779
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


35.0,0.013442351285021581
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


35.0,0.01483886558634162
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


39.0,0.01720755539618657
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


41.0,0.01913769169324997
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


31.0,0.015105444106444876
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


46.0,0.09184147105957141
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
print("HelloWorld")

35.0,0.01974680917661409
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


40.0,0.02125570509074215
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


44.0,0.014052092860061483
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


57.0,0.013030733928418137
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


52.0,0.022559876665921408
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


56.0,0.016420298255295673
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


43.0,0.01944908246761312
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


38.0,0.02091219508480402
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


108.0,0.04807895597532841
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


45.0,0.018651771497926628
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
import random
print(random.random()*100)
```


47.0,0.019917732680512557
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


43.0,0.017868799478909625
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


47.0,0.019520127581693303
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


44.0,0.017446243798167727
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


44.0,0.016231631415221548
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


47.0,0.019558740363052607
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


45.0,0.01916403846202297
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


36.0,0.015931511951497557
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


39.0,0.012254110263202778
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


38.0,0.017294841759759816
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


64.0,0.028979460305249116
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


40.0,0.0616242983218529
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

42.0,0.06358275668912616
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

38.0,0.08392626589755492
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

33.0,0.039485804187833984
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

38.0,0.06657360243466459
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

38.0,0.04145794493557675
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


39.0,0.031103013243929722
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


51.0,0.028964001509476534
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


44.0,0.02283184361132462
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


41.0,0.013533103303300154
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


34.0,0.02452746058196853
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


33.0,0.022609353539795762
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


45.0,0.01977542717073555
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


32.0,0.01240786316677256
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


34.0,0.016747879728923887
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


27.0,0.013934900534500971
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


22.0,0.013940609062529141
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


41.0,0.029110427566327868
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


59.0,0.013335492699206197
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


71.0,0.01980832624971851
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


33.0,0.01381495887587647
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


27.0,0.025680219734586784
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


31.0,0.021348818518912682
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


40.0,0.014142024907470852
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


70.0,0.03278683947547034
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


45.0,0.025260051593909427
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


45.0,0.029123294267933142
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


58.0,0.03855661847660796
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


34.0,0.04268924310605693
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


52.0,0.03684958711889652
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


96.0,0.06717608423377408
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


38.0,0.020224773321238065
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

37.0,0.03748819660468017
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

117.0,0.0526003532836562
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


37.0,0.013088861813757346
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


35.0,0.015890480556791764
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


37.0,0.018458039022077655
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

52.0,0.025317264426160002
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


40.0,0.015031252595985478
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


36.0,0.012540797712508156
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


35.0,0.017195440107516058
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


38.0,0.014091994893045579
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


36.0,0.04510842774627544
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

33.0,0.023112626649072543
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


21.0,0.016828550251795305
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

8.0,0.0014472318268361484
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


4.0,0.0007971771625429058
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


0.0,0.0
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


13.0,0.0029056288431024146
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

17.0,0.004282660463161836
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


19.0,0.004107064187745646
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

17.0,0.0041513593533647475
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

13.0,0.003182572966821229
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

37.0,0.036029973714432506
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


44.0,0.017899660500420356
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

26.0,0.019447844834068473
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

41.0,0.05985301409984034
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


37.0,0.05812209148940495
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


44.0,0.04164165813273735
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

33.0,0.023290463348160872
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


31.0,0.02407817324956163
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


30.0,0.01705638312759039
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


27.0,0.016045246427187965
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


39.0,0.0245964019809497
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

43.0,0.025876647601691838
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


51.0,0.03245285713425239
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


42.0,0.03617750277571752
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


34.0,0.019839935717698154
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


35.0,0.03179321648653999
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


31.0,0.014611723339660987
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


31.0,0.016643993259051526
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


35.0,0.015746824726242004
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


37.0,0.018984280708184587
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


27.0,0.01475214409827641
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


42.0,0.09211278585280769
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
print("HelloWorld")

33.0,0.020178878515650145
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


37.0,0.020632646339137417
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


41.0,0.014411456681655666
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


57.0,0.014186617266196189
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


50.0,0.022378328696374794
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


54.0,0.01651092071454463
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


39.0,0.02047555375538701
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


34.0,0.019682206653020673
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


109.0,0.050535856168903326
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


41.0,0.01757193673416657
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
import random
print(random.random()*100)
```


43.0,0.018995666832475333
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


39.0,0.0192602417948029
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


43.0,0.02143331560007644
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


40.0,0.017737343705968467
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


40.0,0.017774170012404
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


43.0,0.02104410696448722
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


41.0,0.01923852211965893
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


33.0,0.01666794737676347
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


35.0,0.011589045256830466
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


34.0,0.019461960050673244
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


63.0,0.03114892216951637
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


36.0,0.06852871004850691
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

39.0,0.07051046141832107
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

38.0,0.0941117248359149
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

29.0,0.04088127523498475
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

39.0,0.0756619941418405
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

34.0,0.04643929273120062
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


36.0,0.03464746736569024
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


47.0,0.03195210836506224
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


42.0,0.02419693648092469
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


38.0,0.01694735818531712
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


30.0,0.023296853926564443
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


29.0,0.021283973828887692
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


41.0,0.019272548342053053
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


31.0,0.010981667148618812
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


31.0,0.015211872760340195
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


26.0,0.013512068206238181
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


16.0,0.014021993600029425
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


41.0,0.03289737395946535
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


63.0,0.012348113105384861
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


79.0,0.02233355098303791
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


24.0,0.012847765700823577
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


23.0,0.024874158836740934
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


28.0,0.023734655625488266
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


40.0,0.013651437408492506
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


72.0,0.03595743476463942
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


41.0,0.029640589332127876
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


41.0,0.03439832488444938
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


63.0,0.044326252788604026
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


27.0,0.04963890455175923
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


54.0,0.037700876072787826
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


99.0,0.06969657323397538
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


34.0,0.020610067879899163
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

38.0,0.03640121869111956
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

122.0,0.05375253596629803
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


48.0,0.016758831958112896
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


25.0,0.01370943414803838
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


32.0,0.018219014280318024
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

50.0,0.028046027930016315
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


30.0,0.01620188647398335
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


27.0,0.011294324048593762
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


26.0,0.01948164579887368
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


28.0,0.015217391368567035
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


40.0,0.04852453227962095
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

24.0,0.023126833698627558
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


20.0,0.020580689574458244
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

5.0,0.0026818067985935334
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


17.0,0.003912457462492691
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


13.0,0.0029056288431024146
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


0.0,0.0
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

4.0,0.0012717962887012213
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


6.0,0.0011034597179119254
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

4.0,0.0009926950372841636
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

3.0,0.0011681395237694847
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

30.0,0.04021878814173685
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


36.0,0.02005912989465719
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

18.0,0.019366764416916094
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

35.0,0.06582842486082341
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


31.0,0.06385012074713925
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


38.0,0.045657355315351866
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

25.0,0.025533748384662047
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


23.0,0.026475427358671033
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


25.0,0.01571484844639426
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


22.0,0.016023153384395528
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


36.0,0.027641530344602594
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

39.0,0.02905378670385328
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


49.0,0.03329294586890941
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


33.0,0.03460901264996186
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 

```python
raise RuntimeError('something wrong')
```


28.0,0.018482108101767203
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


30.0,0.03175507781175535
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


24.0,0.01596586035624792
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


24.0,0.01920820479552887
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


25.0,0.013968891548154616
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


28.0,0.01848877723819009
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


17.0,0.014208516111160363
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


32.0,0.09505067467291017
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
print("HelloWorld")

28.0,0.019117245573861186
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


32.0,0.01844981193852191
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


37.0,0.013608641988093084
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


62.0,0.013519858937230511
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


55.0,0.020090622911130396
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


60.0,0.01491789661430365
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


30.0,0.019531489571832705
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


25.0,0.018415736619378453
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


112.0,0.05232637345886271
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


32.0,0.015154071623986853
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
import random
print(random.random()*100)
```


34.0,0.016556942384685858
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
import random
print(random.random()*100-5)
```


34.0,0.01934561936248058
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


37.0,0.022461566225559393
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


29.0,0.01660448011095872
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


33.0,0.01803018183302385
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


37.0,0.020937369526400684
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


30.0,0.018325055865473838
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
import random
print(random.randrange(7,16))
```


23.0,0.017004678090236647
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


27.0,0.010207648702210359
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


24.0,0.01904048655922741
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


69.0,0.033648467686854144
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


29.0,0.07347720723252038
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

36.0,0.07612531789539778
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

33.0,0.10193043517552913
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

24.0,0.0396107435513563
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

35.0,0.08108048159660708
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

27.0,0.049469451140442766
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


32.0,0.036529081391081575
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


43.0,0.033756325728459435
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


41.0,0.026007147496914573
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


40.0,0.0217808144154249
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


22.0,0.02112048087149676
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


21.0,0.019080672271880705
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


30.0,0.017196267558915457
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


32.0,0.012046469458294351
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


34.0,0.01516712066921555
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


28.0,0.012660322727505391
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


20.0,0.016019907066843975
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


43.0,0.03664176784613793
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


63.0,0.011354094534431147
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


78.0,0.023824924163242445
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


26.0,0.01194330099809393
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


27.0,0.02683538160585741
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


30.0,0.026291955859948923
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


44.0,0.014887379582599447
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


73.0,0.040190558531414955
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


39.0,0.03223831810847266
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


39.0,0.03722071543941652
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


62.0,0.05020355780917252
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


30.0,0.05594810684128715
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


54.0,0.04053771783106608
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


102.0,0.0727969735637588
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


36.0,0.021443809050007423
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

40.0,0.03720133427687167
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

120.0,0.05453703186025016
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


50.0,0.018416567427206543
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


26.0,0.01238475739892353
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


33.0,0.0188352281650902
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

51.0,0.03009731785889036
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


30.0,0.01830244293714267
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


31.0,0.011439568349866258
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


30.0,0.02191860401395407
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


30.0,0.017812011104505254
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


44.0,0.05419848478434153
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

27.0,0.025053385520732774
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


24.0,0.02273376776723135
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

9.0,0.003734658409187741
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


21.0,0.005882914806411232
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


17.0,0.004282660463161836
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


4.0,0.0012717962887012213
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

0.0,0.0
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


2.0,0.0004784593560129835
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

0.0,0.0004028498878299036
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

4.0,0.0016491283927978495
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

34.0,0.04389961528919539
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


40.0,0.022628318469046227
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

21.0,0.0199167407473283
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

39.0,0.07210443111164522
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


35.0,0.06972943631102468
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


40.0,0.05004130588067357
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

29.0,0.029016254054512802
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


27.0,0.030174277862108134
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


28.0,0.014880777750471585
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


26.0,0.016663590830916286
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


37.0,0.030373943875726783
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

39.0,0.03206241261128784
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


50.0,0.03450609230825774
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


37.0,0.03372636114064098
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


29.0,0.01849984165094065
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


32.0,0.03221690561361723
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


25.0,0.01764931855640739
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


25.0,0.021963487022162553
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


29.0,0.012467326754344255
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


32.0,0.02039762761673214
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


21.0,0.014395073430182093
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


36.0,0.09592303956208525
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
print("HelloWorld")

32.0,0.019046750047741257
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


35.0,0.017924420119232454
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


40.0,0.013905684861648893
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


62.0,0.014140949771633271
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


57.0,0.019395251418756643
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


61.0,0.014276674795171362
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


34.0,0.0197557797944663
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


29.0,0.017252594446045988
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


111.0,0.05419000117659123
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


36.0,0.0145681142583316
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
import random
print(random.random()*100)
```


37.0,0.01570473913753756
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


36.0,0.019959235276755694
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


40.0,0.02312785432131137
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


33.0,0.016570696550400332
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


36.0,0.018652746847675372
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


39.0,0.020675335415002882
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


34.0,0.018460653814763472
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


26.0,0.01851300687416335
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


29.0,0.009598556855028972
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


28.0,0.021012156827857287
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


67.0,0.035405467203503904
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


33.0,0.0794198032161566
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

39.0,0.08236975780460976
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

37.0,0.11118242042564364
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

27.0,0.03854526047972884
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

38.0,0.08843293790215134
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

31.0,0.053534784756933296
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


36.0,0.038605183535066145
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


46.0,0.036649855188555125
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


42.0,0.027923391964851607
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


41.0,0.02510182997177446
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


26.0,0.01907349868964414
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


25.0,0.017116251555188366
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


34.0,0.014852192380528373
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


34.0,0.011051013622615624
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


36.0,0.014410443034031384
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


30.0,0.012629245855612092
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


22.0,0.015542473159325776
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


45.0,0.03484301012715585
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


64.0,0.010371892480338096
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


80.0,0.022465343004205773
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


28.0,0.011907263855490124
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


29.0,0.02526599425620768
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


32.0,0.02508830443305421
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


46.0,0.013602597780766112
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


75.0,0.03844611904271156
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


41.0,0.03067280163308106
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


41.0,0.03568112265908252
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


64.0,0.04817136259999588
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


31.0,0.05399622856499009
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


55.0,0.0384781856344687
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


103.0,0.07111977072289055
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


37.0,0.02022835760879116
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

42.0,0.03549362649032617
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

120.0,0.05327027527035644
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


51.0,0.01692033464824938
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


28.0,0.012764204644444832
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


35.0,0.017992377775220558
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

52.0,0.029026853007977138
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


32.0,0.017586555483312116
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


33.0,0.011565399288624656
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


32.0,0.02093355745592962
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


32.0,0.016887412346309416
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


44.0,0.0515498711820459
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

29.0,0.023804769365130207
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


26.0,0.02179573371956811
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

11.0,0.0038467178751058206
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


22.0,0.005497780065397584
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


19.0,0.004107064187745646
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


6.0,0.0011034597179119254
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

2.0,0.0004784593560129835
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


0.0,0.0
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

2.0,0.00013150611947565505
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

6.0,0.0015731668999424686
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

36.0,0.04199068098094816
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


42.0,0.02102369951206462
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

23.0,0.01913455371002515
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

41.0,0.06952921244468235
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


37.0,0.06734336927798079
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


41.0,0.04764441972452638
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

31.0,0.028074719611351107
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


29.0,0.02928229340819688
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


30.0,0.014634324697645473
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


28.0,0.015857798278037905
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


39.0,0.02842575534234748
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

41.0,0.03029047984673028
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


52.0,0.03325975576074447
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


39.0,0.03491673752636926
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 

```python
raise RuntimeError('something wrong')
```


31.0,0.017520931728221778
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


34.0,0.031176342129215495
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


26.0,0.016423904203120343
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


26.0,0.02045610394529518
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


31.0,0.012561021273023942
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


34.0,0.02019035205614983
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


23.0,0.014375182221263216
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


38.0,0.09756167177559516
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
print("HelloWorld")

34.0,0.018306346882812408
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


37.0,0.016964581428589698
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


42.0,0.012714764836408654
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


64.0,0.012745177623293413
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


59.0,0.018449869668073715
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


63.0,0.013463297653260264
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


36.0,0.018966284511677922
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


31.0,0.01790925999560644
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


111.0,0.05261738158512674
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


38.0,0.015118655978590856
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
import random
print(random.random()*100)
```


39.0,0.015819389736078215
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
import random
print(random.random()*100-5)
```


38.0,0.019468805184670646
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


41.0,0.022226187932013475
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


35.0,0.016728618363114123
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


38.0,0.018089457548193244
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


40.0,0.020046931646847344
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


36.0,0.01854593951216421
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
import random
print(random.randrange(7,16))
```


28.0,0.017728921298315936
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


31.0,0.00956579477204511
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


30.0,0.020234860419006462
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


69.0,0.033891598422518654
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


35.0,0.07656225959693586
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

40.0,0.07930091602281719
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

39.0,0.10792882123078973
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

29.0,0.038108400278771604
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

39.0,0.08542311056293017
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

33.0,0.05130868760079532
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


38.0,0.037164953621911634
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


47.0,0.034829744844191435
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


44.0,0.026464484693491386
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


43.0,0.02323052875614795
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


26.0,0.019428550871712913
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


27.0,0.01765824076936462
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


36.0,0.015493213519733207
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


32.0,0.011417812190455123
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


34.0,0.015017808916725883
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


28.0,0.01298885079662615
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


20.0,0.01608343632681586
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


43.0,0.03568082877664658
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


63.0,0.010827384035845378
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


78.0,0.023051308913256463
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


26.0,0.012216347893493906
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


27.0,0.02580510889778731
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


30.0,0.025891066784002437
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


44.0,0.014137071848079441
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


73.0,0.03907325013266949
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


39.0,0.03154384721356629
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


39.0,0.03657903710287713
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


62.0,0.049046074479567325
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


30.0,0.05536420503474071
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


54.0,0.0391830619144935
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


102.0,0.07170276984897317
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


36.0,0.02106327339948877
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

40.0,0.03616242074428189
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

120.0,0.05401837238945606
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


50.0,0.01770926455483901
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


26.0,0.013095024840869884
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


33.0,0.018407711733926968
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

51.0,0.02965395571635121
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


30.0,0.01817883086983163
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


31.0,0.011802581807858537
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


30.0,0.021480069322851625
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


30.0,0.017333593614673237
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


44.0,0.052401568095580275
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

27.0,0.024431052233720885
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


24.0,0.022385222453400355
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

9.0,0.003869922534936454
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


21.0,0.005634004134563275
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


17.0,0.0041513593533647475
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


4.0,0.0009926950372841636
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

0.0,0.0004028498878299036
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


2.0,0.00013150611947565505
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

0.0,1.1102230246251565e-16
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

4.0,0.0016057475704368551
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

34.0,0.042751871287786236
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


40.0,0.02154607385523355
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

21.0,0.01974617901451514
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

39.0,0.07101297402718942
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


35.0,0.06877773539751242
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


40.0,0.048832025599117146
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

29.0,0.028870673493816112
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


27.0,0.03007563718130246
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


28.0,0.014923181089771864
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


26.0,0.016054242320322043
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


37.0,0.029359645745392515
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

39.0,0.031222752899885964
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


50.0,0.03393013507109033
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


37.0,0.034881308525669286
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 

```python
raise RuntimeError('something wrong')
```


29.0,0.01804670804226538
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


32.0,0.03174211522415715
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


25.0,0.01685907923638441
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


25.0,0.021060193479682465
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


29.0,0.012866710430483486
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


32.0,0.02042734154761272
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


21.0,0.014823086785104356
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


36.0,0.09791990335837653
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
print("HelloWorld")

32.0,0.018889417269017383
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


35.0,0.017526615605009566
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


40.0,0.013415459685549802
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


62.0,0.01344091380924517
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


57.0,0.018859189614189864
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


61.0,0.013884606173286684
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


34.0,0.019456502745613835
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


29.0,0.01820516900393354
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


111.0,0.05345008290587305
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


36.0,0.015343242348774488
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
import random
print(random.random()*100)
```


37.0,0.016329869855718826
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
import random
print(random.random()*100-5)
```


36.0,0.01994622468455287
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


40.0,0.022888144484186967
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


33.0,0.017099105485334887
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


36.0,0.018725838031966147
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


39.0,0.02070087428658507
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


34.0,0.01891062316888059
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
import random
print(random.randrange(7,16))
```


26.0,0.01825137019447043
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


29.0,0.009859478612237904
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


28.0,0.020952833584641395
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


67.0,0.03452249543320696
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


33.0,0.07805647824677275
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

39.0,0.08090395976123621
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

37.0,0.10951549395811522
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

27.0,0.03864296885533147
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

38.0,0.08682449401603776
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

31.0,0.052575826805941306
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


36.0,0.03792912397636472
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


46.0,0.03556902602908807
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


42.0,0.027108289246619566
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


41.0,0.024012358089789743
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


26.0,0.020007018333124682
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


25.0,0.018031431020554822
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


34.0,0.015830821958515262
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


28.0,0.010510756284299982
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


31.0,0.014828742302646969
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


26.0,0.013994761027310565
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


19.0,0.014088284627895908
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


42.0,0.03298697116896987
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


61.0,0.011283397690342922
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


78.0,0.020395495628511173
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


22.0,0.011510823519111812
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


26.0,0.026171496398423977
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


28.0,0.022229492786844274
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


40.0,0.014079220817526217
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


73.0,0.03567478520191547
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


41.0,0.028226602783744115
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


41.0,0.03317266136740038
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


61.0,0.04407553791907981
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


26.0,0.04961501067579155
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


53.0,0.037481257954987246
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


100.0,0.06798504930917804
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


33.0,0.019409884886516404
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

39.0,0.037797938355440874
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

120.0,0.05210789991058229
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


49.0,0.015128798652866537
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


25.0,0.01223756860015024
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


32.0,0.01696405629439146
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

50.0,0.02637825337416766
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


30.0,0.014747339058872488
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


27.0,0.01042791582330882
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


28.0,0.017907925304022854
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


30.0,0.014416456315218262
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


41.0,0.048591253116932576
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

27.0,0.022876844989320744
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


23.0,0.020708396738513324
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

8.0,0.0032300632665630546
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


17.0,0.00434511493276879
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


13.0,0.003182572966821229
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


3.0,0.0011681395237694847
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

4.0,0.0016491283927978495
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


6.0,0.0015731668999424686
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

4.0,0.0016057475704368551
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

0.0,-2.220446049250313e-16
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

33.0,0.03995602335304138
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


36.0,0.019464313546035283
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

21.0,0.018996980879841585
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

37.0,0.06659121074344754
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


33.0,0.0642122793672516
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


39.0,0.04484742626696747
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

28.0,0.025064825877259
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


26.0,0.025436748756345606
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


27.0,0.01469675379097446
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


25.0,0.014965206001464781
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


35.0,0.027715311625775785
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

39.0,0.028738071483409566
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


49.0,0.03280625214046351
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


36.0,0.03462470245497551
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 

```python
raise RuntimeError('something wrong')
```


28.0,0.018236440437811585
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


31.0,0.03215897018643177
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


23.0,0.014233877125909955
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


23.0,0.017477531942097113
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


28.0,0.01247583637796923
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


31.0,0.01839426182820114
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


20.0,0.013603384872628133
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


35.0,0.09675543484533222
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
print("HelloWorld")

30.0,0.01955204179428227
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


32.0,0.01839754725006415
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


37.0,0.013147531190315198
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


59.0,0.012879669240799307
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


53.0,0.019078614862835575
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


57.0,0.01379864869134273
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


33.0,0.020065135275826984
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


25.0,0.016986359604450274
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


109.0,0.05043703522209131
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


35.0,0.01612274158402871
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
import random
print(random.random()*100)
```


37.0,0.017654432260920006
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
import random
print(random.random()*100-5)
```


35.0,0.01915912903344763
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


40.0,0.02230538590793263
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


32.0,0.015696503050496302
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


36.0,0.01753989854228688
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


39.0,0.020249844785356075
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


33.0,0.01693789878436025
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
import random
print(random.randrange(7,16))
```


23.0,0.015420664604948287
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


27.0,0.009014817033860867
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


27.0,0.019539949359522635
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


67.0,0.033126412834857955
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


32.0,0.07464051775424829
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

39.0,0.077226816665948
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

36.0,0.10407542418758864
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

26.0,0.04072591335737552
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

38.0,0.083332855172353
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

30.0,0.05000453895722723
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


32.0,0.03538981937731478
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


44.0,0.032980662569679686
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


40.0,0.02466535550314053
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


40.0,0.021283945980513752
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


25.0,0.021488431629970828
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


24.0,0.019411101164861888
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


33.0,0.014957953447984895
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


41.0,0.03262052388503456
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


39.0,0.046436090333
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


35.0,0.051983819884644955
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


21.0,0.02795521117528621
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


44.0,0.03530288814803062
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


64.0,0.03978414577740852
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


74.0,0.025517200148834185
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


35.0,0.03843415472229894
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


32.0,0.04596231327834721
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


35.0,0.022854752050219918
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


44.0,0.03174592952113364
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


69.0,0.019570841870973354
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


47.0,0.031032997451139188
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


47.0,0.029029851997771305
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


65.0,0.01738826076421185
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


36.0,0.025817301932439474
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


51.0,0.039660514081695686
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


102.0,0.06399067529908387
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


46.0,0.03906406117937933
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

44.0,0.05976326917823149
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

117.0,0.05521047389787537
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


58.0,0.02605836216006019
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


36.0,0.048577169240673346
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


41.0,0.03704421544508352
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

54.0,0.032385746149705796
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


40.0,0.03154091428442407
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


37.0,0.03963205928620117
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


37.0,0.02751921581895067
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


40.0,0.02608756134343948
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


51.0,0.032845592595523554
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

36.0,0.0376643136598267
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


37.0,0.025453341938322493
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

30.0,0.03962518408073079
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


40.0,0.03131210984267763
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


37.0,0.036029973714432506
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


30.0,0.04021878814173685
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

34.0,0.04389961528919539
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


36.0,0.04199068098094816
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

34.0,0.042751871287786236
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

33.0,0.03995602335304138
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

0.0,0.0
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


29.0,0.008377789709367978
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

34.0,0.04524421426364433
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

21.0,0.01721769478414059
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


19.0,0.016379601194654536
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


27.0,0.009894145673875587
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

35.0,0.026674371778003136
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


33.0,0.024963898401815565
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


31.0,0.04967824684792432
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


25.0,0.03326587252999336
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


43.0,0.02976385227801026
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

46.0,0.0307472439607126
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


52.0,0.04543425177300564
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


42.0,0.07675937955101642
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


35.0,0.047935138376846154
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


38.0,0.056059741232528104
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


31.0,0.027088786626969452
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


31.0,0.022736765402758596
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


36.0,0.05314193482019114
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


35.0,0.03955558480947785
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


29.0,0.041612153368600246
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


41.0,0.12671253466530652
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
print("HelloWorld")

41.0,0.05216244520053692
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


40.0,0.05130884843941064
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


42.0,0.036739749134375166
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


56.0,0.032627851725005375
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


53.0,0.0502188881057547
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


55.0,0.043369492033963564
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


34.0,0.029228403322262175
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


35.0,0.056981250293207775
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


113.0,0.04888136251103714
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


43.0,0.04989691566539667
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
import random
print(random.random()*100)
```


44.0,0.05028413719544522
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


42.0,0.027402565967360015
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


47.0,0.02427609605689207
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


40.0,0.039876490526842945
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


44.0,0.025667280874369425
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


48.0,0.02627042021164039
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


43.0,0.039985635910718687
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


30.0,0.027908166677937274
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


36.0,0.04411941133982078
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


27.0,0.019721769821549717
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


60.0,0.030783260061476803
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


24.0,0.023716208381498127
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

29.0,0.02364917380353726
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

26.0,0.036800279112972234
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

29.0,0.05656978331880724
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

26.0,0.02769332817200676
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

22.0,0.01642827482353104
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


25.0,0.011599608917637116
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


58.0,0.026113242155069716
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


39.0,0.03484084220029138
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


54.0,0.017777090047857214
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


27.0,0.06234535912543604
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


25.0,0.059992931884640055
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


42.0,0.040641503681906554
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


44.0,0.016871971789429563
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


48.0,0.028658159660693405
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


40.0,0.03248186962490207
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


38.0,0.017221397636155822
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


56.0,0.025333646700054002
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


63.0,0.02023294108026208
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


72.0,0.012592922200010404
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


50.0,0.02347355005211904
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


38.0,0.029413559751962137
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


47.0,0.016797913159623312
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


51.0,0.015713611155462215
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


68.0,0.015780275536308674
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


51.0,0.019901063590513357
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


51.0,0.021371493568641653
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


62.0,0.019595994764267655
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


46.0,0.02838947430030736
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


57.0,0.027601636318161926
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


98.0,0.053988406782222165
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


47.0,0.021470718975964642
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

42.0,0.04017873734730881
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

113.0,0.0425722576540527
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


54.0,0.012417691928913066
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


52.0,0.032671270575401756
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


53.0,0.02204542014358768
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

58.0,0.020880657940478775
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


56.0,0.022864569711899763
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


53.0,0.025995611670331042
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


53.0,0.02039627047796888
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


55.0,0.01779258415966567
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


51.0,0.02835669397808338
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

48.0,0.02452485130343307
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


49.0,0.017490844136134442
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

41.0,0.021050735474780646
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


47.0,0.014884956758150825
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


44.0,0.017899660500420356
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


36.0,0.02005912989465719
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

40.0,0.022628318469046227
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


42.0,0.02102369951206462
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

40.0,0.02154607385523355
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

36.0,0.019464313546035283
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

29.0,0.008377789709367978
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


0.0,1.1102230246251565e-16
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

45.0,0.028982423187254636
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

33.0,0.025478172970000657
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


37.0,0.02474108918052398
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


38.0,0.012711994258970849
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

47.0,0.020711295965532006
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


51.0,0.020828826306779735
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


50.0,0.031503611655582686
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


45.0,0.020732603580401188
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


49.0,0.020563314918876086
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

49.0,0.02147918212677702
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


56.0,0.03045170786911855
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


62.0,0.05742079381955467
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 

```python
raise RuntimeError('something wrong')
```


49.0,0.02905397940291443
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


53.0,0.03740345713470428
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


46.0,0.01684102773574936
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


46.0,0.015713308489913036
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


50.0,0.03442575875519438
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


55.0,0.028618281380699218
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


46.0,0.027594223746184254
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


61.0,0.11617186322767592
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
print("HelloWorld")

47.0,0.03445948207348637
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


49.0,0.031884269258906195
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


50.0,0.020643064320092552
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


61.0,0.015939068391031763
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


58.0,0.02877472582019891
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


60.0,0.02310006201738435
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


44.0,0.017317080861468548
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


51.0,0.03996163593630597
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


107.0,0.03750315855103281
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


60.0,0.03453283261866802
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
import random
print(random.random()*100)
```


59.0,0.03470928181286459
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
import random
print(random.random()*100-5)
```


57.0,0.017772673075829304
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


57.0,0.015807378320051857
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


57.0,0.028331735764551946
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


58.0,0.015607301738341128
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


58.0,0.016718179516187814
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


58.0,0.029414328815264956
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
import random
print(random.randrange(7,16))
```


47.0,0.01759770696330354
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


53.0,0.026566701273352256
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


47.0,0.013266733265890895
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


55.0,0.01890399641245455
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


35.0,0.03149551012058971
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

35.0,0.03227076459573808
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

40.0,0.0504261244721087
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

46.0,0.04200851157905694
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

39.0,0.03644615522683203
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

38.0,0.01950480662416687
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


37.0,0.010431440507227774
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


51.0,0.016826130731274036
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


56.0,0.02314023164716117
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


49.0,0.009652594579614093
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


48.0,0.0442337743560528
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


47.0,0.04197019351243447
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


57.0,0.02532217763956124
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


31.0,0.013962013522361816
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


33.0,0.01352098309157379
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


30.0,0.017271117226998256
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


21.0,0.019026963963163168
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


43.0,0.02986101524223128
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


67.0,0.018878636656254555
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


83.0,0.03028357504833945
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


26.0,0.02025380024818435
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


31.0,0.018327233097352846
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


30.0,0.02748467070315319
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


42.0,0.013344737333586543
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


68.0,0.03713279263624647
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


46.0,0.02416603828689179
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


46.0,0.026535799548242034
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


68.0,0.044511313744001524
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


29.0,0.04782329995711587
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


55.0,0.031161391391672844
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


101.0,0.06616559152123258
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


41.0,0.01629352789106897
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

36.0,0.026252675142245274
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

118.0,0.04951265480234224
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


52.0,0.021299404705931724
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


26.0,0.019478014299824542
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


35.0,0.02153287179547847
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

56.0,0.02743446162392915
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


29.0,0.024767833321461374
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


26.0,0.01633830981649309
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


27.0,0.0189220667755734
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


27.0,0.01707279007943674
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


44.0,0.04385826870542486
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

20.0,0.015040644417900095
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


26.0,0.019393927503721153
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

18.0,0.01801454208679454
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


30.0,0.020020673417709856
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


26.0,0.019447844834068473
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


18.0,0.019366764416916094
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

21.0,0.0199167407473283
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


23.0,0.01913455371002515
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

21.0,0.01974617901451514
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

21.0,0.018996980879841585
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

34.0,0.04524421426364433
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


45.0,0.028982423187254636
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

0.0,-2.220446049250313e-16
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

34.0,0.06596041888068693
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


33.0,0.06527656426415607
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


39.0,0.048761202519507996
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

22.0,0.02861804085794173
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


23.0,0.03134773576465266
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


24.0,0.017499018018601764
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


26.0,0.024946136632523097
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


36.0,0.025359599380685216
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

41.0,0.027025926950910995
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


50.0,0.03247244228546675
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


30.0,0.031151994369550517
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 

```python
raise RuntimeError('something wrong')
```


24.0,0.014055568310410105
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


27.0,0.02614806313647977
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


26.0,0.02160955520065655
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


26.0,0.024341313277173815
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


25.0,0.016357670693682325
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


27.0,0.02193988231849875
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


20.0,0.01594503367188671
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


29.0,0.07337088614579179
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
print("HelloWorld")

34.0,0.02029529845106448
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


33.0,0.014915260190193735
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


39.0,0.012664783565027538
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


62.0,0.015257658039535826
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


57.0,0.01990332337994527
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


58.0,0.016407099270748238
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


29.0,0.01957541225670445
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


23.0,0.02149344819383303
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


114.0,0.049353752534931905
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


31.0,0.02212653689009958
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
import random
print(random.random()*100)
```


31.0,0.022086560909869823
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
import random
print(random.random()*100-5)
```


27.0,0.02517304517285124
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


32.0,0.026150093709754962
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


26.0,0.02316202511052301
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


29.0,0.023519671312463353
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


33.0,0.025296756814777277
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


29.0,0.024594181694861272
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
import random
print(random.randrange(7,16))
```


28.0,0.0210417131912638
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


28.0,0.014314299564290311
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


25.0,0.02522859146965728
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


72.0,0.03342167306919297
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


32.0,0.07150208926157309
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

35.0,0.07451786472237598
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

35.0,0.10289065171463063
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

26.0,0.04258113823937171
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

37.0,0.08452996891491826
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

30.0,0.05247774670067107
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


36.0,0.046835348734683535
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


52.0,0.032454339312271596
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


41.0,0.02467138085843168
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


48.0,0.024330938006631553
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


23.0,0.020743326529136352
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


22.0,0.019947845920338048
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


29.0,0.025712693408480813
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


40.0,0.05506659033178618
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


37.0,0.06657391899611598
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


39.0,0.0717491106979774
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


33.0,0.04439369499745638
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


51.0,0.04864455322131578
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


66.0,0.06343300254070383
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


83.0,0.041619888698323115
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


36.0,0.060775330119461235
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


33.0,0.06385640547502569
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


35.0,0.03271058038906327
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


48.0,0.04806055714086144
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


76.0,0.03297038821691889
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


54.0,0.04529511971550171
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


54.0,0.04347225591138548
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


72.0,0.02609812968855285
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


32.0,0.01708556796243077
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


59.0,0.057379038212606925
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


108.0,0.08371339569584557
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


48.0,0.05452884124895352
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

40.0,0.07395442906663352
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

122.0,0.07769785548104369
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


63.0,0.04575127985773342
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


31.0,0.073520058231338
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


44.0,0.06157134880095472
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

59.0,0.05203147748518466
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


34.0,0.04634386710286231
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


31.0,0.06236380298953592
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


35.0,0.04259145406384446
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


32.0,0.04217354004898388
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


58.0,0.04515547487377525
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

33.0,0.05445413900812579
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


41.0,0.04359662297720568
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

36.0,0.061199652748189615
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


44.0,0.052952218280522434
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


41.0,0.05985301409984034
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


35.0,0.06582842486082341
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

39.0,0.07210443111164522
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


41.0,0.06952921244468235
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

39.0,0.07101297402718942
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

37.0,0.06659121074344754
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

21.0,0.01721769478414059
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


33.0,0.025478172970000657
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

34.0,0.06596041888068693
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

0.0,0.0
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


4.0,0.0013000376325221774
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


11.0,0.006550626877294352
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

18.0,0.02757765109223842
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


22.0,0.027737861355751958
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


33.0,0.07436870763863479
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


34.0,0.06209403280714043
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


37.0,0.04208333030644851
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

46.0,0.04268905120474742
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


52.0,0.06442933912934656
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


36.0,0.09010148273338858
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


37.0,0.07237536890451024
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


34.0,0.07195581485867608
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


32.0,0.046603810182985095
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


32.0,0.03936054964974889
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


32.0,0.07846348719007545
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


30.0,0.056382078882295295
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


22.0,0.06310453514282555
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


36.0,0.1318073574540891
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
print("HelloWorld")

38.0,0.0672976749408637
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


34.0,0.07451784057695399
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


46.0,0.05886493604222942
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


63.0,0.05197440545572185
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


61.0,0.0758557673964787
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


64.0,0.0669913453585248
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


19.0,0.039736533791262185
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


31.0,0.07898525349504482
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


121.0,0.06678777603001129
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


35.0,0.0727068824185122
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
import random
print(random.random()*100)
```


35.0,0.07067392365150016
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


36.0,0.04164918438024978
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


40.0,0.037248068576864024
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


34.0,0.05874087145253848
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


37.0,0.03803659162561146
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


42.0,0.040572493326931136
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


34.0,0.05964667812474478
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


34.0,0.049404681931875416
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


30.0,0.06665755845895682
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


22.0,0.027605985540761546
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


67.0,0.044372589416339925
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


12.0,0.007764476929753794
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

19.0,0.009435225265563174
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

19.0,0.013871109872953147
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

33.0,0.06155878252714342
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

23.0,0.010797452711102329
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

15.0,0.00920171516117163
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


33.0,0.02390030109921293
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


60.0,0.03961603417293602
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


47.0,0.05575016483518325
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


57.0,0.03136519205350263
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


24.0,0.08346801523276937
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


24.0,0.08194442972082228
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


35.0,0.06271810006711209
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


42.0,0.054213089779277746
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


34.0,0.06526969940394378
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


36.0,0.07018074750140835
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


30.0,0.04307081479055974
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


49.0,0.04824985674033322
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


64.0,0.061704144215240064
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


83.0,0.04031243071387747
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


34.0,0.059048403411391615
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


32.0,0.06284937141181357
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


34.0,0.03199641710955825
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


48.0,0.04732574252783994
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


80.0,0.033469986998183154
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


53.0,0.044659114761591345
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


53.0,0.04258814600056027
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


69.0,0.026056002515135956
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


33.0,0.018186091325768428
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


59.0,0.056451161497751645
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


108.0,0.0829782014994096
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


46.0,0.05351734779034334
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

44.0,0.07337633037250257
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

122.0,0.07620270355652792
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


61.0,0.044863661240708286
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


28.0,0.07090857926184846
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


41.0,0.05920209509332908
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

57.0,0.05094114299494068
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


31.0,0.0441121177049385
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


28.0,0.06059519227613541
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


32.0,0.04162131981125583
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


29.0,0.041005381714663613
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


56.0,0.04467818203239349
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

33.0,0.053541161820335526
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


37.0,0.04181902830052098
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

32.0,0.05937679676272001
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


41.0,0.05145341589228758
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


37.0,0.05812209148940495
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


31.0,0.06385012074713925
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

35.0,0.06972943631102468
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


37.0,0.06734336927798079
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

35.0,0.06877773539751242
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

33.0,0.0642122793672516
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

19.0,0.016379601194654536
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


37.0,0.02474108918052398
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

33.0,0.06527656426415607
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

4.0,0.0013000376325221774
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


0.0,0.0
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


14.0,0.006628303747868158
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

22.0,0.028366833855117846
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


18.0,0.0255624289123485
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


31.0,0.07185150715892419
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


31.0,0.05947519827277603
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


37.0,0.04120440820150195
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

44.0,0.04191030715315536
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


50.0,0.06346755178301466
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


33.0,0.08859590914270898
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


34.0,0.07045016471177645
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


31.0,0.07075329750347059
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


29.0,0.04528939459494152
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


29.0,0.03838482206260607
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


30.0,0.07683071878109549
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


27.0,0.0542398997221365
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


19.0,0.06169723088346912
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


33.0,0.1315533846899971
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
print("HelloWorld")

35.0,0.06574706270823549
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


31.0,0.07298281711338783
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


43.0,0.05758592439219179
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


61.0,0.05109735397192905
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


59.0,0.074418061554412
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


62.0,0.06595330469050487
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


23.0,0.03895402280105886
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


28.0,0.07716520598907006
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


120.0,0.06557204923795601
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


33.0,0.07093198095785391
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
import random
print(random.random()*100)
```


35.0,0.068963137258653
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


38.0,0.04161458596268652
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


43.0,0.03778018480216094
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


32.0,0.057063622745644915
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


39.0,0.03788432320016133
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


45.0,0.04045334639343856
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


33.0,0.05776002883460574
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


32.0,0.047189192245776335
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


27.0,0.06513338060711704
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


19.0,0.026212143582930447
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


65.0,0.04326528789576778
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


15.0,0.009304675508694737
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

22.0,0.011188919902621275
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

22.0,0.016302861056190943
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

30.0,0.061033341656480444
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

23.0,0.01238570752599466
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

13.0,0.009314512168151157
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


30.0,0.02236213170777024
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


60.0,0.03844361830009713
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


45.0,0.054434395461790075
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


57.0,0.03099197383849439
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


21.0,0.08174052079396876
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


21.0,0.07993503801269808
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


34.0,0.06041289095359759
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


42.0,0.035848954005744615
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


43.0,0.047426655451568434
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


39.0,0.05539733260191948
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


38.0,0.034014972763588
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


55.0,0.037988199451451155
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


66.0,0.04230169055626609
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


83.0,0.025760048575698247
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


43.0,0.04094130761299719
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


39.0,0.04951904828061959
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


39.0,0.02206259664381205
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


48.0,0.0332509050123132
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


78.0,0.021488643459647738
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


54.0,0.0325711966550174
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


54.0,0.030819958222947363
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


73.0,0.021757012126690567
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


35.0,0.01940258780640569
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


59.0,0.04196014394061798
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


107.0,0.06508603410451319
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


48.0,0.03994501948052287
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

41.0,0.05936770093602384
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

121.0,0.05813001960825914
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


66.0,0.028877089149734747
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


36.0,0.05200635803506182
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


46.0,0.04183977726419352
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

59.0,0.034527350644002475
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


43.0,0.03235456159034822
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


40.0,0.04437300832451274
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


41.0,0.028923719280390725
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


42.0,0.028719791251533233
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


57.0,0.03519837933039671
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

41.0,0.0382832851570577
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


47.0,0.030514374156338953
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

39.0,0.0441712296374992
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


46.0,0.03642283285595105
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


44.0,0.04164165813273735
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


38.0,0.045657355315351866
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

40.0,0.05004130588067357
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


41.0,0.04764441972452638
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

40.0,0.048832025599117146
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

39.0,0.04484742626696747
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

27.0,0.009894145673875587
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


38.0,0.012711994258970849
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

39.0,0.048761202519507996
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

11.0,0.006550626877294352
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


14.0,0.006628303747868158
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


0.0,0.0
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

29.0,0.019971921693965555
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


26.0,0.019594109334613252
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


42.0,0.05449346350009954
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


39.0,0.042212455688444006
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


43.0,0.03067915328390669
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

49.0,0.03179060096352193
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


57.0,0.047902925721269196
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


47.0,0.07517354499806173
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 

```python
raise RuntimeError('something wrong')
```


39.0,0.05081388968067879
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


43.0,0.056631251526359616
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


41.0,0.030324089825720324
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


41.0,0.02584166046987546
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


41.0,0.057505485807800905
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


41.0,0.043920087006618314
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


33.0,0.047968485873659206
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


47.0,0.13015851084651975
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
print("HelloWorld")

41.0,0.05312886584282994
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


44.0,0.05378080758963777
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


49.0,0.03940674245164122
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


65.0,0.03308630119313427
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


62.0,0.05294050388374805
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


64.0,0.04581980560866605
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


30.0,0.027030295754797873
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


40.0,0.06128981653006227
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


118.0,0.048643167490045824
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


46.0,0.05611752188958241
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
import random
print(random.random()*100)
```


46.0,0.05519261499971018
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
import random
print(random.random()*100-5)
```


41.0,0.026090878588663324
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


45.0,0.022400321825055358
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


42.0,0.04233740350457327
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


42.0,0.02331122756098547
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


46.0,0.02411698272676499
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


43.0,0.04265290105091146
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
import random
print(random.randrange(7,16))
```


41.0,0.03310340402036671
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


41.0,0.047894580770517226
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


33.0,0.020286389510729586
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


67.0,0.029822464291672013
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


19.0,0.013681584439887429
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

23.0,0.014984140875242025
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

20.0,0.02744745129371251
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

38.0,0.051757387487494144
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

24.0,0.019475765666290612
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

22.0,0.009578812152877036
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


38.0,0.013363155134449856
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


63.0,0.026681031519972254
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


50.0,0.039307711544588564
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


59.0,0.019204522772771404
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


35.0,0.06765952445635137
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


35.0,0.0657492470332931
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


42.0,0.04259523195038761
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


34.0,0.019115540395573172
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


32.0,0.024068531566878826
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


34.0,0.02319204778359918
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


24.0,0.01641134418117085
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


44.0,0.034965764187674386
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


69.0,0.026994588502062933
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


88.0,0.025207842157517035
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


21.0,0.021313086514949675
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


31.0,0.03585195523922502
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


29.0,0.013582506214789958
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


47.0,0.01992668764204064
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


77.0,0.026462588322229808
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


51.0,0.0292961319642443
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


51.0,0.0316163412647561
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


72.0,0.028362245870213187
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


27.0,0.014106664939006475
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


62.0,0.04299812575319806
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


110.0,0.07457188427390016
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


42.0,0.024832382184710622
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

35.0,0.0449571817046206
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

128.0,0.06279283121516288
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


58.0,0.02205515598882024
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


17.0,0.02391216466750712
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


36.0,0.02931211980841275
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

58.0,0.03266901063123029
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


22.0,0.0138316923061238
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


19.0,0.018611058777251888
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


22.0,0.013794596117761349
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


21.0,0.015359391408804712
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


54.0,0.04556727902282787
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

17.0,0.027820812632803116
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


31.0,0.024848963514745415
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

26.0,0.020670014748378263
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


37.0,0.02005084511162547
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


33.0,0.023290463348160872
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


25.0,0.025533748384662047
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

29.0,0.029016254054512802
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


31.0,0.028074719611351107
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

29.0,0.028870673493816112
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

28.0,0.025064825877259
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

35.0,0.026674371778003136
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


47.0,0.020711295965532006
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

22.0,0.02861804085794173
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

18.0,0.02757765109223842
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


22.0,0.028366833855117846
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


29.0,0.019971921693965555
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

0.0,0.0
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


4.0,0.0024938737463511274
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


26.0,0.03388398611751897
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


25.0,0.03346601310319286
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


27.0,0.025760295097364216
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

38.0,0.02616930065552181
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


51.0,0.04285234451671449
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


24.0,0.03593388480037074
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


27.0,0.036053981122353806
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


23.0,0.04224807829269417
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


27.0,0.01749103844406852
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


27.0,0.015474403348077481
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


24.0,0.026993288012393424
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


18.0,0.019880969617119715
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


17.0,0.021182432363713866
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


24.0,0.07859558297192448
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
print("HelloWorld")

36.0,0.021292912525417762
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


29.0,0.03334051254075465
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


42.0,0.023074987579701833
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


65.0,0.02105970958633241
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


56.0,0.03787417566713658
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


60.0,0.029878700006972347
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


25.0,0.018317694146276597
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


19.0,0.02693993742039602
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


123.0,0.054900617969809495
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


24.0,0.024361922370462197
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
import random
print(random.random()*100)
```


24.0,0.02412257650481331
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


28.0,0.013355352737122184
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


30.0,0.015054162428992046
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


22.0,0.01487359891785378
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


28.0,0.010927677034209937
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


32.0,0.015220368812905671
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


23.0,0.015997440600160506
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


26.0,0.021690826057327195
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


20.0,0.021416797470699578
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


20.0,0.01312446903822484
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


75.0,0.03682407256943221
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


24.0,0.03652271611226776
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

26.0,0.04005381707338729
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

31.0,0.05232044915043177
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

21.0,0.03465324303085204
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

33.0,0.04199596854568355
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

25.0,0.024191923808756788
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


36.0,0.03141281159880549
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


56.0,0.03342644257457916
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


41.0,0.033743839617384364
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


51.0,0.018450799093408965
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


19.0,0.03132961426250491
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


18.0,0.030474481385530106
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


25.0,0.024871243325436887
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


37.0,0.021254130134577998
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


29.0,0.02681016885007348
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


32.0,0.02616035048078047
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


22.0,0.017237970318362716
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


42.0,0.03610701950359252
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


67.0,0.028911903971918007
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


87.0,0.02578499244841448
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


19.0,0.02231022092004442
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


28.0,0.038421814143533295
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


28.0,0.013326620340478934
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


46.0,0.022503268620083783
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


81.0,0.026676670190197482
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


52.0,0.030297653832266125
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


52.0,0.03192363186961722
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


71.0,0.027152139602879544
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


25.0,0.013981997654282208
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


61.0,0.04399265074040426
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


110.0,0.07434872172793061
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


40.0,0.027245109011866275
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

35.0,0.04921345172823588
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

129.0,0.06334456158907076
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


58.0,0.022783465138638603
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


14.0,0.024359068715105292
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


33.0,0.02990755639420739
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

56.0,0.03317984902107762
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


19.0,0.01250176895300037
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


16.0,0.01958381706690815
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


19.0,0.013472664813866442
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


18.0,0.015014200650082521
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


53.0,0.0448242012551171
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

19.0,0.02982078625800999
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


30.0,0.02475676271192595
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

25.0,0.021776666717798432
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


35.0,0.0207589960787814
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


31.0,0.02407817324956163
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


23.0,0.026475427358671033
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

27.0,0.030174277862108134
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


29.0,0.02928229340819688
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

27.0,0.03007563718130246
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

26.0,0.025436748756345606
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

33.0,0.024963898401815565
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


51.0,0.020828826306779735
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

23.0,0.03134773576465266
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

22.0,0.027737861355751958
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


18.0,0.0255624289123485
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


26.0,0.019594109334613252
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

4.0,0.0024938737463511274
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


0.0,-2.220446049250313e-16
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


23.0,0.03567118908470135
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


22.0,0.03337092714997936
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


27.0,0.026445931796421407
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

36.0,0.02704862650967288
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


49.0,0.044814580648967484
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


21.0,0.03940401954225148
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


25.0,0.038348395777143995
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


20.0,0.04560477430824872
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


25.0,0.01786378872809491
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


25.0,0.01544249046201096
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


21.0,0.029312527312119863
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


15.0,0.02021294447733024
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


14.0,0.02299675640331189
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


21.0,0.08302512972693854
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
print("HelloWorld")

34.0,0.02398876713918585
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


29.0,0.03637175012981797
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


39.0,0.02533415353994961
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


64.0,0.023509127073608083
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


60.0,0.04075346243335587
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


64.0,0.03298174097905526
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


25.0,0.0210322233624749
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


16.0,0.02909132437871287
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


123.0,0.055357745868698904
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


21.0,0.026706628122220022
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
import random
print(random.random()*100)
```


22.0,0.02658304720460647
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


26.0,0.015337724417796794
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


32.0,0.017465342664443106
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


19.0,0.015799195528757637
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


26.0,0.012706680785479318
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


33.0,0.017434010819332824
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


20.0,0.01640872130075932
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


24.0,0.020888598452046936
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


17.0,0.023555554038783844
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


18.0,0.013117931706919661
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


72.0,0.03733003414501079
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


24.0,0.03711271396644866
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

29.0,0.04052222881482137
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

29.0,0.051570348506701724
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

18.0,0.038744286506168235
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

30.0,0.041939266143547926
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

22.0,0.0241804336976309
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


36.0,0.029876086037027738
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


55.0,0.03328084906887174
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


40.0,0.034641920781654956
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


50.0,0.018714595622581043
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


17.0,0.03463782284113015
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


15.0,0.03336895775023041
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


22.0,0.025785517263143376
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


39.0,0.01744674457772366
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


29.0,0.010924626831105178
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


32.0,0.016369980091822778
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


19.0,0.021063804247818618
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


29.0,0.026427901088352357
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


65.0,0.017059631779297146
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


82.0,0.0277047756539488
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


22.0,0.021617250001817467
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


27.0,0.02024072844185032
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


30.0,0.0324980940787557
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


40.0,0.016337567303823297
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


79.0,0.04743054845903183
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


51.0,0.027352949647326597
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


51.0,0.03161567800810838
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


66.0,0.0526145460816434
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


30.0,0.060440551190477865
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


59.0,0.03400658564553649
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


106.0,0.06911816422462636
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


39.0,0.01911197496951189
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

40.0,0.026141636058043982
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

124.0,0.05204939350101412
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


50.0,0.02138976994184516
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


22.0,0.015316973813458201
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


33.0,0.014163095705972073
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

45.0,0.022917059884005386
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


26.0,0.021392345004351943
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


24.0,0.014406628772874575
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


24.0,0.02500765315731779
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


26.0,0.02018049107678277
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


47.0,0.04768692775763872
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

21.0,0.01730757766036861
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


34.0,0.022071318930185102
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

25.0,0.01485680537719336
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


34.0,0.018594332632703825
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


30.0,0.01705638312759039
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


25.0,0.01571484844639426
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

28.0,0.014880777750471585
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


30.0,0.014634324697645473
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

28.0,0.014923181089771864
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

27.0,0.01469675379097446
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

31.0,0.04967824684792432
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


50.0,0.031503611655582686
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

24.0,0.017499018018601764
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

33.0,0.07436870763863479
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


31.0,0.07185150715892419
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


42.0,0.05449346350009954
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

26.0,0.03388398611751897
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


23.0,0.03567118908470135
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


0.0,-2.220446049250313e-16
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


15.0,0.009239580433201278
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


28.0,0.02134326508165152
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

35.0,0.0229679214289501
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


44.0,0.021966966045121827
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


26.0,0.0320802016379621
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


24.0,0.01224508741825292
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


21.0,0.01719763928082496
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


24.0,0.02101495884504989
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


24.0,0.025358100302100506
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


22.0,0.016813569522885596
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


23.0,0.021618249845921533
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


18.0,0.017337200043932577
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


25.0,0.09159705736788426
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
print("HelloWorld")

37.0,0.020917251829660866
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


31.0,0.010854894038486607
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


41.0,0.013156080856192909
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


60.0,0.01567843993827689
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


53.0,0.016179941629439587
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


57.0,0.012874000782283956
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


26.0,0.02267562119961375
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


21.0,0.019073652411509934
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


120.0,0.05077613866095321
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


26.0,0.019376088007277747
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
import random
print(random.random()*100)
```


28.0,0.020112000105231287
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


27.0,0.030118493132633928
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


31.0,0.03226787519561736
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


25.0,0.022455332532276384
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


29.0,0.02758610023607677
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


33.0,0.02922338438336991
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


27.0,0.024890032793194794
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


21.0,0.022874604277214328
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


20.0,0.013265360107297619
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


22.0,0.025788877068559368
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


71.0,0.03208222528852156
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


30.0,0.08403252189628885
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

40.0,0.08637648791423513
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

36.0,0.11954991983675178
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

21.0,0.04542221988926387
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

37.0,0.09694336599497078
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

28.0,0.05660626291394211
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


35.0,0.04528869275834946
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


52.0,0.03267666579541584
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


31.0,0.015756532323770722
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


47.0,0.030891831089865485
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


21.0,0.0203728483368667
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


19.0,0.018901172691999535
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


27.0,0.021255716285894843
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


36.0,0.019128313504318317
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


28.0,0.020044846910587166
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


25.0,0.026451462606318255
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


11.0,0.020932074518813293
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


33.0,0.02685567126838795
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


59.0,0.01943176748194131
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


75.0,0.02283624382644467
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


23.0,0.02273933869880984
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


23.0,0.026857264637733524
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


26.0,0.028132838415861894
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


37.0,0.0204305882114999
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


73.0,0.03735629386902928
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


47.0,0.027306794689683
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


47.0,0.029338902168225545
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


60.0,0.040815677178746346
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


25.0,0.05565771025936472
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


52.0,0.03370187798806057
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


102.0,0.06450117652951337
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


35.0,0.025441638051606486
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

32.0,0.038700587195891534
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

120.0,0.050948256707034734
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


48.0,0.01731194574577699
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


25.0,0.02265640657757695
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


30.0,0.017094949660715564
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

48.0,0.020011238492046002
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


27.0,0.021537604297800272
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


24.0,0.020080174056758993
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


23.0,0.02641324746979523
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


27.0,0.020880136942727723
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


42.0,0.041192875896301606
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

24.0,0.02246775435987325
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


32.0,0.02084969591321717
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

22.0,0.01738232686472696
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


31.0,0.01634053711181649
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


27.0,0.016045246427187965
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


22.0,0.016023153384395528
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

26.0,0.016663590830916286
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


28.0,0.015857798278037905
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

26.0,0.016054242320322043
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

25.0,0.014965206001464781
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

25.0,0.03326587252999336
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


45.0,0.020732603580401188
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

26.0,0.024946136632523097
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

34.0,0.06209403280714043
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


31.0,0.05947519827277603
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


39.0,0.042212455688444006
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

25.0,0.03346601310319286
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


22.0,0.03337092714997936
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


15.0,0.009239580433201278
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


0.0,-2.220446049250313e-16
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


32.0,0.02210012306428144
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

36.0,0.02412760180111584
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


44.0,0.025552107656897416
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


29.0,0.04862348729387056
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


25.0,0.01909469120512619
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


26.0,0.027469087048073604
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


22.0,0.017165624903878962
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


22.0,0.01891023507773304
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


22.0,0.023696970267282014
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


23.0,0.021966273898084587
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


15.0,0.020186268250482198
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


28.0,0.1141200308804935
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
print("HelloWorld")

30.0,0.032047675059616476
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


30.0,0.02123408716430708
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


35.0,0.01778761906583115
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


56.0,0.018420795842556403
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


49.0,0.02292068357202115
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


54.0,0.01898682631107307
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


30.0,0.025596882442180058
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


21.0,0.028527652680761184
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


114.0,0.049456193313168195
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


30.0,0.02708911581850959
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
import random
print(random.random()*100)
```


32.0,0.029028153905158893
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


29.0,0.02849473691157478
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


33.0,0.028807590213499323
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


28.0,0.026686388996906008
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


31.0,0.0266773684985937
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


35.0,0.027293415254058817
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


30.0,0.02842267827984024
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


20.0,0.017391709086661655
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


24.0,0.01903373265438013
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


20.0,0.02308552179854062
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


65.0,0.02848495126318651
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


28.0,0.07136960188784047
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

36.0,0.07138888514584174
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

32.0,0.10149450037108754
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

20.0,0.052979225433848476
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

32.0,0.08169247724159812
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

26.0,0.04631977858209524
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


28.0,0.02933345587832692
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


48.0,0.028335151461761243
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


24.0,0.01434785791553006
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


46.0,0.023173740981241697
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


19.0,0.03248040469254454
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


17.0,0.030132512659655775
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


30.0,0.02277606653369757
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


42.0,0.019022970847888065
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


29.0,0.0174535003973304
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


40.0,0.02968597344758417
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


31.0,0.02488872781566598
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


29.0,0.007129297098465437
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


68.0,0.02617854424055055
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


86.0,0.02163081174131576
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


31.0,0.03243877525283301
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


34.0,0.01613931644414568
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


36.0,0.025828880414071942
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


49.0,0.014812490607860607
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


81.0,0.023214804923122223
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


52.0,0.016189122753979657
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


52.0,0.017894147156255147
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


67.0,0.033151988579382285
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


35.0,0.03637130747208939
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


65.0,0.020101028137549104
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


108.0,0.04883714700739239
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


45.0,0.018851621338022984
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

41.0,0.019994150118563203
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

126.0,0.03836394842772406
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


51.0,0.017634725386091787
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


24.0,0.02960795281137374
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


31.0,0.017013489956646533
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

44.0,0.01577592463144173
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


31.0,0.024015590343812954
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


35.0,0.02372129496072728
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


33.0,0.020955175784354574
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


34.0,0.01855913639647022
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


57.0,0.021749358537999086
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

33.0,0.01218825538044821
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


41.0,0.013103126883384442
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

36.0,0.024767806932833536
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


42.0,0.02216914145260962
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


39.0,0.0245964019809497
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


36.0,0.027641530344602594
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

37.0,0.030373943875726783
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


39.0,0.02842575534234748
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

37.0,0.029359645745392515
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

35.0,0.027715311625775785
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

43.0,0.02976385227801026
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


49.0,0.020563314918876086
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

36.0,0.025359599380685216
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

37.0,0.04208333030644851
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


37.0,0.04120440820150195
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


43.0,0.03067915328390669
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

27.0,0.025760295097364216
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


27.0,0.026445931796421407
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


28.0,0.02134326508165152
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


32.0,0.02210012306428144
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


0.0,-2.220446049250313e-16
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

16.0,0.002663410457353854
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


27.0,0.009715544174947688
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


40.0,0.05401566003485747
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 

```python
raise RuntimeError('something wrong')
```


35.0,0.02220229206385893
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


25.0,0.015667326743132537
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


30.0,0.025283434525104287
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


30.0,0.025242704519290893
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


32.0,0.03698317852495547
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


34.0,0.032894646110951165
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


30.0,0.0305522953260422
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


40.0,0.10633216006978441
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
print("HelloWorld")

43.0,0.0297840000615478
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


25.0,0.017495470397633883
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


37.0,0.015877682574870988
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


62.0,0.01563275307903289
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


60.0,0.01872777679330695
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


65.0,0.01655795112448466
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


40.0,0.023097691295320244
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


31.0,0.03968159901384227
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


119.0,0.031928847500011015
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


37.0,0.03580773292603101
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
import random
print(random.random()*100)
```


37.0,0.035136023919404735
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
import random
print(random.random()*100-5)
```


38.0,0.027454886042267423
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


42.0,0.026652487678305636
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


37.0,0.031429256686446694
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


39.0,0.02496797310467236
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


43.0,0.027265611531196887
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


37.0,0.03351789894698909
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
import random
print(random.randrange(7,16))
```


30.0,0.026993542602669174
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


28.0,0.02763341654931495
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


35.0,0.023761867555262106
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


77.0,0.01876036870558262
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


40.0,0.04925584133896632
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

41.0,0.05093361197083912
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

45.0,0.06946209970472839
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

30.0,0.047093580619805064
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

46.0,0.05647934030923418
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

38.0,0.0353555414989698
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


42.0,0.033156951895171094
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


56.0,0.014382202338035444
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


39.0,0.010679907994152193
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


49.0,0.018951193124895127
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


33.0,0.04081689465382965
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


31.0,0.03995801286944034
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


37.0,0.035397976171388734
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


48.0,0.01972191060681472
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


35.0,0.01874196752587931
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


40.0,0.03096902453631989
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


36.0,0.025988641223754883
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


27.0,0.00562382648068438
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


64.0,0.027854609941245112
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


83.0,0.018882430947346762
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


40.0,0.0346395679514544
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


34.0,0.015594289188498256
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


42.0,0.027520480266674863
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


50.0,0.01506972183055244
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


81.0,0.021937627281335415
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


52.0,0.01232574159951616
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


52.0,0.014532045658717574
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


63.0,0.031231120593374073
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


40.0,0.03602281503429072
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


63.0,0.015985855663700144
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


102.0,0.041732903653016296
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


43.0,0.017405514343594164
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

42.0,0.019605938085520136
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

120.0,0.0315318615688166
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


53.0,0.01610057293200895
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


35.0,0.03200977864960097
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


34.0,0.016828947452600773
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

40.0,0.01321804988422115
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


38.0,0.025016936299324444
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


42.0,0.02613701393581125
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


38.0,0.022354540104366438
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


40.0,0.020602618001978046
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


53.0,0.018134916359320297
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

42.0,0.012716341155602495
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


45.0,0.012894768324593575
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

42.0,0.025947725466822336
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


46.0,0.02320326705175957
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


43.0,0.025876647601691838
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


39.0,0.02905378670385328
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

39.0,0.03206241261128784
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


41.0,0.03029047984673028
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

39.0,0.031222752899885964
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

39.0,0.028738071483409566
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

46.0,0.0307472439607126
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


49.0,0.02147918212677702
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

41.0,0.027025926950910995
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

46.0,0.04268905120474742
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


44.0,0.04191030715315536
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


49.0,0.03179060096352193
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

38.0,0.02616930065552181
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


36.0,0.02704862650967288
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


35.0,0.0229679214289501
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


36.0,0.02412760180111584
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


16.0,0.002663410457353854
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

0.0,0.0
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


17.0,0.008391839491880382
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


49.0,0.05483997353606773
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


42.0,0.023976692646430653
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


34.0,0.017349455724141816
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


34.0,0.02656823594858937
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


34.0,0.026325401996550868
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


41.0,0.039038466926277327
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


43.0,0.033810407757560834
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


38.0,0.03166005804662231
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


49.0,0.10590210840101044
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
print("HelloWorld")

45.0,0.031165941738426017
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


37.0,0.01830881714710697
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


39.0,0.01700610518253387
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


60.0,0.01572280214468713
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


58.0,0.017598938719861623
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


62.0,0.015787567468730446
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


49.0,0.025057941841675757
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


40.0,0.040478091305198305
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


114.0,0.025778731481624906
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


47.0,0.037900994564375234
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
import random
print(random.random()*100)
```


48.0,0.03758119738474097
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


44.0,0.029801142345808773
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


48.0,0.029207117072094002
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


46.0,0.03249662858479918
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


44.0,0.02696386910995363
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


50.0,0.029469769277087332
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


46.0,0.03444910686853064
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


36.0,0.02740051307936875
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


37.0,0.02932037634366791
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


42.0,0.02513314214108897
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


72.0,0.016409458127368715
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


44.0,0.051150670449339186
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

48.0,0.052329170502772304
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

46.0,0.07041070742217448
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

38.0,0.05111184238506783
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

46.0,0.05827987505734955
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

42.0,0.037217124098298804
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


48.0,0.03438285891257331
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


51.0,0.011339709135706255
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


40.0,0.008790602353432764
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


53.0,0.019102041251982227
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


41.0,0.04223309397456443
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


39.0,0.041589696412196786
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


47.0,0.037315303782596176
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


54.0,0.02548854825853819
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


46.0,0.021126274007074564
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


50.0,0.037008919836078125
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


46.0,0.035347923039514506
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


40.0,0.007902015867024437
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


65.0,0.03126229816571646
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


84.0,0.023414744232217233
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


50.0,0.04152188096507137
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


45.0,0.016873572787570956
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


50.0,0.04117932816278724
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


55.0,0.020547547343889083
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


84.0,0.03321183170677544
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


54.0,0.01656800132588354
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


54.0,0.019236002605937053
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


70.0,0.04616632989284608
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


51.0,0.06006364128009678
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


66.0,0.013147826098844795
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


100.0,0.032871757085041864
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


55.0,0.02284947227427503
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

47.0,0.01758076608596726
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

120.0,0.023001289914337808
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


57.0,0.023185558760789426
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


46.0,0.03704711334212274
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


39.0,0.015574511219447862
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

51.0,0.012543744595392425
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


49.0,0.03805540494960569
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


52.0,0.032313738759695565
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


50.0,0.036110748046176866
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


52.0,0.030850960658502236
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


56.0,0.02033945157922601
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

52.0,0.01560638476447751
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


56.0,0.021483909369402365
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

50.0,0.03291928694410995
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


52.0,0.031018755464963355
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


51.0,0.03245285713425239
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


49.0,0.03329294586890941
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

50.0,0.03450609230825774
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


52.0,0.03325975576074447
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

50.0,0.03393013507109033
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

49.0,0.03280625214046351
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

52.0,0.04543425177300564
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


56.0,0.03045170786911855
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

50.0,0.03247244228546675
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

52.0,0.06442933912934656
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


50.0,0.06346755178301466
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


57.0,0.047902925721269196
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

51.0,0.04285234451671449
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


49.0,0.044814580648967484
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


44.0,0.021966966045121827
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


44.0,0.025552107656897416
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


27.0,0.009715544174947688
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

17.0,0.008391839491880382
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


0.0,1.1102230246251565e-16
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


60.0,0.06066146588875443
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


49.0,0.022072561255125578
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


44.0,0.014208493176268155
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


45.0,0.03521949835785543
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


45.0,0.03797628721531199
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


52.0,0.042335971754353885
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


54.0,0.04258808959487426
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


49.0,0.03926404666328498
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


60.0,0.12127342281186604
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
print("HelloWorld")

51.0,0.039465330461604387
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


48.0,0.017321397361295454
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


49.0,0.020216523325550906
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


64.0,0.01852316951945354
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


61.0,0.012194943499561961
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


66.0,0.013594806660342185
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


59.0,0.03267191650295098
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


51.0,0.04548412350297937
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


113.0,0.020004459632168792
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


58.0,0.043753106314187384
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
import random
print(random.random()*100)
```


59.0,0.04387460339667659
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


55.0,0.03915848235688324
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


58.0,0.03854713690071487
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


57.0,0.04334051283211715
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


57.0,0.03710556785575514
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


60.0,0.038404803967697854
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


57.0,0.04554235854183464
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


45.0,0.035467112949651436
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


48.0,0.03515056338536704
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


53.0,0.03625381773883696
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


71.0,0.01655959161977405
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


52.0,0.07416117794032862
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

55.0,0.07543694589639416
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

53.0,0.09899605648225274
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

48.0,0.060632186203501415
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

54.0,0.08177485154048192
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

52.0,0.055141631101973454
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


54.0,0.04541797388862612
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


54.0,0.013250190774736659
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


39.0,0.008126398523718215
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


56.0,0.03135348957443651
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


52.0,0.04636413378910609
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


50.0,0.04547538439794796
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


59.0,0.04129857182507357
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


49.0,0.0348054918222338

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


38.0,0.030751562309142666

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


42.0,0.02223115543720855

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


31.0,0.034714306541294926

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


52.0,0.06282312991896999

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


78.0,0.03614289474711896

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


97.0,0.055517225066642695

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


28.0,0.032914914837326226

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


36.0,0.04730407860870667

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


36.0,0.0454040411816673

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


57.0,0.035211428600782635

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


94.0,0.07329374038852243

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


64.0,0.058070241518840104

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


64.0,0.06262750163861575

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


82.0,0.07359789506867898

```python
raise RuntimeError('something wrong')
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


38.0,0.06411459603832104

```python
raise RuntimeError('something wrong')
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


73.0,0.06934008186213969

```python
raise RuntimeError('something wrong')
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


122.0,0.10908416048607616

```python
raise RuntimeError('something wrong')
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


49.0,0.03821919202100221

```python
raise RuntimeError('something wrong')
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

49.0,0.05035013791334175

```python
raise RuntimeError('something wrong')
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

141.0,0.08722993015227709

```python
raise RuntimeError('something wrong')
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


68.0,0.04848930719555333

```python
raise RuntimeError('something wrong')
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


21.0,0.026299337255167643

```python
raise RuntimeError('something wrong')
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


47.0,0.03841245946713534

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

66.0,0.05374167871309021

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


16.0,0.03476705564492577

```python
raise RuntimeError('something wrong')
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


13.0,0.02402574528911905

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


22.0,0.035890451083861685

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


16.0,0.03373637419897213

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


60.0,0.08769015076161846

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

23.0,0.04302589448388816

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


42.0,0.04995163373992495

```python
raise RuntimeError('something wrong')
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

34.0,0.02851384874545726

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


46.0,0.0380583916169992

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


42.0,0.03617750277571752

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


33.0,0.03460901264996186

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

37.0,0.03372636114064098

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


39.0,0.03491673752636926

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

37.0,0.034881308525669286

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

36.0,0.03462470245497551

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

42.0,0.07675937955101642

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


62.0,0.05742079381955467

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

30.0,0.031151994369550517

```python
raise RuntimeError('something wrong')
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

36.0,0.09010148273338858

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


33.0,0.08859590914270898

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


47.0,0.07517354499806173

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

24.0,0.03593388480037074

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


21.0,0.03940401954225148

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


26.0,0.0320802016379621

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


29.0,0.04862348729387056

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


40.0,0.05401566003485747

```python
raise RuntimeError('something wrong')
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

49.0,0.05483997353606773

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


60.0,0.06066146588875443

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


0.0,-2.220446049250313e-16

```python
raise RuntimeError('something wrong')
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


29.0,0.03435162174018136

```python
raise RuntimeError('something wrong')
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


19.0,0.03935655384638814

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


30.0,0.039762753291108566

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


30.0,0.04396283560450842

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


16.0,0.0246709978650832

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


7.0,0.024432296531091913

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


17.0,0.027648331679653304

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


1.0,0.04737335721673441

```python
raise RuntimeError('something wrong')
```


 ############################################# 
print("HelloWorld")

46.0,0.025008801203249442

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


37.0,0.03623308800639691

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


52.0,0.03536296892439672

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


77.0,0.03740397372169635

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


71.0,0.04475439732781905

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


76.0,0.03808425346705213

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


20.0,0.031726731786644535

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


12.0,0.0190424805163677

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


137.0,0.08388769560986653

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


10.0,0.01852721532172885

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
import random
print(random.random()*100)
```


13.0,0.018594073577472336

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


25.0,0.03540387540850998

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


35.0,0.041909830352600985

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


12.0,0.022984396793291895

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


27.0,0.03367535209355521

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


37.0,0.0386401241749974

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


9.0,0.023958923773334195

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


30.0,0.04129774480284654

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


14.0,0.021885201366152462

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


20.0,0.03617913526957872

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


83.0,0.06500499532584925

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


34.0,0.09888923222023283

```python
raise RuntimeError('something wrong')
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

44.0,0.10547799308759864

```python
raise RuntimeError('something wrong')
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

41.0,0.13427446842588442

```python
raise RuntimeError('something wrong')
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

30.0,0.04635553693271499

```python
raise RuntimeError('something wrong')
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

42.0,0.11227590474375637

```python
raise RuntimeError('something wrong')
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

31.0,0.0739020364576004

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


45.0,0.0770421172761605

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


66.0,0.0678791532879307

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


51.0,0.05654885754946615

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


59.0,0.054457380206725525

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


20.0,0.02015894191912959

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


18.0,0.019493640119366606

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


15.0,0.033265691143742004

```python
raise RuntimeError('something wrong')
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


41.0,0.014404847259465337
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


31.0,0.012563447848642051
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


35.0,0.021213064918387592
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


26.0,0.024814544664095828
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


38.0,0.02611685406060893
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


66.0,0.01754480657263069
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


85.0,0.02752821557094165
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


28.0,0.02603431307347559
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


31.0,0.014392944336327318
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


35.0,0.03556714261653571
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


46.0,0.012692828258244693
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


80.0,0.04124522035134204
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


52.0,0.023654837886135316
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


52.0,0.026963224557601806
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


70.0,0.050662953152280754
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


34.0,0.05886566658051473
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


63.0,0.024260997243909066
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


107.0,0.054854166596201126
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


41.0,0.016792161312124798
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

42.0,0.019515483363784947
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

128.0,0.039929835019085314
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


57.0,0.02102692495207359
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


20.0,0.021391647943901693
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


37.0,0.016296992111534903
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

55.0,0.023603364998896703
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


28.0,0.027996817683200947
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


25.0,0.01956006920263087
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


24.0,0.028240850509187787
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


27.0,0.02289275183135342
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


47.0,0.03902261545642538
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

20.0,0.01195372669535999
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


35.0,0.020481607286759962
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

29.0,0.019327451060493384
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


38.0,0.02087346537298651
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


34.0,0.019839935717698154
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


28.0,0.018482108101767203
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

29.0,0.01849984165094065
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


31.0,0.017520931728221778
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

29.0,0.01804670804226538
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

28.0,0.018236440437811585
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

35.0,0.047935138376846154
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


49.0,0.02905397940291443
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

24.0,0.014055568310410105
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

37.0,0.07237536890451024
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


34.0,0.07045016471177645
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


39.0,0.05081388968067879
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

27.0,0.036053981122353806
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


25.0,0.038348395777143995
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


24.0,0.01224508741825292
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


25.0,0.01909469120512619
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


35.0,0.02220229206385893
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

42.0,0.023976692646430653
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


49.0,0.022072561255125578
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


29.0,0.03435162174018136
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 

```python
raise RuntimeError('something wrong')
```


0.0,1.1102230246251565e-16
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


28.0,0.01762167592433128
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


31.0,0.02401055910399752
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


31.0,0.02828072401478321
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


27.0,0.02259031587039695
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


28.0,0.027427725939915826
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


23.0,0.026548673392870703
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


28.0,0.09301977163099551
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
print("HelloWorld")

40.0,0.024106238863207063
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


33.0,0.010880589052111866
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


44.0,0.012367409625520742
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


60.0,0.013803807178560112
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


57.0,0.01352199610722149
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


62.0,0.011960100439470711
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


29.0,0.021252878592130653
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


26.0,0.02809152884910604
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


121.0,0.04013724668915386
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


30.0,0.02596672264302924
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
import random
print(random.random()*100)
```


30.0,0.02570784902918477
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
import random
print(random.random()*100-5)
```


28.0,0.02954969668294094
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


34.0,0.03050139440191668
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


25.0,0.028379549947595617
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


30.0,0.0278482094750907
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


36.0,0.029005972066769248
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


28.0,0.030619486603388202
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


29.0,0.023917025480456044
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


25.0,0.019066889635262707
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


27.0,0.029280004878452504
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


71.0,0.028024822440238184
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


31.0,0.07724304940896154
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

39.0,0.0791989547531402
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

36.0,0.11214773521161447
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

24.0,0.04771926033448348
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

38.0,0.09052483121413901
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

29.0,0.05620208424853668
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


38.0,0.04710615929078976
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


57.0,0.027776005283032146
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


41.0,0.01974645269445674
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


53.0,0.028431838191144698
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


26.0,0.027698335752522785
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


24.0,0.02665097625247126
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


29.0,0.028044631816312338
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


43.0,0.025288717625035262
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


32.0,0.018439745790421957
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


38.0,0.028236588709196875
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


28.0,0.03268457600967256
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


37.0,0.019136989356494327
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


71.0,0.027700427708326925
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


90.0,0.033896565778465115
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


26.0,0.03957708338681132
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


29.0,0.01622865469537682
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


33.0,0.042030276950240864
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


50.0,0.017912726258577538
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


88.0,0.04625100007646399
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


57.0,0.02754512237027784
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


57.0,0.03162677982034734
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


74.0,0.05604262670541371
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


34.0,0.06374093154376603
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


67.0,0.026832842125089074
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


114.0,0.06091890022748769
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


43.0,0.022476613465877482
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

42.0,0.015875949164355196
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

132.0,0.04581092181658597
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


60.0,0.02887575791520358
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


20.0,0.03306122285107549
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


42.0,0.017007099053261476
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

50.0,0.02141175973089604
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


13.0,0.03824886017890072
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


15.0,0.02793734539417192
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


21.0,0.034675487458744936
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


16.0,0.029538230938743082
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


56.0,0.038355659810775156
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

22.0,0.017422980672555988
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


38.0,0.02684718058317792
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

30.0,0.02920616398124387
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


39.0,0.03156226337652779
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


35.0,0.03179321648653999
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


30.0,0.03175507781175535
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

32.0,0.03221690561361723
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


34.0,0.031176342129215495
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

32.0,0.03174211522415715
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

31.0,0.03215897018643177
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

38.0,0.056059741232528104
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


53.0,0.03740345713470428
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

27.0,0.02614806313647977
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

34.0,0.07195581485867608
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


31.0,0.07075329750347059
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


43.0,0.056631251526359616
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

23.0,0.04224807829269417
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


20.0,0.04560477430824872
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


21.0,0.01719763928082496
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


26.0,0.027469087048073604
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


25.0,0.015667326743132537
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

34.0,0.017349455724141816
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


44.0,0.014208493176268155
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


19.0,0.03935655384638814
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


28.0,0.01762167592433128
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


0.0,-2.220446049250313e-16
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


23.0,0.034589075340359265
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


23.0,0.03907173818465581
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


20.0,0.03459570730783268
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


18.0,0.03514333768073896
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


19.0,0.033776157742686275
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


19.0,0.0984673046406539
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
print("HelloWorld")

41.0,0.030135502130211878
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


33.0,0.015065111162006928
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


43.0,0.019942066042670015
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


67.0,0.020469520224667193
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


64.0,0.017284624702702867
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


68.0,0.017104259333487803
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


23.0,0.02875712150460419
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


18.0,0.03712974837603322
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


127.0,0.04281323428860495
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


22.0,0.03511346795447101
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
import random
print(random.random()*100)
```


24.0,0.034111094250043106
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


24.0,0.03938327303546785
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


34.0,0.03989443188742692
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


20.0,0.037977163342496234
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


26.0,0.03651124192675237
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


36.0,0.038981101479816926
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


22.0,0.041223703437412995
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


25.0,0.03601213102109757
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


19.0,0.028246256340406894
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


22.0,0.03549611920944029
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


78.0,0.027457320753637826
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


32.0,0.0807870292116607
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

41.0,0.0839564304222069
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

39.0,0.11128729225687817
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

27.0,0.051952301512906196
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

40.0,0.08933444623235631
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

29.0,0.0583577972126037
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


40.0,0.05511714173451643
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


58.0,0.0272502710300766
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


44.0,0.02021027866130176
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


52.0,0.035636901807034715
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


22.0,0.03516630735546633
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


20.0,0.03440986425617909
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


23.0,0.040015273274553675
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


32.0,0.014299470208319232
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


29.0,0.019779672514088742
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


28.0,0.021282678336404515
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


18.0,0.0113483319793648
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


41.0,0.030970220088587963
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


56.0,0.013747420058256465
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


76.0,0.01844465967902742
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


24.0,0.01441088498747145
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


24.0,0.02832980095178106
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


23.0,0.014485134194128446
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


39.0,0.014558984822711452
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


78.0,0.028932239397479242
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


45.0,0.025462949575922877
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


45.0,0.02857188017557133
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


59.0,0.030078093151613472
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


22.0,0.031897521565171116
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


57.0,0.034808763318985525
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


101.0,0.062122974748842985
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


29.0,0.01873221886675691
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

38.0,0.0440364870531339
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

115.0,0.05076076918315853
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


48.0,0.01134409373826728
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


22.0,0.018880447934234157
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


36.0,0.016847609727771995
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

48.0,0.021996316883711287
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


23.0,0.015556999647843295
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


24.0,0.015076301933027225
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


26.0,0.01506696498860638
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


25.0,0.012673397287935817
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


46.0,0.043515315720602965
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

29.0,0.02533184687617418
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


34.0,0.021357848628957177
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

26.0,0.015183076966744369
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


35.0,0.013442351285021581
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


31.0,0.014611723339660987
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


24.0,0.01596586035624792
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

25.0,0.01764931855640739
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


26.0,0.016423904203120343
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

25.0,0.01685907923638441
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

23.0,0.014233877125909955
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

31.0,0.027088786626969452
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


46.0,0.01684102773574936
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

26.0,0.02160955520065655
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

32.0,0.046603810182985095
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


29.0,0.04528939459494152
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


41.0,0.030324089825720324
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

27.0,0.01749103844406852
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


25.0,0.01786378872809491
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


24.0,0.02101495884504989
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


22.0,0.017165624903878962
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


30.0,0.025283434525104287
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

34.0,0.02656823594858937
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


45.0,0.03521949835785543
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


30.0,0.039762753291108566
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


31.0,0.02401055910399752
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


23.0,0.034589075340359265
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


0.0,1.1102230246251565e-16
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


0.0,0.0013270315341683547
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


18.0,0.012486248642902487
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


24.0,0.01845615397393352
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


14.0,0.014263596729076622
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


29.0,0.09761921568008092
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
print("HelloWorld")

31.0,0.022807536587057364
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


28.0,0.025309017080453078
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


41.0,0.016843273639607692
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


58.0,0.015060719702118641
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


49.0,0.027453795241214385
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


54.0,0.02149007773024514
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


29.0,0.020886168291435525
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


21.0,0.020592971062037058
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


109.0,0.0478552837416637
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


25.0,0.02334618029410107
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
import random
print(random.random()*100)
```


28.0,0.024107716116536837
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


27.0,0.017797519833711806
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


33.0,0.019998718416164296
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


26.0,0.017038143029301844
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


29.0,0.015751947093132435
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


34.0,0.01921965330695985
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


23.0,0.01879525207617294
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


16.0,0.011161514213575474
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


18.0,0.014498984569317641
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


22.0,0.015984147348160893
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


67.0,0.032046308848771354
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


30.0,0.055316138265126824
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

37.0,0.05801284044202559
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

34.0,0.07974598686382761
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

24.0,0.04331812229595555
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

34.0,0.06393771405063498
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

27.0,0.03662580507766544
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


34.0,0.02797438146402409
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


47.0,0.029682147661792446
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


35.0,0.023789747972547626
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


40.0,0.012806479927299441
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


18.0,0.024287096463959768
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


16.0,0.022820243160182052
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


27.0,0.01978233521934669
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


32.0,0.016935649318549406
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


29.0,0.023733680465648055
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


28.0,0.025758500497403136
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


18.0,0.011889654820041229
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


41.0,0.03057105689214512
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


56.0,0.0185050280650082
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


76.0,0.018898193823824516
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


24.0,0.016968910267937565
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


24.0,0.03097592975853669
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


23.0,0.013183451462046247
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


39.0,0.01723879011317464
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


78.0,0.026098244608911525
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


45.0,0.024713028503889012
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


45.0,0.027113087240832945
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


59.0,0.02596828791610495
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


22.0,0.025672699735129534
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


57.0,0.03580064884022505
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


101.0,0.062441391660501666
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


29.0,0.021542633993320126
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

38.0,0.04817439881932506
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

115.0,0.05240493459579776
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


48.0,0.01200421482976477
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


22.0,0.02229543890232699
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


36.0,0.020016523710205014
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

48.0,0.02311213429244452
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


23.0,0.014882689760747914
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


24.0,0.01742115211312245
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


26.0,0.01444384763189377
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


25.0,0.012350278636104495
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


46.0,0.0408036230096086
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

29.0,0.026308690667232737
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


34.0,0.020720635394405162
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

26.0,0.01765968166801324
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


35.0,0.01483886558634162
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


31.0,0.016643993259051526
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


24.0,0.01920820479552887
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

25.0,0.021963487022162553
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


26.0,0.02045610394529518
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

25.0,0.021060193479682465
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

23.0,0.017477531942097113
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

31.0,0.022736765402758596
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


46.0,0.015713308489913036
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

26.0,0.024341313277173815
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

32.0,0.03936054964974889
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


29.0,0.03838482206260607
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


41.0,0.02584166046987546
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

27.0,0.015474403348077481
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


25.0,0.01544249046201096
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


24.0,0.025358100302100506
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


22.0,0.01891023507773304
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


30.0,0.025242704519290893
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

34.0,0.026325401996550868
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


45.0,0.03797628721531199
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


30.0,0.04396283560450842
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


31.0,0.02828072401478321
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


23.0,0.03907173818465581
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


0.0,0.0013270315341683547
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


0.0,0.0
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


18.0,0.017220206579731112
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


24.0,0.019124867402641188
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


14.0,0.016055555095087604
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


29.0,0.09939877234662942
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
print("HelloWorld")

31.0,0.027007322666178446
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


28.0,0.03014217809230224
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


41.0,0.01967870776513625
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


58.0,0.018002443291828762
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


49.0,0.03277259128015131
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


54.0,0.025975497790145075
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


29.0,0.0219236376990799
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


21.0,0.024492120241980997
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


109.0,0.04872867486158228
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


25.0,0.026842424009192567
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
import random
print(random.random()*100)
```


28.0,0.02764566812379432
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


27.0,0.01876191942708838
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


33.0,0.020321498470722288
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


26.0,0.018954737212704575
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


29.0,0.016471104261709835
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


34.0,0.020437253698238345
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


23.0,0.02032825629198154
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


16.0,0.012052372099217723
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


18.0,0.017997114422854454
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


22.0,0.014917271709846025
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


67.0,0.03267350433255056
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


30.0,0.04823325758469754
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

37.0,0.05035661794818158
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

34.0,0.06938390415696993
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

24.0,0.04648993563684112
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

34.0,0.056652081177078095
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

27.0,0.031891613199064306
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


34.0,0.02529426054327455
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


47.0,0.029462041754440116
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


35.0,0.024853166010622596
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


40.0,0.011545270304406885
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


18.0,0.029267028416285035
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


16.0,0.02768581822474081
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


27.0,0.02321336160923726
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


41.0,0.01586493407402889
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


30.0,0.014626428964403915
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


34.0,0.011040662277420621
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


25.0,0.015714892184952367
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


42.0,0.04422362103463995
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


62.0,0.013015138747071053
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


88.0,0.03308258596297742
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


20.0,0.010774638231318523
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


26.0,0.03130737360627556
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


25.0,0.0242816805893038
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


47.0,0.018700563999202613
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


85.0,0.05053376372036378
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


56.0,0.038600472519489615
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


56.0,0.04387433173329647
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


71.0,0.056211571305175956
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


29.0,0.05382426033469734
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


65.0,0.04946443473051343
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


108.0,0.08310054841280279
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


38.0,0.02108690759140064
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

44.0,0.04352303472516672
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

125.0,0.06510352031675837
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


58.0,0.0221511401288923
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


17.0,0.010883508466576819
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


42.0,0.020924720292234023
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

55.0,0.03425930177239267
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


13.0,0.02062618637924385
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


15.0,0.009945492634364284
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


22.0,0.020963877286780175
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


18.0,0.018521266665084357
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


52.0,0.0669062445508487
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

24.0,0.030244421329675197
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


36.0,0.030424823809023782
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

28.0,0.012903426291969167
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


39.0,0.01720755539618657
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


35.0,0.015746824726242004
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


25.0,0.013968891548154616
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

29.0,0.012467326754344255
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


31.0,0.012561021273023942
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

29.0,0.012866710430483486
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

28.0,0.01247583637796923
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

36.0,0.05314193482019114
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


50.0,0.03442575875519438
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

25.0,0.016357670693682325
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

32.0,0.07846348719007545
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


30.0,0.07683071878109549
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


41.0,0.057505485807800905
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

24.0,0.026993288012393424
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


21.0,0.029312527312119863
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


22.0,0.016813569522885596
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


22.0,0.023696970267282014
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


32.0,0.03698317852495547
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

41.0,0.039038466926277327
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


52.0,0.042335971754353885
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


16.0,0.0246709978650832
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


27.0,0.02259031587039695
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


20.0,0.03459570730783268
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


18.0,0.012486248642902487
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


18.0,0.017220206579731112
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


0.0,1.1102230246251565e-16
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


11.0,0.017353350669813694
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


14.0,0.008591345063051037
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


15.0,0.07916829927739166
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
print("HelloWorld")

38.0,0.01650087909239417
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


29.0,0.0198580994512213
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


44.0,0.016690539816553107
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


68.0,0.018078722447660844
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


61.0,0.02499820819714793
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


66.0,0.01980508391311564
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


20.0,0.02321041339756713
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


5.0,0.006703838897821779
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


123.0,0.06424123120722403
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


11.0,0.010858158668252682
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
import random
print(random.random()*100)
```


13.0,0.011678034164140705
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


20.0,0.021303681219540516
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


28.0,0.026384719231701492
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


10.0,0.011540997172368783
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


22.0,0.02004781698121627
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


30.0,0.02347785417627768
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


8.0,0.012869541596588818
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


15.0,0.01767092950165383
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


5.0,0.007454940380728581
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


17.0,0.02374499780813366
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


75.0,0.04740157834942782
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


31.0,0.08758835565632683
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

39.0,0.0923637826406477
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

37.0,0.1208558246995135
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

26.0,0.040231387737102
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

38.0,0.09780851886996833
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

29.0,0.06084357952150643
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


39.0,0.05178316308306241
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


55.0,0.047073225863895174
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


42.0,0.03388638379481779
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


47.0,0.029007615772897677
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


16.0,0.009171458675946043
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


14.0,0.008460042055525419
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


11.0,0.013949322337331704
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


44.0,0.02137603417215872
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


33.0,0.02139575380614489
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


37.0,0.01909561838944085
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


25.0,0.014014016409808927
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


46.0,0.03820511438996521
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


72.0,0.024534160677894046
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


91.0,0.029389183375437278
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


22.0,0.017889291451811395
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


30.0,0.033066500561128365
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


30.0,0.02272848202759281
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


51.0,0.021588445145492297
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


89.0,0.043840097260902544
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


58.0,0.03408746805096685
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


58.0,0.036846196702491896
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


76.0,0.04045215880407682
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


32.0,0.03998415384580889
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


67.0,0.04537009492601862
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


116.0,0.08408370989441216
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


44.0,0.028993545035487234
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

43.0,0.04412813652259895
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

135.0,0.065803897197529
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


63.0,0.025247525134394877
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


17.0,0.018935637375499637
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


43.0,0.02319710759561444
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

60.0,0.031188583607577147
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


13.0,0.01791249975128395
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


13.0,0.013171347066677996
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


21.0,0.019541917199067504
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


15.0,0.014838214969464247
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


55.0,0.05369742225373053
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

22.0,0.02778202419646436
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


36.0,0.025683697255974747
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

29.0,0.015513452241088688
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


41.0,0.01913769169324997
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


37.0,0.018984280708184587
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


28.0,0.01848877723819009
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

32.0,0.02039762761673214
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


34.0,0.02019035205614983
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

32.0,0.02042734154761272
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

31.0,0.01839426182820114
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

35.0,0.03955558480947785
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


55.0,0.028618281380699218
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

27.0,0.02193988231849875
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

30.0,0.056382078882295295
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


27.0,0.0542398997221365
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


41.0,0.043920087006618314
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

18.0,0.019880969617119715
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


15.0,0.02021294447733024
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


23.0,0.021618249845921533
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


23.0,0.021966273898084587
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


34.0,0.032894646110951165
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

43.0,0.033810407757560834
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


54.0,0.04258808959487426
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


7.0,0.024432296531091913
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


28.0,0.027427725939915826
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


18.0,0.03514333768073896
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


24.0,0.01845615397393352
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


24.0,0.019124867402641188
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


11.0,0.017353350669813694
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


0.0,-2.220446049250313e-16
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


11.0,0.01025452968891738
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


6.0,0.07166505199689965
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
print("HelloWorld")

40.0,0.02361046507860709
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


32.0,0.02762962443149697
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


47.0,0.022278299453133643
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


71.0,0.023613519046260523
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


65.0,0.03304044255696392
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


71.0,0.027604029479621595
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


16.0,0.019101638235009544
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


6.0,0.01625207664042483
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


131.0,0.062357797313961516
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


10.0,0.014842151356894373
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
import random
print(random.random()*100)
```


13.0,0.016245532432973997
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


24.0,0.021249756899197947
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


34.0,0.02553305978774656
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


12.0,0.017054457009503143
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


26.0,0.020295347703228495
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


36.0,0.024720686455700802
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


9.0,0.017307239039474287
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


23.0,0.01388101429065125
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


8.0,0.013909173853875023
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


13.0,0.014122761147666973
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


76.0,0.03975031961950959
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


27.0,0.06479399965430654
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

37.0,0.06752158683614118
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

34.0,0.09320629036493577
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

24.0,0.0413065232294495
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

35.0,0.07561032837266513
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

24.0,0.040898766543144616
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


39.0,0.03925328994397714
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


59.0,0.040439169801921304
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


45.0,0.03245110725512057
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


54.0,0.027559226876684995
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


13.0,0.019826289636851513
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


11.0,0.017924642205809027
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


15.0,0.020512783551626446
```python
unicodeString = u"hello world!"
print(unicodeString)
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


37.0,0.017008472872151792
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


25.0,0.015271064489666863
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


26.0,0.011683723334569907
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


16.0,0.009346630682526835
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


41.0,0.035977984519703465
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


62.0,0.015572760507264527
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


81.0,0.02706013422142428
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


18.0,0.012633151216898453
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


21.0,0.02903358157685587
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


20.0,0.019184724691109434
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


40.0,0.017392219182900015
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


79.0,0.04123006399888274
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


49.0,0.03203813781494791
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


49.0,0.035526424999736794
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


66.0,0.041497736122016904
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


22.0,0.04201014420850624
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


56.0,0.044386088640111176
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


107.0,0.08346518187401453
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


34.0,0.020686412686042877
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

38.0,0.04169877983933845
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

124.0,0.0630173717211715
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


52.0,0.01968467308693811
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


13.0,0.013770586700193821
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


36.0,0.02031168196766231
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

53.0,0.03004158248069233
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


16.0,0.018094974171688705
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


13.0,0.011070307193344786
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


18.0,0.017967021588631837
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


16.0,0.015498853168632865
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


45.0,0.05655557202739425
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

21.0,0.027486433634646312
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


29.0,0.022631682501639605
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

19.0,0.012010670812866997
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


31.0,0.015105444106444876
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


27.0,0.01475214409827641
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


17.0,0.014208516111160363
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

21.0,0.014395073430182093
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


23.0,0.014375182221263216
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

21.0,0.014823086785104356
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

20.0,0.013603384872628133
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

29.0,0.041612153368600246
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


46.0,0.027594223746184254
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

20.0,0.01594503367188671
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

22.0,0.06310453514282555
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


19.0,0.06169723088346912
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


33.0,0.047968485873659206
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

17.0,0.021182432363713866
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


14.0,0.02299675640331189
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


18.0,0.017337200043932577
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


15.0,0.020186268250482198
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


30.0,0.0305522953260422
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

38.0,0.03166005804662231
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


49.0,0.03926404666328498
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


17.0,0.027648331679653304
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


23.0,0.026548673392870703
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


19.0,0.033776157742686275
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


14.0,0.014263596729076622
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


14.0,0.016055555095087604
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


14.0,0.008591345063051037
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


11.0,0.01025452968891738
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


0.0,-2.220446049250313e-16
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


17.0,0.07906859183354231
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
print("HelloWorld")

30.0,0.016865042188404678
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


24.0,0.021245830373232133
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


39.0,0.01563115525153924
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


60.0,0.01722338955569913
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


56.0,0.027374569179100194
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


61.0,0.021815074042420446
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


19.0,0.020759685325345112
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


10.0,0.009332920213437124
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


120.0,0.06155805769785738
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


19.0,0.011627295062857201
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
import random
print(random.random()*100)
```


21.0,0.012580124339816257
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


23.0,0.01976516330613387
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


31.0,0.0234546241441973
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


17.0,0.013265020311108433
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


24.0,0.018281389741669485
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


32.0,0.021596410860071802
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


18.0,0.014724189767188922
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


19.0,0.013937279091877586
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


11.0,0.00824704572366397
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


12.0,0.01642973343240106
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


69.0,0.04122417677813495
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


20.0,0.0728780843099448
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

30.0,0.07589641836043659
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

27.0,0.10035147899045016
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

18.0,0.036689466345800725
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

28.0,0.08161037597546494
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

17.0,0.048536868562846336
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


30.0,0.04156032222422845
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


51.0,0.040645730872385766
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


36.0,0.029207040314223498
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


43.0,0.02374458485237474
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


6.0,0.011114003254312443
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


4.0,0.010125768643933997
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


20.0,0.015091916003873163
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


48.0,0.09155555168274576
print("HelloWorld")

 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


38.0,0.08661188469523873
print("HelloWorld")

 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


42.0,0.0662270392290728
print("HelloWorld")

 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


31.0,0.07947734241896165
print("HelloWorld")

 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


51.0,0.11622793677106169
print("HelloWorld")

 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


77.0,0.09684252394128323
print("HelloWorld")

 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


97.0,0.11637440323058135
print("HelloWorld")

 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


27.0,0.08937906808816742
print("HelloWorld")

 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


35.0,0.1043442552357946
print("HelloWorld")

 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


35.0,0.09447487367606833
print("HelloWorld")

 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


56.0,0.0888497665346053
print("HelloWorld")

 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


93.0,0.12201466351771395
print("HelloWorld")

 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


63.0,0.11169146361004267
print("HelloWorld")

 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


63.0,0.11459316193014635
print("HelloWorld")

 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


82.0,0.11312967861574386
print("HelloWorld")

 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


37.0,0.09540205522846201
print("HelloWorld")

 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


73.0,0.12949958809936635
print("HelloWorld")

 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


121.0,0.1731467354555083
print("HelloWorld")

 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


48.0,0.08694680313244174
print("HelloWorld")

 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

49.0,0.10292366791218366
print("HelloWorld")

 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

140.0,0.1448366883669855
print("HelloWorld")

 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


67.0,0.10786474156026926
print("HelloWorld")

 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


20.0,0.08023594383442434
print("HelloWorld")

 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


46.0,0.10062691818435221
print("HelloWorld")

 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

65.0,0.11183937299128976
print("HelloWorld")

 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


15.0,0.08608973873740922
print("HelloWorld")

 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


12.0,0.07570629897439296
print("HelloWorld")

 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


21.0,0.0829789400284261
print("HelloWorld")

 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


15.0,0.08557067752122371
print("HelloWorld")

 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


59.0,0.1464937725396872
print("HelloWorld")

 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

22.0,0.09816694685688077
print("HelloWorld")

 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


41.0,0.0988302222404307
print("HelloWorld")

 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

34.0,0.08064468331461638
print("HelloWorld")

 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


46.0,0.09184147105957141
print("HelloWorld")

 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


42.0,0.09211278585280769
print("HelloWorld")

 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


32.0,0.09505067467291017
print("HelloWorld")

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

36.0,0.09592303956208525
print("HelloWorld")

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


38.0,0.09756167177559516
print("HelloWorld")

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

36.0,0.09791990335837653
print("HelloWorld")

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

35.0,0.09675543484533222
print("HelloWorld")

 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

41.0,0.12671253466530652
print("HelloWorld")

 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


61.0,0.11617186322767592
print("HelloWorld")

 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

29.0,0.07337088614579179
print("HelloWorld")

 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

36.0,0.1318073574540891
print("HelloWorld")

 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


33.0,0.1315533846899971
print("HelloWorld")

 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


47.0,0.13015851084651975
print("HelloWorld")

 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

24.0,0.07859558297192448
print("HelloWorld")

 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


21.0,0.08302512972693854
print("HelloWorld")

 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


25.0,0.09159705736788426
print("HelloWorld")

 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


28.0,0.1141200308804935
print("HelloWorld")

 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


40.0,0.10633216006978441
print("HelloWorld")

 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

49.0,0.10590210840101044
print("HelloWorld")

 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


60.0,0.12127342281186604
print("HelloWorld")

 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


1.0,0.04737335721673441
print("HelloWorld")

 ############################################# 

```python
raise RuntimeError('something wrong')
```


28.0,0.09301977163099551
print("HelloWorld")

 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


19.0,0.0984673046406539
print("HelloWorld")

 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


29.0,0.09761921568008092
print("HelloWorld")

 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


29.0,0.09939877234662942
print("HelloWorld")

 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


15.0,0.07916829927739166
print("HelloWorld")

 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


6.0,0.07166505199689965
print("HelloWorld")

 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


17.0,0.07906859183354231
print("HelloWorld")

 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


0.0,0.0
print("HelloWorld")

 ############################################# 
print("HelloWorld")

46.0,0.06538239134043722
print("HelloWorld")

 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


37.0,0.09713153599772728
print("HelloWorld")

 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


52.0,0.09287224791266147
print("HelloWorld")

 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


76.0,0.09544944079141615
print("HelloWorld")

 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


70.0,0.10879644240836694
print("HelloWorld")

 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


75.0,0.09837881595546316
print("HelloWorld")

 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


20.0,0.08756379083027332
print("HelloWorld")

 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


11.0,0.06611300068345305
print("HelloWorld")

 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


136.0,0.14404089705289058
print("HelloWorld")

 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


9.0,0.06579794539549444
print("HelloWorld")

 ############################################# 
```python
import random
print(random.random()*100)
```


12.0,0.06503387082473
print("HelloWorld")

 ############################################# 
```python
import random
print(random.random()*100-5)
```


24.0,0.09072938723801105
print("HelloWorld")

 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


34.0,0.09734557731401239
print("HelloWorld")

 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


11.0,0.07272309572712898
print("HelloWorld")

 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


26.0,0.08970503637319593
print("HelloWorld")

 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


36.0,0.0971971389011107
print("HelloWorld")

 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


8.0,0.07455456744042699
print("HelloWorld")

 ############################################# 
```python
import random
print(random.randrange(7,16))
```


29.0,0.09621507546173691
print("HelloWorld")

 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


14.0,0.07229663601338732
print("HelloWorld")

 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


19.0,0.08603731939525738
print("HelloWorld")

 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


82.0,0.12525170852843237
print("HelloWorld")

 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


33.0,0.13948577357163405
print("HelloWorld")

 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

43.0,0.14741224118545204
print("HelloWorld")

 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

40.0,0.16436085332154204
print("HelloWorld")

 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

30.0,0.08392723378265254
print("HelloWorld")

 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

41.0,0.14805907322881762
print("HelloWorld")

 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

30.0,0.12558786266894006
print("HelloWorld")

 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


45.0,0.13995447843727882
print("HelloWorld")

 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


65.0,0.13029041708420797
print("HelloWorld")

 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


50.0,0.11406492046250238
print("HelloWorld")

 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


58.0,0.10924945153732923
print("HelloWorld")

 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


19.0,0.06182920700764083
print("HelloWorld")

 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


17.0,0.0633861843545177
print("HelloWorld")

 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


14.0,0.09262848063932805
print("HelloWorld")

 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


40.0,0.014693839538182374
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


34.0,0.012621903080058505
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


16.0,0.004401578024754493
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


27.0,0.018175726726350816
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


46.0,0.04188998425220569
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


56.0,0.013615223622651329
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


67.0,0.03169654627845553
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


38.0,0.02260985082427469
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


36.0,0.026971465944387263
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


34.0,0.02879629962745367
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


42.0,0.014326151294864808
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


72.0,0.045037845126355225
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


46.0,0.0370744544367092
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


46.0,0.04300082478906175
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


53.0,0.05115960272584452
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


32.0,0.04566982851074686
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


50.0,0.04591294506367549
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


94.0,0.087710075525539
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


43.0,0.016504391304632215
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

36.0,0.02888874911331074
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

113.0,0.06483048088121413
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


51.0,0.025991373863846867
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


37.0,0.015206247146549612
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


40.0,0.023490736392402845
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

52.0,0.03835142788383428
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


42.0,0.020852705166694574
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


38.0,0.01623280800359006
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


37.0,0.0228158170247994
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


39.0,0.023865701199308975
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


42.0,0.06354910646947698
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

40.0,0.02765685118994332
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


38.0,0.029133596538187922
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

29.0,0.014986480868816487
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


35.0,0.01974680917661409
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


33.0,0.020178878515650145
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


28.0,0.019117245573861186
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

32.0,0.019046750047741257
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


34.0,0.018306346882812408
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

32.0,0.018889417269017383
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

30.0,0.01955204179428227
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

41.0,0.05216244520053692
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


47.0,0.03445948207348637
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

34.0,0.02029529845106448
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

38.0,0.0672976749408637
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


35.0,0.06574706270823549
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


41.0,0.05312886584282994
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

36.0,0.021292912525417762
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


34.0,0.02398876713918585
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


37.0,0.020917251829660866
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


30.0,0.032047675059616476
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


43.0,0.0297840000615478
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

45.0,0.031165941738426017
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


51.0,0.039465330461604387
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


46.0,0.025008801203249442
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


40.0,0.024106238863207063
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


41.0,0.030135502130211878
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


31.0,0.022807536587057364
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


31.0,0.027007322666178446
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


38.0,0.01650087909239417
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


40.0,0.02361046507860709
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


30.0,0.016865042188404678
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


46.0,0.06538239134043722
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
print("HelloWorld")

0.0,0.0
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


36.0,0.01650571230767739
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


43.0,0.013547336369435392
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


53.0,0.014207097039964145
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


51.0,0.024556783630569012
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


56.0,0.01850241980039169
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


41.0,0.020677510700338964
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


36.0,0.017600927464521576
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


103.0,0.06139605853689001
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


42.0,0.014588131637633839
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
import random
print(random.random()*100)
```


43.0,0.012847597760791474
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


41.0,0.021946874688019924
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


43.0,0.02545386829327445
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


42.0,0.014173456229095938
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


41.0,0.01887830856929451
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


43.0,0.022146695341924483
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


43.0,0.01867907445536543
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


34.0,0.027233418146349497
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


39.0,0.011158079487307404
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


35.0,0.02396153260149525
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


60.0,0.04391098699070706
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


33.0,0.07543368938452777
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

39.0,0.08029718392103169
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

36.0,0.10293009310211676
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

33.0,0.02689854630975097
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

38.0,0.08138038323704544
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

31.0,0.05545339063911703
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


35.0,0.055770947427873474
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


50.0,0.04524849560358779
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


44.0,0.03588588128711845
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


47.0,0.030569713378649332
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


34.0,0.014460270498640737
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


33.0,0.014662696530976405
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


43.0,0.023548213583992395
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


36.0,0.010880342533357013
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


7.0,0.003631211432941983
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


36.0,0.013430563090161884
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


27.0,0.023794797381543553
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


41.0,0.024161005691896276
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


64.0,0.016500089058505973
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


85.0,0.027550984902570352
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


27.0,0.02481178688104002
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


33.0,0.00969775431490949
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


33.0,0.03523915892991514
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


46.0,0.010085529107720204
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


75.0,0.0411107166517628
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


52.0,0.023842455244525773
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


52.0,0.02815051186765616
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


65.0,0.05541376787971386
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


34.0,0.060120957719813184
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


62.0,0.02319451780708115
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


106.0,0.0580660488300736
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


40.0,0.01280110080113972
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

38.0,0.010966012898700694
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

124.0,0.04107081110794586
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


53.0,0.021424474882145716
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


21.0,0.015125222304091301
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


37.0,0.013521396730018176
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

52.0,0.024847237066355166
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


28.0,0.025376464131408816
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


28.0,0.015093570065492945
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


27.0,0.025690697170378862
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


30.0,0.022193366729100106
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


53.0,0.03963459909516376
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

28.0,0.00969095349793292
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


41.0,0.019286140788317474
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

34.0,0.01858342375340616
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


40.0,0.02125570509074215
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


37.0,0.020632646339137417
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


32.0,0.01844981193852191
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

35.0,0.017924420119232454
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


37.0,0.016964581428589698
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

35.0,0.017526615605009566
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

32.0,0.01839754725006415
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

40.0,0.05130884843941064
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


49.0,0.031884269258906195
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

33.0,0.014915260190193735
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

34.0,0.07451784057695399
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


31.0,0.07298281711338783
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


44.0,0.05378080758963777
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

29.0,0.03334051254075465
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


29.0,0.03637175012981797
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


31.0,0.010854894038486607
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


30.0,0.02123408716430708
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


25.0,0.017495470397633883
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

37.0,0.01830881714710697
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


48.0,0.017321397361295454
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


37.0,0.03623308800639691
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


33.0,0.010880589052111866
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


33.0,0.015065111162006928
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


28.0,0.025309017080453078
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


28.0,0.03014217809230224
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


29.0,0.0198580994512213
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


32.0,0.02762962443149697
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


24.0,0.021245830373232133
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


37.0,0.09713153599772728
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
print("HelloWorld")

36.0,0.01650571230767739
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


0.0,-2.220446049250313e-16
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


15.0,0.004895771711384556
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


41.0,0.008549823877483265
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


49.0,0.0063918610544932974
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


52.0,0.006042568158255657
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


36.0,0.020009432551096884
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


26.0,0.024413635772508324
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


108.0,0.03873127345313565
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


35.0,0.022291458764624905
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
import random
print(random.random()*100)
```


36.0,0.021755595161335406
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


37.0,0.027829064762864397
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


44.0,0.030276121873974104
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


36.0,0.024089352017315768
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


39.0,0.025565400297902996
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


45.0,0.02735110262371676
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


36.0,0.026692806394805535
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


25.0,0.025702161149992686
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


28.0,0.01627248849803853
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


27.0,0.028823113524214627
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


70.0,0.028287084578482835
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


35.0,0.08135497987662876
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

44.0,0.08472155339907272
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

41.0,0.11445616164919548
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

30.0,0.044840589623643234
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

42.0,0.09241974400848663
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

32.0,0.057692069429737924
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


37.0,0.05017612998110288
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


53.0,0.02475661101033133
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


38.0,0.017562660078892622
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


51.0,0.029572403158446336
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


28.0,0.021685575074082752
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


27.0,0.021418626768666016
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


38.0,0.025404924667547735
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


41.0,0.008282062398478618
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


17.0,0.004898377452539293
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


39.0,0.011766552814886921
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


37.0,0.015674615537435432
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


45.0,0.023773481473817526
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


63.0,0.011715138204718367
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


83.0,0.01906416462828442
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


39.0,0.01839503089699701
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


42.0,0.014506734802856469
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


41.0,0.02423926554990319
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


47.0,0.008567935896797052
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


73.0,0.029153014355525197
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


53.0,0.020255193472061173
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


53.0,0.02385410623572981
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


61.0,0.040152040168263015
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


42.0,0.04557954638752071
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


63.0,0.023762979611730684
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


102.0,0.056883787157596455
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


49.0,0.011140342807308246
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

40.0,0.019567729185664073
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

117.0,0.03969940861529275
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


59.0,0.014235276904415617
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


36.0,0.010979945795877577
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


39.0,0.010426539973764859
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

54.0,0.020885650423519753
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


41.0,0.016321936750466004
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


42.0,0.010892119222445928
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


36.0,0.016766045314586253
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


42.0,0.014963588041961295
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


54.0,0.03596955065633023
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

38.0,0.011112981544640688
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


44.0,0.01546072609781568
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

38.0,0.013370317748663818
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


44.0,0.014052092860061483
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


41.0,0.014411456681655666
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


37.0,0.013608641988093084
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

40.0,0.013905684861648893
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


42.0,0.012714764836408654
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

40.0,0.013415459685549802
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

37.0,0.013147531190315198
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

42.0,0.036739749134375166
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


50.0,0.020643064320092552
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

39.0,0.012664783565027538
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

46.0,0.05886493604222942
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


43.0,0.05758592439219179
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


49.0,0.03940674245164122
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

42.0,0.023074987579701833
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


39.0,0.02533415353994961
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


41.0,0.013156080856192909
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


35.0,0.01778761906583115
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


37.0,0.015877682574870988
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

39.0,0.01700610518253387
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


49.0,0.020216523325550906
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


52.0,0.03536296892439672
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


44.0,0.012367409625520742
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


43.0,0.019942066042670015
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


41.0,0.016843273639607692
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


41.0,0.01967870776513625
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


44.0,0.016690539816553107
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


47.0,0.022278299453133643
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


39.0,0.01563115525153924
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


52.0,0.09287224791266147
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
print("HelloWorld")

43.0,0.013547336369435392
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


15.0,0.004895771711384556
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


0.0,-2.220446049250313e-16
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


26.0,0.0025316515117213
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


52.0,0.010890639157320137
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


56.0,0.007634190178047562
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


48.0,0.016295828534387047
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


41.0,0.020955369259632373
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


102.0,0.03761952985007655
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


49.0,0.018867441037394572
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
import random
print(random.random()*100)
```


49.0,0.018312237363552808
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


48.0,0.019767311211785432
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


51.0,0.021505131796969224
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


48.0,0.017981440604498244
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


49.0,0.017578737941433498
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


52.0,0.019573810894584986
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


50.0,0.020578811041998102
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


36.0,0.01789568111525419
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


43.0,0.012649682790540684
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


40.0,0.02038770505681553
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


67.0,0.025145331054950093
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


44.0,0.0669225508574397
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

49.0,0.06968292321651592
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

46.0,0.095331234826451
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

38.0,0.037331333303425085
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

47.0,0.07560560331910593
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

41.0,0.046233213799010464
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


41.0,0.03768805610067538
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


54.0,0.023494683421805385
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


41.0,0.016471029027355644
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


58.0,0.0197398163729825
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


43.0,0.020185573140091728
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


42.0,0.019586652100662016
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


50.0,0.020036411136247878
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


57.0,0.007766339956881696
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


43.0,0.007996149177107337
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


54.0,0.013459416619026054
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


55.0,0.01476453329432259
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


63.0,0.021186609504439624
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


63.0,0.00798225924350604
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


76.0,0.011894000747288302
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


60.0,0.01646716842890994
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


62.0,0.01559906807485889
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


61.0,0.019405106739050715
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


55.0,0.006457649690789324
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


75.0,0.022680186937098723
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


69.0,0.017145424356353356
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


69.0,0.020789027581433195
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


67.0,0.033191353511235255
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


58.0,0.04032551316497268
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


65.0,0.020801116711848033
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


95.0,0.05073477415952621
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


65.0,0.009013936289252955
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

58.0,0.020745655959984677
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

112.0,0.03431935090804672
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


65.0,0.009640744285582481
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


61.0,0.015239773465573814
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


58.0,0.00942823971825324
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

65.0,0.01627695122618944
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


65.0,0.018684160754098067
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


66.0,0.013498110090865656
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


60.0,0.01701489157808289
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


66.0,0.0157307671057606
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


58.0,0.032226522401800906
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

62.0,0.013503150933526387
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


66.0,0.015692627016765215
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

61.0,0.013841609366562424
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


57.0,0.013030733928418137
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


57.0,0.014186617266196189
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


62.0,0.013519858937230511
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

62.0,0.014140949771633271
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


64.0,0.012745177623293413
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

62.0,0.01344091380924517
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

59.0,0.012879669240799307
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

56.0,0.032627851725005375
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


61.0,0.015939068391031763
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

62.0,0.015257658039535826
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

63.0,0.05197440545572185
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


61.0,0.05109735397192905
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


65.0,0.03308630119313427
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

65.0,0.02105970958633241
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


64.0,0.023509127073608083
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


60.0,0.01567843993827689
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


56.0,0.018420795842556403
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


62.0,0.01563275307903289
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

60.0,0.01572280214468713
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


64.0,0.01852316951945354
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


77.0,0.03740397372169635
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


60.0,0.013803807178560112
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


67.0,0.020469520224667193
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


58.0,0.015060719702118641
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


58.0,0.018002443291828762
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


68.0,0.018078722447660844
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


71.0,0.023613519046260523
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


60.0,0.01722338955569913
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


76.0,0.09544944079141615
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
print("HelloWorld")

53.0,0.014207097039964145
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


41.0,0.008549823877483265
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


26.0,0.0025316515117213
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


0.0,-2.220446049250313e-16
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


43.0,0.009979250381268567
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


48.0,0.0062611860947558995
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


70.0,0.016017750999628988
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


67.0,0.02231176317930017
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


103.0,0.03185354246508332
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


74.0,0.020551557339131166
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
import random
print(random.random()*100)
```


74.0,0.02019796370957394
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


70.0,0.01680938355147288
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


69.0,0.01795765431636942
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


73.0,0.018051414964058043
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


70.0,0.01468209046827329
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


70.0,0.016479813671819943
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


75.0,0.02131268119732932
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


59.0,0.01672897004159679
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


68.0,0.01309971348789507
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


65.0,0.018671864796507398
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


62.0,0.01855749192128564
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


57.0,0.05998139483910525
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

62.0,0.06257015653265452
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

59.0,0.0865491263529371
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

59.0,0.03225500422624761
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

59.0,0.0664782799522905
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

55.0,0.040720809944665204
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


58.0,0.032162296597891715
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


64.0,0.019140656990321414
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


55.0,0.014983895359814814
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


69.0,0.015128915736420945
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


64.0,0.0226775093035696
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


63.0,0.022150881424056745
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


75.0,0.018855080339854058
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


47.0,0.011630080219264038
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


50.0,0.010530789901146753
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


49.0,0.020270321306285366
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


48.0,0.02801842328633042
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


57.0,0.020120300952106818
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


57.0,0.01733450039224227
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


68.0,0.020623768937848563
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


52.0,0.02602442071813671
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


54.0,0.010338888429613169
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


58.0,0.03644889777916105
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


47.0,0.01050632473504165
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


69.0,0.035679302143550085
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


63.0,0.019355133948188885
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


63.0,0.023455114522750398
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


68.0,0.05341926040661782
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


53.0,0.06309676974810796
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


57.0,0.01492058814638908
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


87.0,0.041909296222040204
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


59.0,0.013229936276466736
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

50.0,0.0104281125761706
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

108.0,0.02667983826543352
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


60.0,0.018210365709574572
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


55.0,0.02409329344540001
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


55.0,0.01364001383473723
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

61.0,0.018365133659714927
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


63.0,0.032824101353262414
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


60.0,0.02188870691591216
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


60.0,0.031209175083255603
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


63.0,0.02735336217739992
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


51.0,0.032642021847780645
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

55.0,0.012627389047040305
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


59.0,0.021240254045814422
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

55.0,0.021920399860752005
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


52.0,0.022559876665921408
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


50.0,0.022378328696374794
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


55.0,0.020090622911130396
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

57.0,0.019395251418756643
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


59.0,0.018449869668073715
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

57.0,0.018859189614189864
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

53.0,0.019078614862835575
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

53.0,0.0502188881057547
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


58.0,0.02877472582019891
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

57.0,0.01990332337994527
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

61.0,0.0758557673964787
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


59.0,0.074418061554412
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


62.0,0.05294050388374805
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

56.0,0.03787417566713658
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


60.0,0.04075346243335587
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


53.0,0.016179941629439587
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


49.0,0.02292068357202115
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


60.0,0.01872777679330695
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

58.0,0.017598938719861623
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


61.0,0.012194943499561961
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


71.0,0.04475439732781905
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


57.0,0.01352199610722149
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


64.0,0.017284624702702867
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


49.0,0.027453795241214385
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


49.0,0.03277259128015131
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


61.0,0.02499820819714793
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


65.0,0.03304044255696392
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


56.0,0.027374569179100194
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


70.0,0.10879644240836694
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
print("HelloWorld")

51.0,0.024556783630569012
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


49.0,0.0063918610544932974
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


52.0,0.010890639157320137
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


43.0,0.009979250381268567
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


0.0,1.1102230246251565e-16
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


23.0,0.0020178770874712537
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


64.0,0.022760995608951506
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


60.0,0.030694683139833367
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


101.0,0.024866165258690565
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


70.0,0.029276860286993944
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
import random
print(random.random()*100)
```


71.0,0.029774015025517242
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


66.0,0.0283975253748856
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


68.0,0.030301181153235435
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


67.0,0.029667295329798837
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


66.0,0.027007385926580807
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


70.0,0.027889817752242196
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


69.0,0.03159532741208959
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


51.0,0.026983886944159985
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


62.0,0.019899762318880354
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


58.0,0.03285548136626326
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


64.0,0.019952122967274888
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


57.0,0.0831780323869924
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

61.0,0.08579021222115546
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

54.0,0.11396975264387266
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

56.0,0.05075454434691773
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

54.0,0.0926705320482637
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

56.0,0.05979635376966452
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


54.0,0.04741258891590716
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


60.0,0.01709920701551193
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


51.0,0.014192125502795583
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


66.0,0.028128852136548255
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


60.0,0.03019749200832289
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


58.0,0.029524396372587303
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


69.0,0.0280175840266782
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


41.0,0.00736490655384292
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


54.0,0.008106553132984362
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


53.0,0.014802709357680577
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


52.0,0.022378693393611537
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


60.0,0.019522287127271665
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


64.0,0.01235008852912134
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


70.0,0.016745771109125784
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


58.0,0.02045519988692801
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


59.0,0.011852818511716712
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


62.0,0.02923602739186848
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


52.0,0.0077014266430481815
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


68.0,0.030496052948515318
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


67.0,0.01797548171648966
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


67.0,0.022326302444328427
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


70.0,0.04658326632339105
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


58.0,0.05395513595300794
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


64.0,0.018227117369930657
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


87.0,0.04570898866712625
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


65.0,0.010434835427911793
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

54.0,0.012700555326384255
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

115.0,0.030455174707179622
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


65.0,0.013968464062388053
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


60.0,0.018598439517321652
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


56.0,0.011509644250882745
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

68.0,0.017256923803600444
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


68.0,0.02521955095856554
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


65.0,0.016090800094679558
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


65.0,0.024202336219888654
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


67.0,0.021245673350194116
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


54.0,0.03393188797469371
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

58.0,0.011462826860565323
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


62.0,0.018685670966853474
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

58.0,0.01574831791628506
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


56.0,0.016420298255295673
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


54.0,0.01651092071454463
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


60.0,0.01491789661430365
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

61.0,0.014276674795171362
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


63.0,0.013463297653260264
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

61.0,0.013884606173286684
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

57.0,0.01379864869134273
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

55.0,0.043369492033963564
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


60.0,0.02310006201738435
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

58.0,0.016407099270748238
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

64.0,0.0669913453585248
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


62.0,0.06595330469050487
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


64.0,0.04581980560866605
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

60.0,0.029878700006972347
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


64.0,0.03298174097905526
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


57.0,0.012874000782283956
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


54.0,0.01898682631107307
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


65.0,0.01655795112448466
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

62.0,0.015787567468730446
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


66.0,0.013594806660342185
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


76.0,0.03808425346705213
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


62.0,0.011960100439470711
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


68.0,0.017104259333487803
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


54.0,0.02149007773024514
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


54.0,0.025975497790145075
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


66.0,0.01980508391311564
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


71.0,0.027604029479621595
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


61.0,0.021815074042420446
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


75.0,0.09837881595546316
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
print("HelloWorld")

56.0,0.01850241980039169
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


52.0,0.006042568158255657
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


56.0,0.007634190178047562
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


48.0,0.0062611860947558995
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


23.0,0.0020178770874712537
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


0.0,0.0
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


67.0,0.01815089897511102
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


65.0,0.02474991914206226
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


100.0,0.028522528544892234
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


75.0,0.022974879169933127
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
import random
print(random.random()*100)
```


76.0,0.02317394331737843
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


70.0,0.021900940320779716
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


65.0,0.022988378098778073
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


72.0,0.022355452830330136
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


69.0,0.02026202587269421
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


65.0,0.020676944805555375
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


74.0,0.02450800285603738
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


57.0,0.022417958829451967
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


67.0,0.014304413418884554
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


61.0,0.026158782205200626
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


70.0,0.019113323856300046
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


60.0,0.07477295792259142
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

64.0,0.07706932893456597
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

57.0,0.10437379388248935
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

61.0,0.042122285990185526
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

57.0,0.0835485673562516
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

59.0,0.05271686973379197
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


57.0,0.04122210523541692
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


66.0,0.01765311936417613
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


55.0,0.012999008372927556
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


72.0,0.022837207606753007
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


65.0,0.025145212267518757
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


63.0,0.02459011582535331
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


73.0,0.021752580900875507
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


39.0,0.012653912121105226
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


37.0,0.018549759129702692
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


38.0,0.01818292597443749
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


31.0,0.01951260125071108
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


51.0,0.0330050343935141
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


71.0,0.019447634293579652
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


89.0,0.02235833547197197
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


28.0,0.0181053503968297
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


33.0,0.02269103198840694
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


35.0,0.0220526000336847
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


49.0,0.012571135398261268
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


84.0,0.030902707751150227
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


54.0,0.026100370093946834
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


54.0,0.028239288554723685
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


75.0,0.04077846711335231
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


31.0,0.036492339753698144
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


65.0,0.03352865870690447
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


114.0,0.06694203424308154
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


45.0,0.019881095231903623
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

40.0,0.02684995688923375
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

130.0,0.05020980159137722
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


62.0,0.021906074519209007
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


24.0,0.021294166920494906
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


46.0,0.022275076273382655
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

60.0,0.029560888609819536
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


21.0,0.02086669562238408
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


20.0,0.018202692595922887
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


25.0,0.020320366445615523
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


21.0,0.017354445011247277
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


58.0,0.04265631389818281
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

25.0,0.01807348460926006
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


41.0,0.01922208218871202
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

31.0,0.018458581467593937
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


43.0,0.01944908246761312
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


39.0,0.02047555375538701
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


30.0,0.019531489571832705
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

34.0,0.0197557797944663
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


36.0,0.018966284511677922
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

34.0,0.019456502745613835
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

33.0,0.020065135275826984
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

34.0,0.029228403322262175
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


44.0,0.017317080861468548
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

29.0,0.01957541225670445
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

19.0,0.039736533791262185
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


23.0,0.03895402280105886
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


30.0,0.027030295754797873
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

25.0,0.018317694146276597
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


25.0,0.0210322233624749
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


26.0,0.02267562119961375
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


30.0,0.025596882442180058
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


40.0,0.023097691295320244
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

49.0,0.025057941841675757
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


59.0,0.03267191650295098
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


20.0,0.031726731786644535
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


29.0,0.021252878592130653
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


23.0,0.02875712150460419
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


29.0,0.020886168291435525
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


29.0,0.0219236376990799
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


20.0,0.02321041339756713
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


16.0,0.019101638235009544
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


19.0,0.020759685325345112
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


20.0,0.08756379083027332
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
print("HelloWorld")

41.0,0.020677510700338964
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


36.0,0.020009432551096884
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


48.0,0.016295828534387047
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


70.0,0.016017750999628988
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


64.0,0.022760995608951506
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


67.0,0.01815089897511102
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


0.0,-2.220446049250313e-16
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


17.0,0.026708454055631714
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


128.0,0.04549325453389019
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


20.0,0.019263679121503285
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
import random
print(random.random()*100)
```


20.0,0.018224709055310706
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


20.0,0.012258161094638287
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


29.0,0.013436130490826925
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


19.0,0.017800638713386996
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


22.0,0.010995348616119283
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


31.0,0.012081831022175304
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


19.0,0.017981302122185072
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


29.0,0.02161856224118941
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


19.0,0.01662672274652388
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


14.0,0.010426372598227318
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


73.0,0.02699340144329665
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


17.0,0.0406835212079687
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

27.0,0.044735712323254906
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

24.0,0.07139166463443047
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

29.0,0.02839684272389531
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

28.0,0.05360504391360965
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

20.0,0.024815475068317494
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


37.0,0.026771168715173155
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


62.0,0.02600524339140242
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


48.0,0.02871316312490524
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


54.0,0.021358711097957506
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


22.0,0.025791531867407125
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


20.0,0.02419867568196843
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


21.0,0.018642858490564906
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


40.0,0.02221010174889848
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


27.0,0.016997154618975996
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


34.0,0.011964197473070204
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


24.0,0.016986248888562483
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


43.0,0.045525505935812616
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


67.0,0.01909350738134452
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


88.0,0.03641719354411166
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


18.0,0.014673008151699807
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


26.0,0.03633275193076402
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


25.0,0.025907018747427513
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


47.0,0.024120364210312273
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


84.0,0.05410158576781099
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


56.0,0.041911259732732464
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


56.0,0.046671620579426976
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


72.0,0.05784081923762541
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


28.0,0.052378145788249286
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


66.0,0.05479607858233926
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


112.0,0.09114917173153214
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


38.0,0.024580001101811133
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

42.0,0.04782535343538896
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

130.0,0.0696175901893702
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


58.0,0.027776804664614296
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


15.0,0.012417658114736163
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


41.0,0.024540306661904876
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

56.0,0.03805647086940123
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


12.0,0.02100881895089246
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


12.0,0.011421775018690905
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


20.0,0.022810170631687887
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


15.0,0.021548615218481504
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


51.0,0.07123125272658848
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

22.0,0.034815985462829935
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


34.0,0.03293168980399874
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

27.0,0.014922397224780948
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


38.0,0.02091219508480402
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


34.0,0.019682206653020673
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


25.0,0.018415736619378453
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

29.0,0.017252594446045988
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


31.0,0.01790925999560644
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

29.0,0.01820516900393354
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

25.0,0.016986359604450274
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

35.0,0.056981250293207775
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


51.0,0.03996163593630597
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

23.0,0.02149344819383303
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

31.0,0.07898525349504482
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


28.0,0.07716520598907006
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


40.0,0.06128981653006227
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

19.0,0.02693993742039602
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


16.0,0.02909132437871287
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


21.0,0.019073652411509934
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


21.0,0.028527652680761184
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


31.0,0.03968159901384227
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

40.0,0.040478091305198305
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


51.0,0.04548412350297937
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


12.0,0.0190424805163677
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


26.0,0.02809152884910604
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


18.0,0.03712974837603322
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


21.0,0.020592971062037058
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


21.0,0.024492120241980997
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


5.0,0.006703838897821779
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


6.0,0.01625207664042483
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


10.0,0.009332920213437124
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


11.0,0.06611300068345305
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
print("HelloWorld")

36.0,0.017600927464521576
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


26.0,0.024413635772508324
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


41.0,0.020955369259632373
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


67.0,0.02231176317930017
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


60.0,0.030694683139833367
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


65.0,0.02474991914206226
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


17.0,0.026708454055631714
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


0.0,0.0
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


126.0,0.06791753187751193
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


11.0,0.009157703219234037
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
import random
print(random.random()*100)
```


14.0,0.01069715430847884
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


22.0,0.024094969806328637
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


31.0,0.030047159694271963
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


11.0,0.010926970042048678
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


24.0,0.02317737918815943
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


33.0,0.027818668763244347
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


10.0,0.012052221679862085
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


18.0,0.022475721658529735
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


5.0,0.009633857273327218
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


15.0,0.02465857070477817
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


74.0,0.0506886012268134
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


28.0,0.08971614486320523
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

38.0,0.09474256733351194
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

34.0,0.1210631369668711
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

24.0,0.03883411962532346
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

35.0,0.09861762769256821
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

25.0,0.06280570343539094
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


38.0,0.05622132937648239
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


54.0,0.051907091457319976
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


41.0,0.03687824130473605
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


48.0,0.03562706091548806
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


12.0,0.008342735867518436
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


10.0,0.007572491667062531
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


13.0,0.015388356806831371
```python
expression = raw_input()
print(eval(expression))
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


111.0,0.038480488010558145
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


109.0,0.044078018719880374
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


107.0,0.06139213928226772
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


108.0,0.05407878561073798
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


112.0,0.024548738448679108
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


102.0,0.04811170765281103
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


102.0,0.025380183445259163
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


118.0,0.05747884620642363
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


114.0,0.03211785877557605
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


114.0,0.0531441060366149
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


104.0,0.03484082081095419
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


107.0,0.03201015448243849
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


105.0,0.018646045006994405
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


105.0,0.018400270221702653
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


104.0,0.04864017490931938
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


113.0,0.0644700886828733
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


98.0,0.010624496388556337
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


108.0,0.01062957484234639
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


115.0,0.03547291989043522
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

101.0,0.03354073112175404
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

122.0,0.005116078691531745
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


106.0,0.03253185992268659
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


118.0,0.06031084393973685
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


107.0,0.03286824868128635
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

110.0,0.020606856235765414
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


123.0,0.05456211201066341
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


125.0,0.05600051379428295
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


123.0,0.048882149107876804
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


123.0,0.047032054509759
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


97.0,0.018103615377226268
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

122.0,0.028158769994209076
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


113.0,0.03470033870459566
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

110.0,0.05331823059671459
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


108.0,0.04807895597532841
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


109.0,0.050535856168903326
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


112.0,0.05232637345886271
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

111.0,0.05419000117659123
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


111.0,0.05261738158512674
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

111.0,0.05345008290587305
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

109.0,0.05043703522209131
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

113.0,0.04888136251103714
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


107.0,0.03750315855103281
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

114.0,0.049353752534931905
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

121.0,0.06678777603001129
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


120.0,0.06557204923795601
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


118.0,0.048643167490045824
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

123.0,0.054900617969809495
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


123.0,0.055357745868698904
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


120.0,0.05077613866095321
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


114.0,0.049456193313168195
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


119.0,0.031928847500011015
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

114.0,0.025778731481624906
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


113.0,0.020004459632168792
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


137.0,0.08388769560986653
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


121.0,0.04013724668915386
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


127.0,0.04281323428860495
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


109.0,0.0478552837416637
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


109.0,0.04872867486158228
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


123.0,0.06424123120722403
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


131.0,0.062357797313961516
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


120.0,0.06155805769785738
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


136.0,0.14404089705289058
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
print("HelloWorld")

103.0,0.06139605853689001
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


108.0,0.03873127345313565
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


102.0,0.03761952985007655
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


103.0,0.03185354246508332
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


101.0,0.024866165258690565
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


100.0,0.028522528544892234
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


128.0,0.04549325453389019
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


126.0,0.06791753187751193
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


0.0,0.0
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


132.0,0.06819160432040872
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
import random
print(random.random()*100)
```


132.0,0.06919573431476178
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


124.0,0.04887381730487539
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


121.0,0.04785351856446263
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


128.0,0.0596684814319588
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


124.0,0.04703399990705914
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


122.0,0.04821748890727218
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


130.0,0.06025792844069211
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


112.0,0.04776015771248099
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


126.0,0.05486037407945121
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


119.0,0.05054855938277125
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


101.0,0.017770048765855417
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


120.0,0.07395553247241793
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

119.0,0.07366051741601454
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

119.0,0.09543348002763175
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

118.0,0.0814968516682224
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

117.0,0.08235176899592234
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

120.0,0.06029129530087096
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


115.0,0.04959859402008582
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


91.0,0.013144157133668899
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


109.0,0.023417598548534535
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


110.0,0.03959374379289782
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


122.0,0.07317498331484995
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


123.0,0.07226114209614243
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


129.0,0.058438516623334325
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


48.0,0.01844257298349028
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


38.0,0.01674351792203599
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


42.0,0.009719119086085581
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


31.0,0.016995562286837185
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


49.0,0.04518155944785485
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


72.0,0.018199600843255892
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


95.0,0.03632639224022571
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


27.0,0.015185474158397327
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


33.0,0.03336755489414489
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


34.0,0.026956361002448248
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


56.0,0.02045951892029374
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


90.0,0.05026905176776608
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


60.0,0.04179304982930809
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


60.0,0.04659429944957072
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


78.0,0.05423505592804789
```python
import random
print(random.random()*100)
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


34.0,0.05104932424633757
```python
import random
print(random.random()*100)
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


71.0,0.053942117163050196
```python
import random
print(random.random()*100)
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


116.0,0.09197936437386556
```python
import random
print(random.random()*100)
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


45.0,0.025134668350552114
```python
import random
print(random.random()*100)
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

50.0,0.041048273816299496
```python
import random
print(random.random()*100)
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

134.0,0.07039355100848677
```python
import random
print(random.random()*100)
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


63.0,0.02882414939306044
```python
import random
print(random.random()*100)
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


22.0,0.012509995455461387
```python
import random
print(random.random()*100)
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


46.0,0.024005172367902894
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

62.0,0.039546776519722604
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


16.0,0.021166806287055584
```python
import random
print(random.random()*100)
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


13.0,0.010238119725200723
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


18.0,0.02352670247837707
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


16.0,0.021122576485812172
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


60.0,0.06804245856199653
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

24.0,0.030972868069778614
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


43.0,0.030220981333481944
```python
import random
print(random.random()*100)
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

34.0,0.013027300368481987
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


45.0,0.018651771497926628
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


41.0,0.01757193673416657
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


32.0,0.015154071623986853
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

36.0,0.0145681142583316
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


38.0,0.015118655978590856
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

36.0,0.015343242348774488
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

35.0,0.01612274158402871
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

43.0,0.04989691566539667
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


60.0,0.03453283261866802
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

31.0,0.02212653689009958
```python
import random
print(random.random()*100)
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

35.0,0.0727068824185122
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


33.0,0.07093198095785391
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


46.0,0.05611752188958241
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

24.0,0.024361922370462197
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


21.0,0.026706628122220022
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


26.0,0.019376088007277747
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


30.0,0.02708911581850959
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


37.0,0.03580773292603101
```python
import random
print(random.random()*100)
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

47.0,0.037900994564375234
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


58.0,0.043753106314187384
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


10.0,0.01852721532172885
```python
import random
print(random.random()*100)
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


30.0,0.02596672264302924
```python
import random
print(random.random()*100)
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


22.0,0.03511346795447101
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


25.0,0.02334618029410107
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


25.0,0.026842424009192567
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


11.0,0.010858158668252682
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


10.0,0.014842151356894373
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


19.0,0.011627295062857201
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


9.0,0.06579794539549444
```python
import random
print(random.random()*100)
```


 ############################################# 
print("HelloWorld")

42.0,0.014588131637633839
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


35.0,0.022291458764624905
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


49.0,0.018867441037394572
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


74.0,0.020551557339131166
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


70.0,0.029276860286993944
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


75.0,0.022974879169933127
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


20.0,0.019263679121503285
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


11.0,0.009157703219234037
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


132.0,0.06819160432040872
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


0.0,0.0
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
import random
print(random.random()*100)
```


3.0,0.001164331687847353
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


19.0,0.01718734111987985
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


29.0,0.023139850545447316
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


6.0,0.007092183455587153
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


21.0,0.01704239408986552
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


31.0,0.020933630026941485
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


3.0,0.00815012267937465
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


25.0,0.021712527529158088
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


11.0,0.009010167387914048
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


21.0,0.018741191894561138
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


79.0,0.048749761227570576
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


33.0,0.08085957428803991
```python
import random
print(random.random()*100)
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

42.0,0.08545817969162917
```python
import random
print(random.random()*100)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

38.0,0.11213203353298373
```python
import random
print(random.random()*100)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

31.0,0.03364457732224513
```python
import random
print(random.random()*100)
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

39.0,0.08984231611806248
```python
import random
print(random.random()*100)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

30.0,0.05511851366052034
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


47.0,0.051551497801784585
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


63.0,0.04921466153670773
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


48.0,0.03733659379178311
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


54.0,0.03490282189442617
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


21.0,0.010667402277509841
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


19.0,0.009894267401793777
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


9.0,0.015165872857135998
```python
import random
print(random.random()*100)
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


49.0,0.018585758064184832
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


40.0,0.016286662097187432
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


43.0,0.008998585083835886
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


32.0,0.017211274599478243
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


51.0,0.04574365061258068
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


73.0,0.017807024688108908
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


96.0,0.03736258560405503
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


28.0,0.01708851606206807
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


36.0,0.03316444999758217
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


36.0,0.027894643449822287
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


56.0,0.019818026981026193
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


89.0,0.05153743595764437
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


60.0,0.042108253095270665
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


60.0,0.047350490871338136
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


78.0,0.05494903254569172
```python
import random
print(random.random()*100-5)
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


34.0,0.05052106186921612
```python
import random
print(random.random()*100-5)
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


71.0,0.054484845343948485
```python
import random
print(random.random()*100-5)
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


116.0,0.09432906592214096
```python
import random
print(random.random()*100-5)
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


46.0,0.0243130477106569
```python
import random
print(random.random()*100-5)
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

50.0,0.0390398130221743
```python
import random
print(random.random()*100-5)
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

133.0,0.07157686936811647
```python
import random
print(random.random()*100-5)
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


64.0,0.029725540169650233
```python
import random
print(random.random()*100-5)
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


24.0,0.012877226970834488
```python
import random
print(random.random()*100-5)
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


46.0,0.024306776729480895
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

64.0,0.04095781506908358
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


18.0,0.02146665663159042
```python
import random
print(random.random()*100-5)
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


16.0,0.01126092539542567
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


20.0,0.024220860183239767
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


19.0,0.021689816526432537
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


61.0,0.06869736367127643
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

25.0,0.030960314272004297
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


43.0,0.030613130204194094
```python
import random
print(random.random()*100-5)
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

36.0,0.01388763038369023
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


47.0,0.019917732680512557
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


43.0,0.018995666832475333
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


34.0,0.016556942384685858
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

37.0,0.01570473913753756
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


39.0,0.015819389736078215
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

37.0,0.016329869855718826
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

37.0,0.017654432260920006
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

44.0,0.05028413719544522
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


59.0,0.03470928181286459
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

31.0,0.022086560909869823
```python
import random
print(random.random()*100-5)
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

35.0,0.07067392365150016
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


35.0,0.068963137258653
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


46.0,0.05519261499971018
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

24.0,0.02412257650481331
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


22.0,0.02658304720460647
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


28.0,0.020112000105231287
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


32.0,0.029028153905158893
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


37.0,0.035136023919404735
```python
import random
print(random.random()*100-5)
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

48.0,0.03758119738474097
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


59.0,0.04387460339667659
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


13.0,0.018594073577472336
```python
import random
print(random.random()*100-5)
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


30.0,0.02570784902918477
```python
import random
print(random.random()*100-5)
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


24.0,0.034111094250043106
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


28.0,0.024107716116536837
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


28.0,0.02764566812379432
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


13.0,0.011678034164140705
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


13.0,0.016245532432973997
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


21.0,0.012580124339816257
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


12.0,0.06503387082473
```python
import random
print(random.random()*100-5)
```


 ############################################# 
print("HelloWorld")

43.0,0.012847597760791474
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


36.0,0.021755595161335406
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


49.0,0.018312237363552808
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


74.0,0.02019796370957394
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


71.0,0.029774015025517242
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


76.0,0.02317394331737843
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


20.0,0.018224709055310706
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


14.0,0.01069715430847884
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


132.0,0.06919573431476178
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


3.0,0.001164331687847353
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
import random
print(random.random()*100)
```


0.0,0.0
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


19.0,0.017846665012873575
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


29.0,0.022809373679075762
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


7.0,0.007752021516101548
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


21.0,0.01699346084073039
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


31.0,0.020211601783770128
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


5.0,0.009288825424604075
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


28.0,0.023403641615975856
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


14.0,0.009931291874291537
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


23.0,0.018265752347468522
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


80.0,0.04926748589265084
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


33.0,0.07852756853565146
```python
import random
print(random.random()*100-5)
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

42.0,0.08326211770676106
```python
import random
print(random.random()*100-5)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

38.0,0.1100711900215956
```python
import random
print(random.random()*100-5)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

32.0,0.031048581374690687
```python
import random
print(random.random()*100-5)
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

39.0,0.0872737711464956
```python
import random
print(random.random()*100-5)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

33.0,0.05396674688094161
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


48.0,0.051872945825056416
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


64.0,0.04973452791858701
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


51.0,0.03871877917344824
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


55.0,0.03530369545029233
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


23.0,0.010109797646827179
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


22.0,0.009773796116456346
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


10.0,0.016188497930845758
```python
import random
print(random.random()*100-5)
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


45.0,0.013120031388153208
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


36.0,0.022275087609192834
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


37.0,0.01974596946348639
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


29.0,0.019718964109923798
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


49.0,0.03702750794105547
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


66.0,0.017795992030377406
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


89.0,0.021067233994203738
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


30.0,0.013623113578761226
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


34.0,0.03443348592994799
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


35.0,0.013428073997806433
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


46.0,0.016900688002051245
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


81.0,0.024350421566478153
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


57.0,0.030428364494788696
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


57.0,0.03158782592602316
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


75.0,0.03579509473753728
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


26.0,0.0285002405000625
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


62.0,0.040873314116480874
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


109.0,0.06891355638470564
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


43.0,0.025259895262703336
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

38.0,0.040814303909383676
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

128.0,0.05425878292919217
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


62.0,0.02029828466336603
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


25.0,0.02121137976846832
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


42.0,0.02579222840622153
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

60.0,0.03001240286899598
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


24.0,0.020870292999006557
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


23.0,0.016720557150915583
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


24.0,0.01683108064561123
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


24.0,0.018088107205553317
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


55.0,0.04862166543922131
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

27.0,0.025097332995321464
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


41.0,0.02341860243993843
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

34.0,0.01785872074275685
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


43.0,0.017868799478909625
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


39.0,0.0192602417948029
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


34.0,0.01934561936248058
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

36.0,0.019959235276755694
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


38.0,0.019468805184670646
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

36.0,0.01994622468455287
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

35.0,0.01915912903344763
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

42.0,0.027402565967360015
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


57.0,0.017772673075829304
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

27.0,0.02517304517285124
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

36.0,0.04164918438024978
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


38.0,0.04161458596268652
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


41.0,0.026090878588663324
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

28.0,0.013355352737122184
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


26.0,0.015337724417796794
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


27.0,0.030118493132633928
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


29.0,0.02849473691157478
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


38.0,0.027454886042267423
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

44.0,0.029801142345808773
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


55.0,0.03915848235688324
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


25.0,0.03540387540850998
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


28.0,0.02954969668294094
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


24.0,0.03938327303546785
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


27.0,0.017797519833711806
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


27.0,0.01876191942708838
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


20.0,0.021303681219540516
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


24.0,0.021249756899197947
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


23.0,0.01976516330613387
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


24.0,0.09072938723801105
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
print("HelloWorld")

41.0,0.021946874688019924
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


37.0,0.027829064762864397
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


48.0,0.019767311211785432
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


70.0,0.01680938355147288
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


66.0,0.0283975253748856
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


70.0,0.021900940320779716
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


20.0,0.012258161094638287
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


22.0,0.024094969806328637
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


124.0,0.04887381730487539
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


19.0,0.01718734111987985
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
import random
print(random.random()*100)
```


19.0,0.017846665012873575
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


0.0,0.0
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


10.0,0.0022629962605064113
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


13.0,0.011622881659912432
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


2.0,0.001787527106338449
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


12.0,0.00334215388902237
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


16.0,0.012014166233468071
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


27.0,0.019149526783995063
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


22.0,0.016371059845677105
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


27.0,0.013707084906644185
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


74.0,0.030375159726750645
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


26.0,0.04530132218886063
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

33.0,0.04808572274432099
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

30.0,0.06844556235794907
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

29.0,0.027709230120932737
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

34.0,0.05223082791485789
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

29.0,0.02983730362506598
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


43.0,0.0284186340894661
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


61.0,0.03183488429052139
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


48.0,0.03308169672487249
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


52.0,0.019500124081564763
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


26.0,0.029258942537752852
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


24.0,0.02839146382684521
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


17.0,0.013543874067944994
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


38.0,0.014103935568338777
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


43.0,0.025147536501624712
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


39.0,0.023709883050431313
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


34.0,0.02272422075846603
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


52.0,0.035614017637548345
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


71.0,0.01972725974688949
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


90.0,0.020430327476749888
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


36.0,0.017435103370826988
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


40.0,0.03581941483018469
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


38.0,0.01490601114095702
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


48.0,0.01821532843219853
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


74.0,0.02177290802312115
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


58.0,0.02954148051548544
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


58.0,0.030140225273727617
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


74.0,0.03288346423210564
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


32.0,0.028112115248641212
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


63.0,0.039869337976647934
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


108.0,0.0676830988268271
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


47.0,0.027155206886112726
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

39.0,0.04094788965942653
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

125.0,0.05353383575533888
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


63.0,0.02027321022147921
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


32.0,0.026530263393933717
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


43.0,0.02773591450100621
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

60.0,0.029594980434952567
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


33.0,0.02390152818488034
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


33.0,0.021162840461358412
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


33.0,0.018752051057333685
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


34.0,0.019826481164354037
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


57.0,0.045884182753970104
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

32.0,0.025404545921622
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


43.0,0.02320722276267817
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

38.0,0.020830972038409334
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


47.0,0.019520127581693303
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


43.0,0.02143331560007644
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


37.0,0.022461566225559393
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

40.0,0.02312785432131137
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


41.0,0.022226187932013475
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

40.0,0.022888144484186967
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

40.0,0.02230538590793263
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

47.0,0.02427609605689207
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


57.0,0.015807378320051857
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

32.0,0.026150093709754962
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

40.0,0.037248068576864024
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


43.0,0.03778018480216094
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


45.0,0.022400321825055358
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

30.0,0.015054162428992046
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


32.0,0.017465342664443106
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


31.0,0.03226787519561736
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


33.0,0.028807590213499323
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


42.0,0.026652487678305636
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

48.0,0.029207117072094002
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


58.0,0.03854713690071487
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


35.0,0.041909830352600985
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


34.0,0.03050139440191668
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


34.0,0.03989443188742692
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


33.0,0.019998718416164296
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


33.0,0.020321498470722288
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


28.0,0.026384719231701492
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


34.0,0.02553305978774656
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


31.0,0.0234546241441973
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


34.0,0.09734557731401239
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
print("HelloWorld")

43.0,0.02545386829327445
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


44.0,0.030276121873974104
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


51.0,0.021505131796969224
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


69.0,0.01795765431636942
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


68.0,0.030301181153235435
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


65.0,0.022988378098778073
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


29.0,0.013436130490826925
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


31.0,0.030047159694271963
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


121.0,0.04785351856446263
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


29.0,0.023139850545447316
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
import random
print(random.random()*100)
```


29.0,0.022809373679075762
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


10.0,0.0022629962605064113
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


0.0,-2.220446049250313e-16
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


23.0,0.016837664571498157
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


11.0,0.003181172766821616
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


2.0,0.0018953682582513176
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


26.0,0.01734372373508697
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


33.0,0.021652695261133892
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


30.0,0.020251787267729582
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


35.0,0.015687619519497598
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


75.0,0.028031422062805844
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


34.0,0.04061558806708199
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

27.0,0.041227255091920045
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

37.0,0.06291783704338183
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

35.0,0.028726971981210325
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

41.0,0.047272770780227846
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

37.0,0.027415389163176762
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


51.0,0.025410800039227244
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


62.0,0.030475089667488575
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


51.0,0.032960817775085194
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


57.0,0.017909080903680374
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


34.0,0.035445627175724526
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


32.0,0.034641616461749236
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


25.0,0.017007334227935433
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


44.0,0.014374374551651914
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


37.0,0.018107888561779473
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


41.0,0.012334700902971618
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


29.0,0.016881732158532725
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


49.0,0.04240039743834867
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


68.0,0.01627734890683208
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


94.0,0.029279426109997675
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


25.0,0.012429600146982578
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


30.0,0.03496720092124583
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


31.0,0.017750914387149708
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


53.0,0.019475361909971234
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


89.0,0.037759144902122954
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


58.0,0.036245659923107465
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


58.0,0.04013299213800614
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


78.0,0.04620039550368571
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


32.0,0.03877280305073827
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


68.0,0.05004669592146371
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


113.0,0.08174232232514567
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


42.0,0.022016664496248173
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

47.0,0.04358929535546863
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

130.0,0.06502650648872732
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


63.0,0.023348129508148796
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


20.0,0.010766136146689531
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


44.0,0.02347266668562975
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

60.0,0.035046651563626185
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


16.0,0.01411172483806078
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


12.0,0.009632960515568834
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


17.0,0.014870621148421748
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


15.0,0.016805772376327077
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


57.0,0.06156653947283974
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

21.0,0.029196515091220676
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


40.0,0.02804503823954907
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

32.0,0.013743357005236434
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


44.0,0.017446243798167727
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


40.0,0.017737343705968467
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


29.0,0.01660448011095872
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

33.0,0.016570696550400332
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


35.0,0.016728618363114123
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

33.0,0.017099105485334887
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

32.0,0.015696503050496302
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

40.0,0.039876490526842945
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


57.0,0.028331735764551946
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

26.0,0.02316202511052301
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

34.0,0.05874087145253848
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


32.0,0.057063622745644915
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


42.0,0.04233740350457327
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

22.0,0.01487359891785378
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


19.0,0.015799195528757637
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


25.0,0.022455332532276384
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


28.0,0.026686388996906008
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


37.0,0.031429256686446694
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

46.0,0.03249662858479918
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


57.0,0.04334051283211715
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


12.0,0.022984396793291895
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


25.0,0.028379549947595617
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


20.0,0.037977163342496234
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


26.0,0.017038143029301844
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


26.0,0.018954737212704575
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


10.0,0.011540997172368783
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


12.0,0.017054457009503143
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


17.0,0.013265020311108433
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


11.0,0.07272309572712898
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
print("HelloWorld")

42.0,0.014173456229095938
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


36.0,0.024089352017315768
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


48.0,0.017981440604498244
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


73.0,0.018051414964058043
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


67.0,0.029667295329798837
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


72.0,0.022355452830330136
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


19.0,0.017800638713386996
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


11.0,0.010926970042048678
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


128.0,0.0596684814319588
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


6.0,0.007092183455587153
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
import random
print(random.random()*100)
```


7.0,0.007752021516101548
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


13.0,0.011622881659912432
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


23.0,0.016837664571498157
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


0.0,1.1102230246251565e-16
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


15.0,0.009973607078168634
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


25.0,0.014216425172369651
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


3.0,0.0024755524414872276
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


23.0,0.01904395414297655
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


13.0,0.009790324434426179
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


19.0,0.015399370739697882
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


78.0,0.042394812621537215
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


30.0,0.06690022005607121
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

39.0,0.0712777157900022
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

35.0,0.09334207766197755
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

28.0,0.03180749109929837
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

37.0,0.07345102461048025
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

29.0,0.04482962825068881
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


44.0,0.04199627669143302
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


62.0,0.042187924488908624
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


49.0,0.03373802134457293
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


53.0,0.027270414290489264
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


19.0,0.016782799136117355
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


17.0,0.01576178317223842
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


8.0,0.01237901638601302
```python
import random
print(random.sample(range(100), 5))
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


44.0,0.01194739125357347
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


38.0,0.020440212342476505
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


36.0,0.01755944849628477
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


31.0,0.017160306723399743
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


50.0,0.03506439636583569
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


68.0,0.015959355751655413
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


90.0,0.018963016905314878
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


32.0,0.01347319759177934
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


36.0,0.03205234303114146
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


36.0,0.012596127646777644
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


45.0,0.014855851080568527
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


81.0,0.024188619190220195
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


56.0,0.02772149065370466
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


56.0,0.029340407724503192
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


75.0,0.033356117675787056
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


26.0,0.026675212467355935
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


63.0,0.03870681032090362
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


109.0,0.06751888234301928
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


44.0,0.022060840952237037
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

38.0,0.03834536273114164
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

128.0,0.05307002364949798
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


63.0,0.018094641339983064
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


27.0,0.019254933464685098
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


42.0,0.02383622569560495
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

61.0,0.027972131947394008
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


26.0,0.017382650011912193
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


25.0,0.015519921351552557
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


26.0,0.014571215179866925
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


25.0,0.015518141356159254
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


55.0,0.04612669639207578
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

29.0,0.023168855177237546
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


40.0,0.0217533737256993
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

33.0,0.016035868629200922
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


44.0,0.016231631415221548
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


40.0,0.017774170012404
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


33.0,0.01803018183302385
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

36.0,0.018652746847675372
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


38.0,0.018089457548193244
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

36.0,0.018725838031966147
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

36.0,0.01753989854228688
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

44.0,0.025667280874369425
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


58.0,0.015607301738341128
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

29.0,0.023519671312463353
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

37.0,0.03803659162561146
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


39.0,0.03788432320016133
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


42.0,0.02331122756098547
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

28.0,0.010927677034209937
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


26.0,0.012706680785479318
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


29.0,0.02758610023607677
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


31.0,0.0266773684985937
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


39.0,0.02496797310467236
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

44.0,0.02696386910995363
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


57.0,0.03710556785575514
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


27.0,0.03367535209355521
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


30.0,0.0278482094750907
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


26.0,0.03651124192675237
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


29.0,0.015751947093132435
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


29.0,0.016471104261709835
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


22.0,0.02004781698121627
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


26.0,0.020295347703228495
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


24.0,0.018281389741669485
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


26.0,0.08970503637319593
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
print("HelloWorld")

41.0,0.01887830856929451
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


39.0,0.025565400297902996
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


49.0,0.017578737941433498
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


70.0,0.01468209046827329
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


66.0,0.027007385926580807
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


69.0,0.02026202587269421
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


22.0,0.010995348616119283
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


24.0,0.02317737918815943
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


124.0,0.04703399990705914
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


21.0,0.01704239408986552
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
import random
print(random.random()*100)
```


21.0,0.01699346084073039
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


2.0,0.001787527106338449
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


11.0,0.003181172766821616
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


15.0,0.009973607078168634
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


0.0,0.0
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


10.0,0.002273516998444358
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


18.0,0.01135432757499133
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


29.0,0.01848630644393856
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


24.0,0.014565250887125791
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


29.0,0.011398967569135388
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


75.0,0.02834666541647113
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


28.0,0.04210356328980702
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

33.0,0.044760548649955045
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

32.0,0.06595002068193556
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

31.0,0.02654142696125672
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

36.0,0.0492876715404571
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

31.0,0.02673903456529736
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


45.0,0.02532499540964661
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


60.0,0.029418609904636406
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


49.0,0.030869712737926824
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


54.0,0.017530258119213493
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


27.0,0.027991672614350094
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


25.0,0.026902715692236123
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


18.0,0.013166794938100468
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


36.0,0.01290848889533347
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


45.0,0.0227411790986074
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


40.0,0.020687787154117343
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


36.0,0.022236838976324336
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


53.0,0.03792146531794727
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


70.0,0.017297153416049427
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


91.0,0.0204651452519643
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


37.0,0.016753049077267046
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


42.0,0.03534101216653496
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


39.0,0.01666543606736104
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


48.0,0.017427900963780774
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


74.0,0.025229774337459876
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


57.0,0.030604093493658335
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


57.0,0.03154790405388341
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


74.0,0.03581886353223451
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


33.0,0.032648357959595864
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


64.0,0.040665292658199514
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


107.0,0.06956901224188294
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


48.0,0.025013359449711614
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

40.0,0.039184416753692664
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

125.0,0.05415228003226735
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


64.0,0.020702361473024955
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


34.0,0.023002371320904547
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


43.0,0.025785230409621218
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

61.0,0.029991880113663605
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


35.0,0.02164970973067326
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


35.0,0.01953374906023231
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


35.0,0.018457966909241064
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


35.0,0.01943784333708709
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


57.0,0.04888427963853503
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

34.0,0.02511908635482496
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


43.0,0.02381294091114894
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

37.0,0.01960539786329396
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


47.0,0.019558740363052607
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


43.0,0.02104410696448722
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


37.0,0.020937369526400684
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

39.0,0.020675335415002882
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


40.0,0.020046931646847344
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

39.0,0.02070087428658507
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

39.0,0.020249844785356075
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

48.0,0.02627042021164039
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


58.0,0.016718179516187814
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

33.0,0.025296756814777277
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

42.0,0.040572493326931136
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


45.0,0.04045334639343856
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


46.0,0.02411698272676499
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

32.0,0.015220368812905671
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


33.0,0.017434010819332824
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


33.0,0.02922338438336991
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


35.0,0.027293415254058817
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


43.0,0.027265611531196887
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

50.0,0.029469769277087332
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


60.0,0.038404803967697854
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


37.0,0.0386401241749974
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


36.0,0.029005972066769248
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


36.0,0.038981101479816926
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


34.0,0.01921965330695985
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


34.0,0.020437253698238345
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


30.0,0.02347785417627768
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


36.0,0.024720686455700802
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


32.0,0.021596410860071802
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


36.0,0.0971971389011107
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
print("HelloWorld")

43.0,0.022146695341924483
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


45.0,0.02735110262371676
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


52.0,0.019573810894584986
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


70.0,0.016479813671819943
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


70.0,0.027889817752242196
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


65.0,0.020676944805555375
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


31.0,0.012081831022175304
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


33.0,0.027818668763244347
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


122.0,0.04821748890727218
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


31.0,0.020933630026941485
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
import random
print(random.random()*100)
```


31.0,0.020211601783770128
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


12.0,0.00334215388902237
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


2.0,0.0018953682582513176
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


25.0,0.014216425172369651
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


10.0,0.002273516998444358
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


0.0,1.1102230246251565e-16
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


28.0,0.015047845987061437
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


35.0,0.02137185027379318
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


32.0,0.017361936848515613
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


37.0,0.015237554366279826
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


76.0,0.02937943044217528
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


36.0,0.0445147135645948
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

29.0,0.04564558423384113
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

39.0,0.06992829080991536
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

37.0,0.027027474031570575
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

43.0,0.05223448807200315
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

39.0,0.029482859594793798
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


51.0,0.025553078326322032
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


63.0,0.03125348092493274
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


53.0,0.03276865219270608
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


57.0,0.019842843004254318
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


35.0,0.03223611681435867
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


33.0,0.03139367370338142
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


27.0,0.014574632454393388
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


46.0,0.01579716236551043
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


36.0,0.020086980365932816
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


42.0,0.015486447603393017
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


30.0,0.019696648698669827
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


47.0,0.04452371655334686
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


70.0,0.0207036518961472
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


94.0,0.03216582320841377
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


26.0,0.014327017044792889
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


32.0,0.03763390770506436
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


33.0,0.019856313794979652
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


54.0,0.022412752923588908
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


91.0,0.03974040493465836
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


60.0,0.037730247581873044
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


60.0,0.04116883784957681
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


79.0,0.04815080981296427
```python
import random
print(random.randrange(7,16))
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


34.0,0.039921725886508996
```python
import random
print(random.randrange(7,16))
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


71.0,0.05171921293439963
```python
import random
print(random.randrange(7,16))
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


116.0,0.08133527988902711
```python
import random
print(random.randrange(7,16))
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


43.0,0.025624615125269812
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

49.0,0.04662634598755688
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

132.0,0.06651918582726368
```python
import random
print(random.randrange(7,16))
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


64.0,0.026133119951792128
```python
import random
print(random.randrange(7,16))
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


20.0,0.012745976467844367
```python
import random
print(random.randrange(7,16))
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


46.0,0.025920342409252117
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

62.0,0.03677476170518945
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


13.0,0.014471395152525934
```python
import random
print(random.randrange(7,16))
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


12.0,0.010311440922110005
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


19.0,0.01564368934745375
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


16.0,0.017122361315335177
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


60.0,0.062478951308588604
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

24.0,0.030063856446998827
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


41.0,0.029852322966097633
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

33.0,0.015572087176117577
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


45.0,0.01916403846202297
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


41.0,0.01923852211965893
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


30.0,0.018325055865473838
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

34.0,0.018460653814763472
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


36.0,0.01854593951216421
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

34.0,0.01891062316888059
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

33.0,0.01693789878436025
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

43.0,0.039985635910718687
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


58.0,0.029414328815264956
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

29.0,0.024594181694861272
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

34.0,0.05964667812474478
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


33.0,0.05776002883460574
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


43.0,0.04265290105091146
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

23.0,0.015997440600160506
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


20.0,0.01640872130075932
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


27.0,0.024890032793194794
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


30.0,0.02842267827984024
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


37.0,0.03351789894698909
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

46.0,0.03444910686853064
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


57.0,0.04554235854183464
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


9.0,0.023958923773334195
```python
import random
print(random.randrange(7,16))
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


28.0,0.030619486603388202
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


22.0,0.041223703437412995
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


23.0,0.01879525207617294
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


23.0,0.02032825629198154
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


8.0,0.012869541596588818
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


9.0,0.017307239039474287
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


18.0,0.014724189767188922
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


8.0,0.07455456744042699
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
print("HelloWorld")

43.0,0.01867907445536543
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


36.0,0.026692806394805535
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


50.0,0.020578811041998102
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


75.0,0.02131268119732932
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


69.0,0.03159532741208959
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


74.0,0.02450800285603738
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


19.0,0.017981302122185072
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


10.0,0.012052221679862085
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


130.0,0.06025792844069211
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


3.0,0.00815012267937465
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
import random
print(random.random()*100)
```


5.0,0.009288825424604075
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


16.0,0.012014166233468071
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


26.0,0.01734372373508697
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


3.0,0.0024755524414872276
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


18.0,0.01135432757499133
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


28.0,0.015047845987061437
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


0.0,0.0
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


23.0,0.019986461499585273
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


10.0,0.011838019374333597
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


21.0,0.016015827879819255
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


80.0,0.045077344844706047
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


31.0,0.0674430941210542
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

41.0,0.07160416274667192
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

37.0,0.09418124582242215
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

31.0,0.0369878660416012
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

38.0,0.07520223446524077
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

29.0,0.04502767247421646
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


45.0,0.041900280799046286
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


63.0,0.042844079023686366
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


47.0,0.03574878782615909
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


55.0,0.029311047411254676
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


21.0,0.01939634179142491
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


19.0,0.018270085344433973
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


6.0,0.013581512343330382
```python
import random
print(random.randrange(7,16))
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


33.0,0.01573128314013872
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


24.0,0.020697825693385408
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


32.0,0.02339324774670737
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


18.0,0.011598020510611873
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


36.0,0.03047986273122083
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


55.0,0.018130375886506234
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


79.0,0.02079027152873425
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


15.0,0.01584537818427434
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


25.0,0.02736072346089269
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


24.0,0.018298327709839968
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


37.0,0.01602353955958824
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


76.0,0.029877643949958732
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


45.0,0.026005968232276078
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


45.0,0.029228182963173754
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


60.0,0.029759228258317894
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


23.0,0.035269818548457676
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


57.0,0.03449684402311781
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


98.0,0.06678132867293363
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


31.0,0.02053405019057175
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

39.0,0.04224690304888479
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

116.0,0.05094757525425697
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


48.0,0.014235126906873785
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


21.0,0.02217967332497106
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


34.0,0.017364093318404716
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

47.0,0.022942794639874142
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


23.0,0.020588679109621366
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


25.0,0.016906266619889476
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


23.0,0.01925990611204864
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


26.0,0.01633111786687369
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


44.0,0.04107860998501611
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

26.0,0.024831057463327588
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


37.0,0.019982634042517766
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

26.0,0.016983016938593054
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


36.0,0.015931511951497557
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


33.0,0.01666794737676347
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


23.0,0.017004678090236647
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

26.0,0.01851300687416335
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


28.0,0.017728921298315936
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

26.0,0.01825137019447043
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

23.0,0.015420664604948287
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

30.0,0.027908166677937274
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


47.0,0.01759770696330354
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

28.0,0.0210417131912638
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

34.0,0.049404681931875416
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


32.0,0.047189192245776335
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


41.0,0.03310340402036671
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

26.0,0.021690826057327195
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


24.0,0.020888598452046936
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


21.0,0.022874604277214328
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


20.0,0.017391709086661655
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


30.0,0.026993542602669174
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

36.0,0.02740051307936875
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


45.0,0.035467112949651436
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


30.0,0.04129774480284654
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


29.0,0.023917025480456044
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


25.0,0.03601213102109757
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


16.0,0.011161514213575474
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


16.0,0.012052372099217723
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


15.0,0.01767092950165383
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


23.0,0.01388101429065125
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


19.0,0.013937279091877586
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


29.0,0.09621507546173691
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
print("HelloWorld")

34.0,0.027233418146349497
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


25.0,0.025702161149992686
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


36.0,0.01789568111525419
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


59.0,0.01672897004159679
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


51.0,0.026983886944159985
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


57.0,0.022417958829451967
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


29.0,0.02161856224118941
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


18.0,0.022475721658529735
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


112.0,0.04776015771248099
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


25.0,0.021712527529158088
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
import random
print(random.random()*100)
```


28.0,0.023403641615975856
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


27.0,0.019149526783995063
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


33.0,0.021652695261133892
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


23.0,0.01904395414297655
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


29.0,0.01848630644393856
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


35.0,0.02137185027379318
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


23.0,0.019986461499585273
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


0.0,1.1102230246251565e-16
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


17.0,0.01566064419935609
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


18.0,0.015103661462417373
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


65.0,0.03103937412906943
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


30.0,0.0574535734314342
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

38.0,0.05896027375909574
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

33.0,0.08257088781437316
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

26.0,0.048011533955034214
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

34.0,0.0676839569193235
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

28.0,0.03678380517662572
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


36.0,0.02775793411791705
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


45.0,0.027211356450204227
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


36.0,0.02504582885844142
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


41.0,0.015562296751871596
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


23.0,0.025932743585890816
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


21.0,0.024015550824779575
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


25.0,0.019134662966034055
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


41.0,0.01184419733033959
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


29.0,0.012166464237473584
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


37.0,0.0073626117294089966
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


25.0,0.013025852813072225
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


42.0,0.03519867500384921
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


65.0,0.01121774721971458
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


89.0,0.024766880738573915
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


20.0,0.010734899329000736
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


25.0,0.025558890822576563
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


25.0,0.02110442899255971
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


47.0,0.013439468154212153
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


86.0,0.04053896370632981
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


57.0,0.031566019229683606
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


57.0,0.036077691790817545
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


72.0,0.04663741766142848
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


29.0,0.04568502247497619
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


65.0,0.041622878224107374
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


111.0,0.07746258181186128
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


37.0,0.016284251985922538
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

43.0,0.03402366799276357
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

128.0,0.05758875811287223
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


59.0,0.018363648273648447
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


14.0,0.010705351787126172
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


39.0,0.017755609578208653
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

55.0,0.027446676538625203
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


13.0,0.016232342227027075
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


13.0,0.009041358280579392
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


21.0,0.016809939815382702
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


16.0,0.015351185041047155
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


53.0,0.05713637863886745
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

21.0,0.023826296526891833
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


38.0,0.02298060366163579
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

29.0,0.008580893201631468
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


39.0,0.012254110263202778
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


35.0,0.011589045256830466
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


27.0,0.010207648702210359
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

29.0,0.009598556855028972
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


31.0,0.00956579477204511
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

29.0,0.009859478612237904
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

27.0,0.009014817033860867
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

36.0,0.04411941133982078
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


53.0,0.026566701273352256
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

28.0,0.014314299564290311
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

30.0,0.06665755845895682
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


27.0,0.06513338060711704
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


41.0,0.047894580770517226
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

20.0,0.021416797470699578
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


17.0,0.023555554038783844
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


20.0,0.013265360107297619
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


24.0,0.01903373265438013
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


28.0,0.02763341654931495
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

37.0,0.02932037634366791
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


48.0,0.03515056338536704
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


14.0,0.021885201366152462
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


25.0,0.019066889635262707
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


19.0,0.028246256340406894
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


18.0,0.014498984569317641
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


18.0,0.017997114422854454
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


5.0,0.007454940380728581
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


8.0,0.013909173853875023
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


11.0,0.00824704572366397
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


14.0,0.07229663601338732
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
print("HelloWorld")

39.0,0.011158079487307404
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


28.0,0.01627248849803853
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


43.0,0.012649682790540684
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


68.0,0.01309971348789507
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


62.0,0.019899762318880354
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


67.0,0.014304413418884554
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


19.0,0.01662672274652388
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


5.0,0.009633857273327218
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


126.0,0.05486037407945121
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


11.0,0.009010167387914048
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
import random
print(random.random()*100)
```


14.0,0.009931291874291537
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


22.0,0.016371059845677105
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


30.0,0.020251787267729582
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


13.0,0.009790324434426179
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


24.0,0.014565250887125791
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


32.0,0.017361936848515613
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


10.0,0.011838019374333597
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


17.0,0.01566064419935609
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


0.0,0.0
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


14.0,0.01838078859638448
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


76.0,0.03764295146451235
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


28.0,0.07442010807123633
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

38.0,0.07857317355235283
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

35.0,0.10562926539231621
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

25.0,0.032274703227711865
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

36.0,0.08477026529413856
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

25.0,0.05028341950391846
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


39.0,0.043652433608657004
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


57.0,0.03841776713447409
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


40.0,0.026860035702824248
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


48.0,0.023815324854498665
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


14.0,0.012505487829563733
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


12.0,0.01178270205239651
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


14.0,0.012552536454593533
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


36.0,0.018556013151663997
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


29.0,0.022989330398549
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


34.0,0.0217672032723919
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


21.0,0.00974794425646519
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


44.0,0.032203439194382844
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


65.0,0.021615018058178004
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


85.0,0.020386435345095766
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


21.0,0.01776220089540037
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


27.0,0.030112089754906757
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


30.0,0.014299401605395223
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


46.0,0.016142547808938756
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


80.0,0.029384777899127856
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


50.0,0.027610854091228765
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


50.0,0.029750939982073232
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


70.0,0.028598796292464534
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


31.0,0.02490819252421428
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


63.0,0.037860775976519045
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


107.0,0.07202556040489139
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


37.0,0.022330393809814608
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

41.0,0.04009130140496464
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

128.0,0.056264798650782155
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


59.0,0.019944956434265637
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


15.0,0.02255357705653671
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


38.0,0.024021841158359036
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

56.0,0.028686706932953165
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


18.0,0.0156655923680028
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


16.0,0.016798187786897345
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


21.0,0.01732953047834407
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


19.0,0.013327229396874252
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


51.0,0.04160635652697886
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

19.0,0.02533876385909639
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


33.0,0.020181740158018657
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

26.0,0.017110232163525252
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


38.0,0.017294841759759816
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


34.0,0.019461960050673244
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


24.0,0.01904048655922741
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

28.0,0.021012156827857287
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


30.0,0.020234860419006462
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

28.0,0.020952833584641395
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

27.0,0.019539949359522635
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

27.0,0.019721769821549717
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


47.0,0.013266733265890895
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

25.0,0.02522859146965728
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

22.0,0.027605985540761546
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


19.0,0.026212143582930447
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


33.0,0.020286389510729586
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

20.0,0.01312446903822484
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


18.0,0.013117931706919661
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


22.0,0.025788877068559368
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


20.0,0.02308552179854062
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


35.0,0.023761867555262106
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

42.0,0.02513314214108897
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


53.0,0.03625381773883696
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


20.0,0.03617913526957872
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


27.0,0.029280004878452504
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


22.0,0.03549611920944029
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


22.0,0.015984147348160893
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


22.0,0.014917271709846025
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


17.0,0.02374499780813366
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


13.0,0.014122761147666973
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


12.0,0.01642973343240106
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


19.0,0.08603731939525738
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
print("HelloWorld")

35.0,0.02396153260149525
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


27.0,0.028823113524214627
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


40.0,0.02038770505681553
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


65.0,0.018671864796507398
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


58.0,0.03285548136626326
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


61.0,0.026158782205200626
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


14.0,0.010426372598227318
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


15.0,0.02465857070477817
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


119.0,0.05054855938277125
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


21.0,0.018741191894561138
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
import random
print(random.random()*100)
```


23.0,0.018265752347468522
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


27.0,0.013707084906644185
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


35.0,0.015687619519497598
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


19.0,0.015399370739697882
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


29.0,0.011398967569135388
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


37.0,0.015237554366279826
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


21.0,0.016015827879819255
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


18.0,0.015103661462417373
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


14.0,0.01838078859638448
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


0.0,0.0
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


70.0,0.029949126383212454
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


20.0,0.03269208285682135
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

30.0,0.036539321217918586
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

26.0,0.05647106434712712
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

24.0,0.031081105562719813
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

27.0,0.040509843747508656
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

17.0,0.01694527759859965
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


29.0,0.018709916282012573
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


56.0,0.02646728008599919
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


40.0,0.02869027804471891
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


51.0,0.018355128738290705
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


17.0,0.026617933066568344
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


15.0,0.02470002720877884
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


22.0,0.017287897400113605
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


68.0,0.02486940056259146
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


68.0,0.031095445722277404
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


56.0,0.042448106643300565
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


62.0,0.0352301014511236
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


70.0,0.016334761833996847
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


58.0,0.02874314155547464
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


57.0,0.011434374618566556
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


73.0,0.036459085009559966
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


62.0,0.022862943121279233
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


68.0,0.029917863095361374
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


62.0,0.019833830371384198
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


73.0,0.017980288913888476
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


65.0,0.012039082006998547
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


65.0,0.011972070880321928
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


61.0,0.02895570293219718
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


70.0,0.0453632691629523
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


57.0,0.012625297632078203
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


89.0,0.030086352993273113
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


67.0,0.024193416931364675
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

66.0,0.02572180560807691
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

103.0,0.02156117807826885
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


61.0,0.017487987402439842
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


75.0,0.04347459427882838
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


65.0,0.022133429544976213
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

67.0,0.012928290834610112
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


79.0,0.03885108127698922
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


76.0,0.03827705557525396
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


75.0,0.03157563111362305
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


79.0,0.029787079977707243
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


59.0,0.016431739237215526
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

76.0,0.019084043270221507
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


72.0,0.020380104614772132
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

66.0,0.033942331386326074
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


64.0,0.028979460305249116
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


63.0,0.03114892216951637
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


69.0,0.033648467686854144
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

67.0,0.035405467203503904
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


69.0,0.033891598422518654
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

67.0,0.03452249543320696
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

67.0,0.033126412834857955
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

60.0,0.030783260061476803
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


55.0,0.01890399641245455
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

72.0,0.03342167306919297
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

67.0,0.044372589416339925
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


65.0,0.04326528789576778
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


67.0,0.029822464291672013
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

75.0,0.03682407256943221
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


72.0,0.03733003414501079
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


71.0,0.03208222528852156
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


65.0,0.02848495126318651
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


77.0,0.01876036870558262
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

72.0,0.016409458127368715
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


71.0,0.01655959161977405
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


83.0,0.06500499532584925
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


71.0,0.028024822440238184
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


78.0,0.027457320753637826
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


67.0,0.032046308848771354
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


67.0,0.03267350433255056
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


75.0,0.04740157834942782
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


76.0,0.03975031961950959
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


69.0,0.04122417677813495
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


82.0,0.12525170852843237
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
print("HelloWorld")

60.0,0.04391098699070706
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


70.0,0.028287084578482835
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


67.0,0.025145331054950093
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


62.0,0.01855749192128564
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


64.0,0.019952122967274888
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


70.0,0.019113323856300046
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


73.0,0.02699340144329665
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


74.0,0.0506886012268134
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


101.0,0.017770048765855417
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


79.0,0.048749761227570576
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
import random
print(random.random()*100)
```


80.0,0.04926748589265084
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


74.0,0.030375159726750645
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


75.0,0.028031422062805844
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


78.0,0.042394812621537215
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


75.0,0.02834666541647113
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


76.0,0.02937943044217528
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


80.0,0.045077344844706047
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


65.0,0.03103937412906943
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


76.0,0.03764295146451235
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


70.0,0.029949126383212454
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


0.0,-2.220446049250313e-16
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


66.0,0.05110941514832967
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

65.0,0.051552341836992976
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

62.0,0.07284094660624385
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

69.0,0.0488674926656385
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

61.0,0.05661099312720108
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

64.0,0.03587287204996481
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


64.0,0.02645788888427547
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


60.0,0.0085600646894618
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


68.0,0.01464334707527648
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


63.0,0.021009944250302892
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


71.0,0.0562601879380239
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


69.0,0.054222040886879985
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


78.0,0.03755118412663938
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


37.0,0.06091230564723027
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


36.0,0.07515290721484069
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


33.0,0.08001168428310024
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


28.0,0.052336547853085724
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


47.0,0.058715329022592244
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


63.0,0.07063555123944387
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


81.0,0.04791220739088109
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


30.0,0.06636883917189929
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


30.0,0.06994542314815289
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


29.0,0.039975220670912526
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


43.0,0.05351293564289028
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


78.0,0.04041549446744974
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


50.0,0.05315553351354818
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


50.0,0.0513185198133187
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


70.0,0.03537518565798925
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


20.0,0.02344546272898851
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


57.0,0.0647523981033804
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


106.0,0.09280600629331637
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


42.0,0.06260945225154413
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

37.0,0.07806877638018106
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

122.0,0.08582275868958233
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


59.0,0.054456905432671676
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


29.0,0.0828922724555835
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


42.0,0.07132419568676407
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

55.0,0.0631494879648169
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


31.0,0.0559608778279993
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


28.0,0.07131998478340895
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


31.0,0.05214543950729866
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


30.0,0.050430317161117455
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


54.0,0.05237038121091042
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

32.0,0.05952647996355431
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


39.0,0.04981680848478376
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

28.0,0.07001033277509583
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


40.0,0.0616242983218529
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


36.0,0.06852871004850691
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


29.0,0.07347720723252038
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

33.0,0.0794198032161566
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


35.0,0.07656225959693586
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

33.0,0.07805647824677275
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

32.0,0.07464051775424829
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

24.0,0.023716208381498127
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


35.0,0.03149551012058971
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

32.0,0.07150208926157309
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

12.0,0.007764476929753794
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


15.0,0.009304675508694737
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


19.0,0.013681584439887429
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

24.0,0.03652271611226776
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


24.0,0.03711271396644866
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


30.0,0.08403252189628885
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


28.0,0.07136960188784047
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


40.0,0.04925584133896632
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

44.0,0.051150670449339186
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


52.0,0.07416117794032862
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


34.0,0.09888923222023283
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 

```python
raise RuntimeError('something wrong')
```


31.0,0.07724304940896154
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


32.0,0.0807870292116607
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


30.0,0.055316138265126824
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


30.0,0.04823325758469754
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


31.0,0.08758835565632683
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


27.0,0.06479399965430654
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


20.0,0.0728780843099448
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


33.0,0.13948577357163405
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
print("HelloWorld")

33.0,0.07543368938452777
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


35.0,0.08135497987662876
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


44.0,0.0669225508574397
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


57.0,0.05998139483910525
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


57.0,0.0831780323869924
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


60.0,0.07477295792259142
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


17.0,0.0406835212079687
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


28.0,0.08971614486320523
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


120.0,0.07395553247241793
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


33.0,0.08085957428803991
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
import random
print(random.random()*100)
```


33.0,0.07852756853565146
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
import random
print(random.random()*100-5)
```


26.0,0.04530132218886063
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


34.0,0.04061558806708199
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


30.0,0.06690022005607121
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


28.0,0.04210356328980702
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


36.0,0.0445147135645948
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


31.0,0.0674430941210542
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
import random
print(random.randrange(7,16))
```


30.0,0.0574535734314342
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


28.0,0.07442010807123633
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


20.0,0.03269208285682135
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


66.0,0.05110941514832967
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


0.0,-2.220446049250313e-16
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

10.0,0.002305585848262015
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

7.0,0.011947127970998839
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

27.0,0.0622310946267447
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

12.0,0.009804180603954937
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

3.0,0.0072324531712513185
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


29.0,0.02614445601300497
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


57.0,0.045445239297515316
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


42.0,0.06588459279109404
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


50.0,0.03850529915833678
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


23.0,0.09174116444229474
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


22.0,0.08999829421770877
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


32.0,0.06982024841630807
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


32.0,0.06288573085736604
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


43.0,0.07884789892657129
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


34.0,0.0849410121757408
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


34.0,0.056131522771952325
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


53.0,0.05891198816427434
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


65.0,0.07401403090760428
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


82.0,0.048363408635090366
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


39.0,0.07051355002422288
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


36.0,0.0727716948374253
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


38.0,0.04283381725247837
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


46.0,0.056969907498013894
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


72.0,0.03970566922070784
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


51.0,0.05266348706367063
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


51.0,0.05014885539918701
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


72.0,0.034162983165182625
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


25.0,0.024969085524601087
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


59.0,0.06475852026619988
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


106.0,0.09116313395874487
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


47.0,0.06622502842709199
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

38.0,0.08155393411225598
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

121.0,0.08514940336403831
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


62.0,0.05500597832407017
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


39.0,0.08740705834424023
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


44.0,0.07294880929788028
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

57.0,0.06358716026022593
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


41.0,0.05881671774448294
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


37.0,0.07555696634653974
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


38.0,0.05510240646896036
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


39.0,0.05327043234900897
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


57.0,0.05089646176624418
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

36.0,0.060676782880148994
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


42.0,0.05046183407530991
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

36.0,0.07287816911805556
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


42.0,0.06358275668912616
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


39.0,0.07051046141832107
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


36.0,0.07612531789539778
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

39.0,0.08236975780460976
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


40.0,0.07930091602281719
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

39.0,0.08090395976123621
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

39.0,0.077226816665948
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

29.0,0.02364917380353726
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


35.0,0.03227076459573808
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

35.0,0.07451786472237598
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

19.0,0.009435225265563174
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


22.0,0.011188919902621275
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


23.0,0.014984140875242025
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

26.0,0.04005381707338729
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


29.0,0.04052222881482137
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


40.0,0.08637648791423513
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


36.0,0.07138888514584174
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


41.0,0.05093361197083912
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

48.0,0.052329170502772304
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


55.0,0.07543694589639416
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


44.0,0.10547799308759864
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 

```python
raise RuntimeError('something wrong')
```


39.0,0.0791989547531402
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


41.0,0.0839564304222069
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


37.0,0.05801284044202559
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


37.0,0.05035661794818158
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


39.0,0.0923637826406477
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


37.0,0.06752158683614118
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


30.0,0.07589641836043659
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


43.0,0.14741224118545204
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
print("HelloWorld")

39.0,0.08029718392103169
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


44.0,0.08472155339907272
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


49.0,0.06968292321651592
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


62.0,0.06257015653265452
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


61.0,0.08579021222115546
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


64.0,0.07706932893456597
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


27.0,0.044735712323254906
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


38.0,0.09474256733351194
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


119.0,0.07366051741601454
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


42.0,0.08545817969162917
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
import random
print(random.random()*100)
```


42.0,0.08326211770676106
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
import random
print(random.random()*100-5)
```


33.0,0.04808572274432099
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


27.0,0.041227255091920045
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


39.0,0.0712777157900022
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


33.0,0.044760548649955045
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


29.0,0.04564558423384113
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


41.0,0.07160416274667192
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
import random
print(random.randrange(7,16))
```


38.0,0.05896027375909574
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


38.0,0.07857317355235283
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


30.0,0.036539321217918586
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


65.0,0.051552341836992976
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


10.0,0.002305585848262015
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

0.0,0.0
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

11.0,0.012346905458990753
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

35.0,0.06802956483876299
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

16.0,0.011497597231801326
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

13.0,0.008913394524716178
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


36.0,0.026164277076282993
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


58.0,0.04601116093747781
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


48.0,0.06608316210691179
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


54.0,0.03925835483760587
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


31.0,0.09767093198699961
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


31.0,0.09583338026737542
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


40.0,0.07327059123246815
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


41.0,0.08586494695413982
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


39.0,0.10656956450099231
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


34.0,0.1093440614251523
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


28.0,0.07480771923598306
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


49.0,0.07618813822816706
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


63.0,0.10160906983487694
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


78.0,0.07103518705764511
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


36.0,0.09543443392588957
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


34.0,0.09500865612522102
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


36.0,0.05651888587422471
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


42.0,0.07958157617575201
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


74.0,0.04915921359127784
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


48.0,0.07443716351360186
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


48.0,0.07126297418654126
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


68.0,0.04409094673055369
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


23.0,0.02773327890120736
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


57.0,0.08605955781411556
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


104.0,0.11110160832053129
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


43.0,0.08658912493957738
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

38.0,0.10714870622084205
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

120.0,0.10824377560555165
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


59.0,0.07621227276267128
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


36.0,0.11549768731480814
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


44.0,0.10016642546476384
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

53.0,0.08643976357574645
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


38.0,0.08091202994607061
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


34.0,0.10041669316505397
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


34.0,0.07403884741578726
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


36.0,0.0757155757750908
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


52.0,0.06685545463992326
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

36.0,0.0881462824236039
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


42.0,0.07215680509757894
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

32.0,0.09687011750616181
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


38.0,0.08392626589755492
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


38.0,0.0941117248359149
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


33.0,0.10193043517552913
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

37.0,0.11118242042564364
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


39.0,0.10792882123078973
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

37.0,0.10951549395811522
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

36.0,0.10407542418758864
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

26.0,0.036800279112972234
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


40.0,0.0504261244721087
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

35.0,0.10289065171463063
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

19.0,0.013871109872953147
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


22.0,0.016302861056190943
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


20.0,0.02744745129371251
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

31.0,0.05232044915043177
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


29.0,0.051570348506701724
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


36.0,0.11954991983675178
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


32.0,0.10149450037108754
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


45.0,0.06946209970472839
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

46.0,0.07041070742217448
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


53.0,0.09899605648225274
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


41.0,0.13427446842588442
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 

```python
raise RuntimeError('something wrong')
```


36.0,0.11214773521161447
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


39.0,0.11128729225687817
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


34.0,0.07974598686382761
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


34.0,0.06938390415696993
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


37.0,0.1208558246995135
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


34.0,0.09320629036493577
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


27.0,0.10035147899045016
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


40.0,0.16436085332154204
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
print("HelloWorld")

36.0,0.10293009310211676
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


41.0,0.11445616164919548
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


46.0,0.095331234826451
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


59.0,0.0865491263529371
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


54.0,0.11396975264387266
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


57.0,0.10437379388248935
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


24.0,0.07139166463443047
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


34.0,0.1210631369668711
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


119.0,0.09543348002763175
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


38.0,0.11213203353298373
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
import random
print(random.random()*100)
```


38.0,0.1100711900215956
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
import random
print(random.random()*100-5)
```


30.0,0.06844556235794907
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


37.0,0.06291783704338183
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


35.0,0.09334207766197755
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


32.0,0.06595002068193556
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


39.0,0.06992829080991536
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


37.0,0.09418124582242215
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
import random
print(random.randrange(7,16))
```


33.0,0.08257088781437316
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


35.0,0.10562926539231621
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


26.0,0.05647106434712712
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


62.0,0.07284094660624385
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


7.0,0.011947127970998839
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

11.0,0.012346905458990753
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

0.0,-2.220446049250313e-16
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

32.0,0.0896055889793238
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

5.0,0.006172566014591374
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

10.0,0.024961455875911143
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


31.0,0.047718498746307514
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


55.0,0.06535335155927968
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


46.0,0.08993028065932018
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


51.0,0.054470488115275995
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


30.0,0.1252606664574505
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


29.0,0.12426480119753514
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


38.0,0.10197265891305873
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


36.0,0.03769247839715817
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


29.0,0.04032438442066
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


30.0,0.02897360695802198
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


19.0,0.03642378891760556
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


42.0,0.06188918137856936
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


61.0,0.029695030369158437
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


75.0,0.03600887955300358
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


22.0,0.034611863533016485
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


24.0,0.05463913499500794
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


29.0,0.034795305802764576
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


38.0,0.03408849940983494
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


79.0,0.05127902663008965
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


51.0,0.05672950971657642
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


51.0,0.0593271887968565
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


63.0,0.057737444708515606
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


29.0,0.05387289778112436
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


54.0,0.06969649135723999
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


103.0,0.11091631398598845
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


36.0,0.038141868675879764
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

36.0,0.05320426574175663
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

122.0,0.08708074152622047
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


53.0,0.04554189903461947
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


24.0,0.03890780335636013
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


37.0,0.04700359056596026
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

52.0,0.05882335571653596
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


28.0,0.043258168987433177
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


25.0,0.03761072683373923
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


27.0,0.03942202882001178
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


28.0,0.04227969784364627
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


49.0,0.08179588137137173
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

22.0,0.05058198951500015
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


36.0,0.04557818388476431
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

25.0,0.03583162398661355
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


33.0,0.039485804187833984
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


29.0,0.04088127523498475
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


24.0,0.0396107435513563
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

27.0,0.03854526047972884
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


29.0,0.038108400278771604
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

27.0,0.03864296885533147
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

26.0,0.04072591335737552
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

29.0,0.05656978331880724
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


46.0,0.04200851157905694
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

26.0,0.04258113823937171
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

33.0,0.06155878252714342
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


30.0,0.061033341656480444
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


38.0,0.051757387487494144
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

21.0,0.03465324303085204
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


18.0,0.038744286506168235
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


21.0,0.04542221988926387
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


20.0,0.052979225433848476
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


30.0,0.047093580619805064
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

38.0,0.05111184238506783
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


48.0,0.060632186203501415
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


30.0,0.04635553693271499
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 

```python
raise RuntimeError('something wrong')
```


24.0,0.04771926033448348
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


27.0,0.051952301512906196
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


24.0,0.04331812229595555
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


24.0,0.04648993563684112
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


26.0,0.040231387737102
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


24.0,0.0413065232294495
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


18.0,0.036689466345800725
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


30.0,0.08392723378265254
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
print("HelloWorld")

33.0,0.02689854630975097
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


30.0,0.044840589623643234
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


38.0,0.037331333303425085
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


59.0,0.03225500422624761
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


56.0,0.05075454434691773
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


61.0,0.042122285990185526
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


29.0,0.02839684272389531
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


24.0,0.03883411962532346
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


118.0,0.0814968516682224
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


31.0,0.03364457732224513
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
import random
print(random.random()*100)
```


32.0,0.031048581374690687
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
import random
print(random.random()*100-5)
```


29.0,0.027709230120932737
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


35.0,0.028726971981210325
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


28.0,0.03180749109929837
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


31.0,0.02654142696125672
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


37.0,0.027027474031570575
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


31.0,0.0369878660416012
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
import random
print(random.randrange(7,16))
```


26.0,0.048011533955034214
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


25.0,0.032274703227711865
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


24.0,0.031081105562719813
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


69.0,0.0488674926656385
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


27.0,0.0622310946267447
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

35.0,0.06802956483876299
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

32.0,0.0896055889793238
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

0.0,0.0
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

33.0,0.06360269231926885
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

24.0,0.04882894776135327
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


31.0,0.054360150018102016
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


54.0,0.061978011677075284
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


38.0,0.05758203016731067
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


49.0,0.04566522738720158
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


21.0,0.03823150208640402
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


20.0,0.03767535736011152
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


32.0,0.03169589760644287
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


43.0,0.06745703486640808
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


40.0,0.08584161562898474
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


34.0,0.0866058132615175
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


28.0,0.05876193659416651
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


50.0,0.06496386455890835
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


63.0,0.07751163168125585
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


78.0,0.05472941034671441
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


37.0,0.07598911894001747
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


33.0,0.07828336158307247
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


35.0,0.04329734198491042
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


44.0,0.06137630000754135
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


77.0,0.040103020605110284
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


49.0,0.06289488803201315
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


49.0,0.06087391369843764
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


66.0,0.03726110069100763
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


28.0,0.027639196356152418
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


57.0,0.07277165157463739
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


104.0,0.10021161112267929
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


44.0,0.06848297174826812
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

41.0,0.087915055044396
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

120.0,0.09441732854877571
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


59.0,0.06145354687790339
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


37.0,0.09363280767673554
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


45.0,0.08114232837674795
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

55.0,0.07148825911853507
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


39.0,0.06662537279405467
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


35.0,0.08013389281831962
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


34.0,0.05965247603665291
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


37.0,0.06100521538107595
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


52.0,0.05983823464861038
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

38.0,0.07243683687777058
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


42.0,0.05915935603850164
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

34.0,0.0772556221637114
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


38.0,0.06657360243466459
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


39.0,0.0756619941418405
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


35.0,0.08108048159660708
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

38.0,0.08843293790215134
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


39.0,0.08542311056293017
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

38.0,0.08682449401603776
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

38.0,0.083332855172353
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

26.0,0.02769332817200676
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


39.0,0.03644615522683203
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

37.0,0.08452996891491826
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

23.0,0.010797452711102329
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


23.0,0.01238570752599466
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


24.0,0.019475765666290612
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

33.0,0.04199596854568355
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


30.0,0.041939266143547926
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


37.0,0.09694336599497078
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


32.0,0.08169247724159812
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


46.0,0.05647934030923418
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

46.0,0.05827987505734955
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


54.0,0.08177485154048192
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


42.0,0.11227590474375637
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 

```python
raise RuntimeError('something wrong')
```


38.0,0.09052483121413901
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


40.0,0.08933444623235631
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


34.0,0.06393771405063498
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


34.0,0.056652081177078095
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


38.0,0.09780851886996833
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


35.0,0.07561032837266513
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


28.0,0.08161037597546494
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


41.0,0.14805907322881762
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
print("HelloWorld")

38.0,0.08138038323704544
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


42.0,0.09241974400848663
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


47.0,0.07560560331910593
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


59.0,0.0664782799522905
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


54.0,0.0926705320482637
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


57.0,0.0835485673562516
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


28.0,0.05360504391360965
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


35.0,0.09861762769256821
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


117.0,0.08235176899592234
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


39.0,0.08984231611806248
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
import random
print(random.random()*100)
```


39.0,0.0872737711464956
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
import random
print(random.random()*100-5)
```


34.0,0.05223082791485789
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


41.0,0.047272770780227846
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


37.0,0.07345102461048025
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


36.0,0.0492876715404571
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


43.0,0.05223448807200315
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


38.0,0.07520223446524077
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
import random
print(random.randrange(7,16))
```


34.0,0.0676839569193235
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


36.0,0.08477026529413856
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


27.0,0.040509843747508656
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


61.0,0.05661099312720108
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


12.0,0.009804180603954937
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

16.0,0.011497597231801326
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

5.0,0.006172566014591374
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

33.0,0.06360269231926885
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

0.0,0.0
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

12.0,0.016379300437780908
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


30.0,0.03463124191787503
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


52.0,0.05304560689352189
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


46.0,0.0750654592920732
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


51.0,0.043445765681705995
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


31.0,0.10272850755233609
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


30.0,0.10157674765936497
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


36.0,0.07826486165725799
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


40.0,0.04212698174217
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


33.0,0.051693175540166614
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


33.0,0.05692523787087733
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


26.0,0.0337855184528123
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


45.0,0.043886562378124716
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


63.0,0.04829363910362483
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


81.0,0.032090978907294954
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


28.0,0.042905518630291795
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


28.0,0.05113479253903275
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


27.0,0.025307116333969093
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


45.0,0.03590354145959129
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


80.0,0.03239471148516804
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


50.0,0.03846402160193396
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


50.0,0.03780575547988296
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


67.0,0.028394427783372755
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


23.0,0.021196752824714893
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


56.0,0.04930513436065731
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


106.0,0.07887939055328952
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


40.0,0.04560188440115398
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

40.0,0.060902247127954445
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

122.0,0.07019918784488532
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


59.0,0.03651871591215483
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


26.0,0.05704629334453726
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


43.0,0.048249891128167244
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

53.0,0.04424292607861202
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


28.0,0.03671811435017891
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


25.0,0.047128299773880555
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


28.0,0.03482429531292841
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


27.0,0.03201201905138784
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


53.0,0.04168974096564637
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

30.0,0.04244133775429615
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


38.0,0.03500226049126365
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

26.0,0.04726397554739348
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


38.0,0.04145794493557675
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


34.0,0.04643929273120062
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


27.0,0.049469451140442766
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

31.0,0.053534784756933296
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


33.0,0.05130868760079532
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

31.0,0.052575826805941306
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

30.0,0.05000453895722723
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

22.0,0.01642827482353104
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


38.0,0.01950480662416687
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

30.0,0.05247774670067107
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

15.0,0.00920171516117163
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


13.0,0.009314512168151157
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


22.0,0.009578812152877036
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

25.0,0.024191923808756788
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


22.0,0.0241804336976309
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


28.0,0.05660626291394211
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


26.0,0.04631977858209524
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


38.0,0.0353555414989698
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

42.0,0.037217124098298804
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


52.0,0.055141631101973454
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


31.0,0.0739020364576004
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


29.0,0.05620208424853668
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


29.0,0.0583577972126037
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


27.0,0.03662580507766544
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


27.0,0.031891613199064306
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


29.0,0.06084357952150643
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


24.0,0.040898766543144616
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


17.0,0.048536868562846336
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


30.0,0.12558786266894006
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
print("HelloWorld")

31.0,0.05545339063911703
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


32.0,0.057692069429737924
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


41.0,0.046233213799010464
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


55.0,0.040720809944665204
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


56.0,0.05979635376966452
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


59.0,0.05271686973379197
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


20.0,0.024815475068317494
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


25.0,0.06280570343539094
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


120.0,0.06029129530087096
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


30.0,0.05511851366052034
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
import random
print(random.random()*100)
```


33.0,0.05396674688094161
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


29.0,0.02983730362506598
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


37.0,0.027415389163176762
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


29.0,0.04482962825068881
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


31.0,0.02673903456529736
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


39.0,0.029482859594793798
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


29.0,0.04502767247421646
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


28.0,0.03678380517662572
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


25.0,0.05028341950391846
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


17.0,0.01694527759859965
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


64.0,0.03587287204996481
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


3.0,0.0072324531712513185
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

13.0,0.008913394524716178
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

10.0,0.024961455875911143
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

24.0,0.04882894776135327
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

12.0,0.016379300437780908
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

0.0,2.220446049250313e-16
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


26.0,0.01395287585133742
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


56.0,0.031376750228315875
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


40.0,0.04593951729635326
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


51.0,0.025912493707152984
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


20.0,0.06587860022292569
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


19.0,0.06338663741223727
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


31.0,0.045402411542630694
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


41.0,0.03401613950221005
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


36.0,0.04580708240032172
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


33.0,0.05312512318564222
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


24.0,0.02962171232036004
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


47.0,0.03880244744933914
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


65.0,0.036740168632218406
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


76.0,0.022536932481851513
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


38.0,0.034197819045460265
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


37.0,0.047445217242956916
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


36.0,0.024490330344579037
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


47.0,0.03235260108842908
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


75.0,0.025681800778128205
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


50.0,0.032658705827352974
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


50.0,0.032553758117752185
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


59.0,0.02602747333192501
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


40.0,0.03681463248570682
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


55.0,0.04111916113607628
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


102.0,0.06602410508284273
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


48.0,0.03986908936666289
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

43.0,0.060408795666715864
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

119.0,0.055997535769615414
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


59.0,0.026185840660134962
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


39.0,0.047462733125255396
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


45.0,0.03748929189905159
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

55.0,0.03333640132449378
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


44.0,0.03332251694198163
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


41.0,0.04096191131406046
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


40.0,0.03198188486428477
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


44.0,0.028393290008657535
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


49.0,0.03713623295468349
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

37.0,0.037991325565491896
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


39.0,0.027617873211218447
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

32.0,0.03826807394409315
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


39.0,0.031103013243929722
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


36.0,0.03464746736569024
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


32.0,0.036529081391081575
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

36.0,0.038605183535066145
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


38.0,0.037164953621911634
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

36.0,0.03792912397636472
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

32.0,0.03538981937731478
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

25.0,0.011599608917637116
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


37.0,0.010431440507227774
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

36.0,0.046835348734683535
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

33.0,0.02390030109921293
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


30.0,0.02236213170777024
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


38.0,0.013363155134449856
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

36.0,0.03141281159880549
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


36.0,0.029876086037027738
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


35.0,0.04528869275834946
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


28.0,0.02933345587832692
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


42.0,0.033156951895171094
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

48.0,0.03438285891257331
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


54.0,0.04541797388862612
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


45.0,0.0770421172761605
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


38.0,0.04710615929078976
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


40.0,0.05511714173451643
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


34.0,0.02797438146402409
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


34.0,0.02529426054327455
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


39.0,0.05178316308306241
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


39.0,0.03925328994397714
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


30.0,0.04156032222422845
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


45.0,0.13995447843727882
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
print("HelloWorld")

35.0,0.055770947427873474
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


37.0,0.05017612998110288
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


41.0,0.03768805610067538
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


58.0,0.032162296597891715
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


54.0,0.04741258891590716
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


57.0,0.04122210523541692
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


37.0,0.026771168715173155
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


38.0,0.05622132937648239
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


115.0,0.04959859402008582
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


47.0,0.051551497801784585
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
import random
print(random.random()*100)
```


48.0,0.051872945825056416
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


43.0,0.0284186340894661
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


51.0,0.025410800039227244
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


44.0,0.04199627669143302
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


45.0,0.02532499540964661
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


51.0,0.025553078326322032
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


45.0,0.041900280799046286
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


36.0,0.02775793411791705
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


39.0,0.043652433608657004
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


29.0,0.018709916282012573
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


64.0,0.02645788888427547
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


29.0,0.02614445601300497
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

36.0,0.026164277076282993
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

31.0,0.047718498746307514
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

31.0,0.054360150018102016
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

30.0,0.03463124191787503
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

26.0,0.01395287585133742
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


0.0,0.0
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


60.0,0.02425344255748918
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


44.0,0.034784301775073745
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


55.0,0.02126229792204637
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


32.0,0.06290544841679535
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


31.0,0.05930874229022498
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


42.0,0.03349370592443679
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


51.0,0.022123681328713563
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


52.0,0.027351257085560188
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


46.0,0.04383604276751485
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


44.0,0.031071428654997013
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


58.0,0.01129471300001128
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


59.0,0.03236241843004439
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


78.0,0.015531834891986507
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


49.0,0.03734870068770124
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


43.0,0.016477857756399206
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


47.0,0.03069514163267273
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


48.0,0.016799263556975252
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


68.0,0.01922805388112281
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


53.0,0.009732882190767955
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


53.0,0.010816513812505035
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


63.0,0.02944518423941367
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


44.0,0.04080271296975735
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


61.0,0.007540094988247259
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


84.0,0.025276513280522273
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


50.0,0.02102441261724819
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

50.0,0.022136374485484
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

108.0,0.01885291364890429
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


50.0,0.016869706318328404
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


55.0,0.04376544037581254
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


55.0,0.021241681652773403
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

59.0,0.013286737641259871
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


57.0,0.03574734127798962
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


55.0,0.036279142465587944
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


53.0,0.030577646212473275
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


57.0,0.026766669908459995
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


48.0,0.009632324306850015
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

53.0,0.014999722629808976
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


57.0,0.01714866803946624
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

47.0,0.03479875036963531
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


51.0,0.028964001509476534
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


47.0,0.03195210836506224
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


43.0,0.033756325728459435
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

46.0,0.036649855188555125
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


47.0,0.034829744844191435
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

46.0,0.03556902602908807
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

44.0,0.032980662569679686
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

58.0,0.026113242155069716
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


51.0,0.016826130731274036
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

52.0,0.032454339312271596
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

60.0,0.03961603417293602
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


60.0,0.03844361830009713
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


63.0,0.026681031519972254
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

56.0,0.03342644257457916
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


55.0,0.03328084906887174
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


52.0,0.03267666579541584
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


48.0,0.028335151461761243
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


56.0,0.014382202338035444
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

51.0,0.011339709135706255
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


54.0,0.013250190774736659
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


66.0,0.0678791532879307
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


57.0,0.027776005283032146
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


58.0,0.0272502710300766
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


47.0,0.029682147661792446
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


47.0,0.029462041754440116
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


55.0,0.047073225863895174
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


59.0,0.040439169801921304
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


51.0,0.040645730872385766
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


65.0,0.13029041708420797
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
print("HelloWorld")

50.0,0.04524849560358779
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


53.0,0.02475661101033133
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


54.0,0.023494683421805385
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


64.0,0.019140656990321414
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


60.0,0.01709920701551193
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


66.0,0.01765311936417613
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


62.0,0.02600524339140242
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


54.0,0.051907091457319976
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


91.0,0.013144157133668899
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


63.0,0.04921466153670773
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
import random
print(random.random()*100)
```


64.0,0.04973452791858701
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


61.0,0.03183488429052139
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


62.0,0.030475089667488575
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


62.0,0.042187924488908624
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


60.0,0.029418609904636406
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


63.0,0.03125348092493274
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


63.0,0.042844079023686366
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


45.0,0.027211356450204227
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


57.0,0.03841776713447409
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


56.0,0.02646728008599919
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


60.0,0.0085600646894618
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


57.0,0.045445239297515316
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

58.0,0.04601116093747781
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

55.0,0.06535335155927968
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

54.0,0.061978011677075284
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

52.0,0.05304560689352189
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

56.0,0.031376750228315875
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


60.0,0.02425344255748918
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


0.0,0.0
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


58.0,0.012044981180965086
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


51.0,0.018538600616192613
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


52.0,0.05551463908831189
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


52.0,0.05363050734558272
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


60.0,0.04003446483506479
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


45.0,0.02025740466077608
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


36.0,0.019129220985036888
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


42.0,0.03322946979940766
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


33.0,0.026268988978309538
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


36.0,0.008863007542594059
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


63.0,0.025760764583269258
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


78.0,0.01689775203468158
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


40.0,0.03158407468697866
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


38.0,0.016846733596351804
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


43.0,0.030021495239183293
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


44.0,0.017629315052546835
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


78.0,0.02558732570856892
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


54.0,0.011320971853944428
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


54.0,0.012969193659413403
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


65.0,0.03538289253301141
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


44.0,0.04844423348701454
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


60.0,0.01362910941759865
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


104.0,0.03440347490415585
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


44.0,0.01831121078749376
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

44.0,0.024324339665646066
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

119.0,0.024837832623676892
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


55.0,0.014252920379910106
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


37.0,0.029596719542013705
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


37.0,0.013933556407914827
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

50.0,0.009637953198568416
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


45.0,0.026959591446663378
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


42.0,0.025691504500906404
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


43.0,0.026430837891329606
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


45.0,0.022956276418364285
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


51.0,0.019132039832671532
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

41.0,0.013611568091451143
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


47.0,0.015517258778128706
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

40.0,0.02574029617763196
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


44.0,0.02283184361132462
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


42.0,0.02419693648092469
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


41.0,0.026007147496914573
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

42.0,0.027923391964851607
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


44.0,0.026464484693491386
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

42.0,0.027108289246619566
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

40.0,0.02466535550314053
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

39.0,0.03484084220029138
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


56.0,0.02314023164716117
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

41.0,0.02467138085843168
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

47.0,0.05575016483518325
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


45.0,0.054434395461790075
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


50.0,0.039307711544588564
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

41.0,0.033743839617384364
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


40.0,0.034641920781654956
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


31.0,0.015756532323770722
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


24.0,0.01434785791553006
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


39.0,0.010679907994152193
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

40.0,0.008790602353432764
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


39.0,0.008126398523718215
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


51.0,0.05654885754946615
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


41.0,0.01974645269445674
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


44.0,0.02021027866130176
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


35.0,0.023789747972547626
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


35.0,0.024853166010622596
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


42.0,0.03388638379481779
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


45.0,0.03245110725512057
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


36.0,0.029207040314223498
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


50.0,0.11406492046250238
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
print("HelloWorld")

44.0,0.03588588128711845
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


38.0,0.017562660078892622
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


41.0,0.016471029027355644
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


55.0,0.014983895359814814
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


51.0,0.014192125502795583
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


55.0,0.012999008372927556
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


48.0,0.02871316312490524
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


41.0,0.03687824130473605
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


109.0,0.023417598548534535
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


48.0,0.03733659379178311
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
import random
print(random.random()*100)
```


51.0,0.03871877917344824
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


48.0,0.03308169672487249
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


51.0,0.032960817775085194
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


49.0,0.03373802134457293
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


49.0,0.030869712737926824
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


53.0,0.03276865219270608
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


47.0,0.03574878782615909
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


36.0,0.02504582885844142
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


40.0,0.026860035702824248
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


40.0,0.02869027804471891
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


68.0,0.01464334707527648
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


42.0,0.06588459279109404
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

48.0,0.06608316210691179
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

46.0,0.08993028065932018
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

38.0,0.05758203016731067
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

46.0,0.0750654592920732
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

40.0,0.04593951729635326
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


44.0,0.034784301775073745
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


58.0,0.012044981180965086
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


0.0,0.0
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


55.0,0.021887503628709948
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


40.0,0.04087205126307614
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


38.0,0.03945082284402923
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


50.0,0.033748399260782436
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


50.0,0.01562379675794745
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


53.0,0.025887498450863466
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


43.0,0.029284091124886835
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


42.0,0.016106758509149777
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


56.0,0.021065073497434028
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


62.0,0.0188287106292091
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


78.0,0.0138733799671098
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


44.0,0.01980736821079354
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


43.0,0.024313095673610285
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


33.0,0.012839718147409918
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


50.0,0.012555735484409802
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


71.0,0.015548368978144933
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


50.0,0.01720803507087798
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


50.0,0.018682726953570317
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


60.0,0.017408016237233093
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


40.0,0.021147914515791122
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


58.0,0.026414924197998513
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


96.0,0.05366549040401891
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


45.0,0.017720932594523786
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

47.0,0.03926092550211635
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

114.0,0.043943449666987044
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


36.0,0.006172019528235428
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


51.0,0.0322766649912517
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


51.0,0.021008507319044245
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

56.0,0.017913317079647162
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


52.0,0.02271481546938736
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


52.0,0.024799554068709373
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


49.0,0.0168671069666384
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


51.0,0.016583758390484427
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


51.0,0.02811475853850043
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

55.0,0.02376618503719774
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


47.0,0.014614158041074465
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

38.0,0.0203455538275652
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


41.0,0.013533103303300154
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


38.0,0.01694735818531712
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


40.0,0.0217808144154249
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

41.0,0.02510182997177446
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


43.0,0.02323052875614795
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

41.0,0.024012358089789743
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

40.0,0.021283945980513752
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

54.0,0.017777090047857214
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


49.0,0.009652594579614093
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

48.0,0.024330938006631553
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

57.0,0.03136519205350263
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


57.0,0.03099197383849439
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


59.0,0.019204522772771404
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

51.0,0.018450799093408965
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


50.0,0.018714595622581043
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


47.0,0.030891831089865485
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


46.0,0.023173740981241697
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


49.0,0.018951193124895127
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

53.0,0.019102041251982227
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


56.0,0.03135348957443651
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


59.0,0.054457380206725525
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


53.0,0.028431838191144698
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


52.0,0.035636901807034715
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


40.0,0.012806479927299441
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


40.0,0.011545270304406885
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


47.0,0.029007615772897677
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


54.0,0.027559226876684995
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


43.0,0.02374458485237474
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


58.0,0.10924945153732923
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
print("HelloWorld")

47.0,0.030569713378649332
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


51.0,0.029572403158446336
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


58.0,0.0197398163729825
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


69.0,0.015128915736420945
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


66.0,0.028128852136548255
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


72.0,0.022837207606753007
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


54.0,0.021358711097957506
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


48.0,0.03562706091548806
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


110.0,0.03959374379289782
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


54.0,0.03490282189442617
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
import random
print(random.random()*100)
```


55.0,0.03530369545029233
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


52.0,0.019500124081564763
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


57.0,0.017909080903680374
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


53.0,0.027270414290489264
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


54.0,0.017530258119213493
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


57.0,0.019842843004254318
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


55.0,0.029311047411254676
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


41.0,0.015562296751871596
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


48.0,0.023815324854498665
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


51.0,0.018355128738290705
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


63.0,0.021009944250302892
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


50.0,0.03850529915833678
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

54.0,0.03925835483760587
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

51.0,0.054470488115275995
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

49.0,0.04566522738720158
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

51.0,0.043445765681705995
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

51.0,0.025912493707152984
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


55.0,0.02126229792204637
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


51.0,0.018538600616192613
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


55.0,0.021887503628709948
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


0.0,-2.220446049250313e-16
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


47.0,0.03882407070654037
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


46.0,0.037301018368123384
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


53.0,0.02872710223362429
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


38.0,0.02377962808393974
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


29.0,0.016611989407064653
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


30.0,0.009995904466020611
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


20.0,0.01717815208366502
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


44.0,0.04876057603478212
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


65.0,0.020698642452467664
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


84.0,0.042308653637624705
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


22.0,0.02050303305877077
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


25.0,0.03280372814483612
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


23.0,0.033270722885276216
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


44.0,0.022606376791069804
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


82.0,0.06092823151861526
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


50.0,0.04557017158501009
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


50.0,0.0513533879596102
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


70.0,0.062405236900225924
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


24.0,0.057682775083992444
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


60.0,0.05547625804382195
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


108.0,0.09848887039705001
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


39.0,0.02279890778267446
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

39.0,0.0411684278206913
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

128.0,0.0723526779962338
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


56.0,0.03159754814003546
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


17.0,0.014787166216714054
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


39.0,0.02525855520616238
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

55.0,0.04326100593624671
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


19.0,0.02678918520847795
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


17.0,0.014712119561266945
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


22.0,0.03046682723540306
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


19.0,0.026892781408055177
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


49.0,0.07567303571776818
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

24.0,0.03555150549488806
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


31.0,0.034204557953137926
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

23.0,0.017780230660367935
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


34.0,0.02452746058196853
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


30.0,0.023296853926564443
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


22.0,0.02112048087149676
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

26.0,0.01907349868964414
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


26.0,0.019428550871712913
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

26.0,0.020007018333124682
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

25.0,0.021488431629970828
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

27.0,0.06234535912543604
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


48.0,0.0442337743560528
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

23.0,0.020743326529136352
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

24.0,0.08346801523276937
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


21.0,0.08174052079396876
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


35.0,0.06765952445635137
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

19.0,0.03132961426250491
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


17.0,0.03463782284113015
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


21.0,0.0203728483368667
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


19.0,0.03248040469254454
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


33.0,0.04081689465382965
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

41.0,0.04223309397456443
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


52.0,0.04636413378910609
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


20.0,0.02015894191912959
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


26.0,0.027698335752522785
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


22.0,0.03516630735546633
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


18.0,0.024287096463959768
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


18.0,0.029267028416285035
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


16.0,0.009171458675946043
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


13.0,0.019826289636851513
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


6.0,0.011114003254312443
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


19.0,0.06182920700764083
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
print("HelloWorld")

34.0,0.014460270498640737
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


28.0,0.021685575074082752
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


43.0,0.020185573140091728
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


64.0,0.0226775093035696
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


60.0,0.03019749200832289
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


65.0,0.025145212267518757
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


22.0,0.025791531867407125
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


12.0,0.008342735867518436
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


122.0,0.07317498331484995
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


21.0,0.010667402277509841
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
import random
print(random.random()*100)
```


23.0,0.010109797646827179
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


26.0,0.029258942537752852
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


34.0,0.035445627175724526
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


19.0,0.016782799136117355
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


27.0,0.027991672614350094
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


35.0,0.03223611681435867
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


21.0,0.01939634179142491
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


23.0,0.025932743585890816
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


14.0,0.012505487829563733
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


17.0,0.026617933066568344
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


71.0,0.0562601879380239
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


23.0,0.09174116444229474
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

31.0,0.09767093198699961
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

30.0,0.1252606664574505
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

21.0,0.03823150208640402
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

31.0,0.10272850755233609
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

20.0,0.06587860022292569
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


32.0,0.06290544841679535
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


52.0,0.05551463908831189
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


40.0,0.04087205126307614
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


47.0,0.03882407070654037
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


0.0,0.0
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


2.0,0.0007088988361120263
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


22.0,0.022150378597749154
```python
s=raw_input()
s = s[::-1]
print(s)
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


38.0,0.02315438270102166
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


28.0,0.016327826175699056
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


29.0,0.009976819357952693
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


19.0,0.015671293922718932
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


43.0,0.04789912193181578
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


64.0,0.019468428502261492
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


82.0,0.04041820690934206
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


21.0,0.01865752617006944
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


23.0,0.03213907136919192
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


22.0,0.03227263552431414
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


44.0,0.021736941892060546
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


81.0,0.059680771558402346
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


50.0,0.043968506415410946
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


50.0,0.049934793250592024
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


68.0,0.06083221724893306
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


23.0,0.05738832345200606
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


58.0,0.054132032048062606
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


108.0,0.09695398546135492
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


37.0,0.022799448968272573
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

39.0,0.04130809400843649
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

126.0,0.07149069186891555
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


55.0,0.030336713486935674
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


15.0,0.013469273149576022
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


39.0,0.023825620962696914
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

54.0,0.04202328758616236
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


17.0,0.02492449581049261
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


15.0,0.013405381574159936
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


20.0,0.028622342367589093
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


17.0,0.02468782071150144
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


48.0,0.07329108490907754
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

22.0,0.03448332965453682
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


30.0,0.03250497666830365
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

21.0,0.01607589878991178
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


33.0,0.022609353539795762
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


29.0,0.021283973828887692
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


21.0,0.019080672271880705
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

25.0,0.017116251555188366
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


27.0,0.01765824076936462
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

25.0,0.018031431020554822
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

24.0,0.019411101164861888
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

25.0,0.059992931884640055
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


47.0,0.04197019351243447
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

22.0,0.019947845920338048
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

24.0,0.08194442972082228
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


21.0,0.07993503801269808
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


35.0,0.0657492470332931
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

18.0,0.030474481385530106
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


15.0,0.03336895775023041
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


19.0,0.018901172691999535
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


17.0,0.030132512659655775
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


31.0,0.03995801286944034
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

39.0,0.041589696412196786
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


50.0,0.04547538439794796
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


18.0,0.019493640119366606
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


24.0,0.02665097625247126
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


20.0,0.03440986425617909
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


16.0,0.022820243160182052
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


16.0,0.02768581822474081
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


14.0,0.008460042055525419
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


11.0,0.017924642205809027
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


4.0,0.010125768643933997
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


17.0,0.0633861843545177
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
print("HelloWorld")

33.0,0.014662696530976405
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


27.0,0.021418626768666016
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


42.0,0.019586652100662016
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


63.0,0.022150881424056745
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


58.0,0.029524396372587303
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


63.0,0.02459011582535331
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


20.0,0.02419867568196843
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


10.0,0.007572491667062531
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


123.0,0.07226114209614243
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


19.0,0.009894267401793777
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
import random
print(random.random()*100)
```


22.0,0.009773796116456346
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


24.0,0.02839146382684521
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


32.0,0.034641616461749236
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


17.0,0.01576178317223842
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


25.0,0.026902715692236123
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


33.0,0.03139367370338142
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


19.0,0.018270085344433973
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


21.0,0.024015550824779575
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


12.0,0.01178270205239651
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


15.0,0.02470002720877884
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


69.0,0.054222040886879985
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


22.0,0.08999829421770877
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

31.0,0.09583338026737542
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

29.0,0.12426480119753514
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

20.0,0.03767535736011152
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

30.0,0.10157674765936497
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

19.0,0.06338663741223727
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


31.0,0.05930874229022498
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


52.0,0.05363050734558272
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


38.0,0.03945082284402923
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


46.0,0.037301018368123384
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


2.0,0.0007088988361120263
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


0.0,0.0
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


20.0,0.02072488532617356
```python
s=raw_input()
s = s[::2]
print(s)
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


46.0,0.017931787981265046
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))

print(','.join(l))
```


39.0,0.020085952097391058
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)

x=int(input())
print(fact(x))
```


41.0,0.01774273927468517
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i

print(d)
```


31.0,0.019552587452116965
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
values=input()
l=values.split(",")
t=tuple(l)
print(l)
print(t)
```


50.0,0.04470127886443365
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
class InputOutString(object):
    def __init__(self):
        self.s = ""

    def getString(self):
        self.s = input()

    def printString(self):
        print(self.s.upper())

strObj = InputOutString()
strObj.getString()
strObj.printString()
```


66.0,0.015305199226096411
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))

print(','.join(value))
```


94.0,0.02587907081423313
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]

for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col

print(multilist)
```


26.0,0.011139690031938931
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
items=[x for x in input().split(',')]
items.sort()
print(','.join(items))
```


32.0,0.038121022374447144
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;

for sentence in lines:
    print(sentence)
```


32.0,0.019689224036106734
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
s = input()
words = [word for word in s.split(" ")]
print(" ".join(sorted(list(set(words)))))
```


55.0,0.02193180072282086
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)

print(','.join(value))
```


90.0,0.04123884315778503
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print(",".join(values))
```


60.0,0.03751515938098948
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
s = input()
d={"DIGITS":0, "LETTERS":0}
for c in s:
    if c.isdigit():
        d["DIGITS"]+=1
    elif c.isalpha():
        d["LETTERS"]+=1
    else:
        pass
print("LETTERS", d["LETTERS"])
print("DIGITS", d["DIGITS"])
```


60.0,0.040695498120996376
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
s = input()
d={"UPPER CASE":0, "LOWER CASE":0}
for c in s:
    if c.isupper():
        d["UPPER CASE"]+=1
    elif c.islower():
        d["LOWER CASE"]+=1
    else:
        pass
print("UPPER CASE", d["UPPER CASE"])
print("LOWER CASE", d["LOWER CASE"])
```


80.0,0.049290543504124096
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 

```python
a = input()
n1 = int( "%s" % a )
n2 = int( "%s%s" % (a,a) )
n3 = int( "%s%s%s" % (a,a,a) )
n4 = int( "%s%s%s%s" % (a,a,a,a) )
print(n1+n2+n3+n4)
```


35.0,0.04998365330867338
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 

```python
values = input()
numbers = [x for x in values.split(",") if int(x)%2!=0]
print(",".join(numbers))
```


69.0,0.04914505386215784
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 

```python
netAmount = 0
while True:
    s = input()
    if not s:
        break
    values = s.split(" ")
    operation = values[0]
    amount = int(values[1])
    if operation=="D":
        netAmount+=amount
    elif operation=="W":
        netAmount-=amount
    else:
        pass
print(netAmount)
```


113.0,0.08058269631693948
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 

```python
import re
value = []
items=[x for x in input().split(',')]
for p in items:
    if len(p)<6 or len(p)>12:
        continue
    else:
        pass
    if not re.search("[a-z]",p):
        continue
    elif not re.search("[0-9]",p):
        continue
    elif not re.search("[A-Z]",p):
        continue
    elif not re.search("[$#@]",p):
        continue
    elif re.search("\s",p):
        continue
    else:
        pass
    value.append(p)
print(",".join(value))
```


43.0,0.02324743591001477
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
from operator import itemgetter, attrgetter

l = []
while True:
    s = input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2)))

47.0,0.04734988193882561
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print(i)

127.0,0.061585954686029454
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 

```python
import math
pos = [0,0]
while True:
    s = input()
    if not s:
        break
    movement = s.split(" ")
    direction = movement[0]
    steps = int(movement[1])
    if direction=="UP":
        pos[0]+=steps
    elif direction=="DOWN":
        pos[0]-=steps
    elif direction=="LEFT":
        pos[1]-=steps
    elif direction=="RIGHT":
        pos[1]+=steps
    else:
        pass

print(int(round(math.sqrt(pos[1]**2+pos[0]**2))))
```


65.0,0.022771367336329895
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 

```python
freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1

words = freq.keys()
words.sort()

for w in words:
    print("%s:%d" % (w,freq[w]))
```


23.0,0.01450294633694893
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 

```python
def square(num):
    return num ** 2

print(square(2))
print(square(3))
```


44.0,0.023531102526046288
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def square(num):
    '''Return the square value of the input number.

    The input number must be integer.
    '''
    return num ** 2

print(square(2))
print(square.__doc__)
```

64.0,0.033335930073470355
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
class Person:
    # Define the class parameter "name"
    name = "Person"

    def __init__(self, name = None):
        # self.name is the instance parameter
        self.name = name

jeffrey = Person("Jeffrey")
print("%s name is %s" % (Person.name, jeffrey.name))

nico = Person()
nico.name = "Nico"
print("%s name is %s" % (Person.name, nico.name))
```


17.0,0.021109584766524025
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 

```python
def SumFunction(number1, number2):
	return number1+number2

print(SumFunction(1,2))
```


16.0,0.014744584213707501
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
def printValue(n):
    print(str(n))

printValue(3)
```


21.0,0.022945406399907053
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
def printValue(s1,s2):
    print(int(s1)+int(s2))

printValue("3","4")
```


19.0,0.021793485945379443
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
def printValue(s1,s2):
    print(s1+s2)

printValue("3","4") #34
```


59.0,0.06304349012511468
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
def printValue(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)

printValue("one","three")

```

26.0,0.03083903069529592
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
def checkValue(n):
    if n%2 == 0:
        print("It is an even number")
    else:
        print("It is an odd number")

checkValue(7)


40.0,0.02809005816899346
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
def printDict():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)

printDict()

33.0,0.017012213831772538
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)

printDict()
```


45.0,0.01977542717073555
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():
		print(v)

printDict()
```


41.0,0.019272548342053053
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print(k)

printDict()
```


30.0,0.017196267558915457
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)

printList()
```

34.0,0.014852192380528373
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])

printList()
```


36.0,0.015493213519733207
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])

printList()
```

34.0,0.015830821958515262
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])

printList()
```

33.0,0.014957953447984895
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))

printTuple()
```

42.0,0.040641503681906554
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)
```


57.0,0.02532217763956124
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])

tp2=tuple(li)
print(tp2)
```

29.0,0.025712693408480813
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
s= raw_input()
if s=="yes" or s=="YES" or s=="Yes":
    print("Yes")
else:
    print("No")

35.0,0.06271810006711209
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)
```


34.0,0.06041289095359759
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)
```


42.0,0.04259523195038761
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)
```

25.0,0.024871243325436887
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)
```


22.0,0.025785517263143376
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)
```


27.0,0.021255716285894843
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
class American(object):
    @staticmethod
    def printNationality():
        print("America")

anAmerican = American()
anAmerican.printNationality()
American.printNationality()
```


30.0,0.02277606653369757
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
class American(object):
    pass

class NewYorker(American):
    pass

anAmerican = American()
aNewYorker = NewYorker()
print(anAmerican)
print(aNewYorker)
```


37.0,0.035397976171388734
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
class Circle(object):
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius**2*3.14

aCircle = Circle(2)
print(aCircle.area())

47.0,0.037315303782596176
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w

    def area(self):
        return self.length*self.width

aRectangle = Rectangle(2,10)
print(aRectangle.area())
```


59.0,0.04129857182507357
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
class Shape(object):
    def __init__(self):
        pass

    def area(self):
        return 0

class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l

    def area(self):
        return self.length*self.length

aSquare= Square(3)
print(aSquare.area())
```


15.0,0.033265691143742004
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 

```python
raise RuntimeError('something wrong')
```


29.0,0.028044631816312338
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
def throws():
    return 5/0

try:
    throws()
except ZeroDivisionError:
    print("division by zero!")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')


23.0,0.040015273274553675
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
class MyError(Exception):
    """My own exception class

    Attributes:
        msg  -- explanation of the error
    """

    def __init__(self, msg):
        self.msg = msg

error = MyError("something wrong")
```


27.0,0.01978233521934669
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@((\w+\.)+(com))"
r2 = re.match(pat2,emailAddress)
print(r2.group(1))
```


27.0,0.02321336160923726
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
import re
emailAddress = raw_input()
pat2 = "(\w+)@(\w+)\.(com)"
r2 = re.match(pat2,emailAddress)
print(r2.group(2))
```


11.0,0.013949322337331704
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
import re
s = raw_input()
print(re.findall("\d+",s))
```


15.0,0.020512783551626446
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
unicodeString = u"hello world!"
print(unicodeString)
```


20.0,0.015091916003873163
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
s = input()
u = unicode( s ,"utf-8")
print(u)
```


14.0,0.09262848063932805
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
print("HelloWorld")

43.0,0.023548213583992395
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)
```


38.0,0.025404924667547735
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100

n=int(input())
print(f(n))
```


50.0,0.020036411136247878
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
print(f(n))
```


75.0,0.018855080339854058
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)

n=int(input())
values = [str(f(x)) for x in range(0, n+1)]
print(",".join(values))
```


69.0,0.0280175840266782
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1


n=int(input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))

print(",".join(values))
```


73.0,0.021752580900875507
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i

n=int(input())
values = []
for i in NumGenerator(n):
    values.append(str(i))

print(",".join(values))
```


21.0,0.018642858490564906
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
li = [2,4,6,8]
for i in li:
    assert i%2==0
```


13.0,0.015388356806831371
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
expression = raw_input()
print(eval(expression))
```


129.0,0.058438516623334325
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1

    return index

li=[2,5,7,9,11,17,222]
print(bin_search(li,11))
print(bin_search(li,12))
```


9.0,0.015165872857135998
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
import random
print(random.random()*100)
```


10.0,0.016188497930845758
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
import random
print(random.random()*100-5)
```


17.0,0.013543874067944994
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(11) if i%2==0]))
```


25.0,0.017007334227935433
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))
```


8.0,0.01237901638601302
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
import random
print(random.sample(range(100), 5))
```


18.0,0.013166794938100468
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))
```


27.0,0.014574632454393388
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))
```


6.0,0.013581512343330382
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
import random
print(random.randrange(7,16))
```


25.0,0.019134662966034055
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))
```


14.0,0.012552536454593533
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
from timeit import Timer
t = Timer("for i in range(100):1+1")
print(t.timeit())
```


22.0,0.017287897400113605
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)
```


78.0,0.03755118412663938
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
subjects=["I", "You"]
verbs=["Play", "Love"]
objects=["Hockey","Football"]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = "%s %s %s." % (subjects[i], verbs[j], objects[k])
            print(sentence)
```


32.0,0.06982024841630807
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)

40.0,0.07327059123246815
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)

38.0,0.10197265891305873
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)

32.0,0.03169589760644287
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)

36.0,0.07826486165725799
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)

31.0,0.045402411542630694
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)
```


42.0,0.03349370592443679
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)
```


60.0,0.04003446483506479
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)

    return newli

li=[12,24,35,24,88,120,155,88,120,155]
print(removeDuplicate(li))
```


50.0,0.033748399260782436
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
class Person(object):
    def getGender( self ):
        return "Unknown"

class Male( Person ):
    def getGender( self ):
        return "Male"

class Female( Person ):
    def getGender( self ):
        return "Female"

aMale = Male()
aFemale= Female()
print(aMale.getGender())
print(aFemale.getGender())
```


53.0,0.02872710223362429
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))
```


22.0,0.022150378597749154
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
s=raw_input()
s = s[::-1]
print(s)
```


20.0,0.02072488532617356
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
s=raw_input()
s = s[::2]
print(s)
```


0.0,1.1102230246251565e-16
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


 ############################################# 
```python
import itertools
print(list(itertools.permutations([1,2,3])))
```


