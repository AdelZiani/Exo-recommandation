identifiant énoncé exercice	identifiant solution exercice	
IUTLabarre_02_01_01.txt	IUTLabarre_02_01_01.py	utilisation fonction input, utilisation du modulo, affichage du resultat en fonction d'une condition, utilisation if/else, affectation de valeur dans une variable, transtypage int,déclaration de variables, variables d'entiers, instructions conditionnelles, saisie clavier, transtypage, modulo, test booleen, fonctions natives, affichage de caractères,int, input, variables, if, if else, modulo, parité d'un nombre, booléen, print, string, comparaisons d'entiers, égal à
IUTLabarre_02_01_02.txt	IUTLabarre_02_01_02.py	utilisation fonction input, utilisation du modulo,affectation de valeur dans une variable, transtypage int, utilisation if, utlisation de la différence avec "!", ,déclaration de fonction, variables d'entiers, instructions conditionnelles, saisie clavier, affichage de caractères, test booleen, variables, modulo, arrêt d'une fonction,int, input, variables, if, modulo, parité d'un nombre, booléen, print, string, comparaisons d'entiers, égal à, différent de, no else
IUTLabarre_02_01_03.txt	IUTLabarre_02_01_03.py	definition d'une fonction, demande et affectation de valeur dans une variable avec input et transtypage, utilisation if, utilisation du modulo, Connaissance condition d'arrêt d'une fonction,déclaration de variable, import de fonction depuis un module, utilisation du module random, instructions conditionnelles, conditions imbriquées, transtypage, fonctions natives, utilisation de variables aléatoires, incrémentation de variable, saisie clavier, test booleens, calcul sur variable, construction de chaines de caractères, affichage de caractères,def, return, int, input, variables, if, modulo, parité d'un nombre, booléen, comparaisons d'entiers, égal à, print, return break, early return
IUTLabarre_02_02_01.txt	IUTLabarre_02_02_01.py	utilisation module random, utilisation fonction randint, demande et affectation de valeur avec transtypage dans une variable, utilisation de variable d'incrémentation, utilisation if/else, comparaison entre deux variables, transtypage avec str d'une variable entière, utilisation de bloc if/else imbriqué, réutilisation de code, affichage avec concaténation de chaine entre texte et variable,déclaration de variable, import de fonction depuis un module, utilisation du module random, instructions conditionnelles, conditions imbriquées, transtypage, fonctions natives, utilisation de variables aléatoires, incrémentation de variable, saisie clavier, test booleens, calcul sur variable, comparaisons d'entiers, construction de chaines de caractères, affichage de caractères,interface utilisateur, print, input, int, cast, comparaisons d'entiers, égal à, booléen, if, if else, from import, random, random randint, manipulation de variables, structure conditionnelle, no loops
IUTLabarre_02_02_02.txt	IUTLabarre_02_02_02.py	utilisation module random, utilisation fonction randint, demande et affectation de valeur avec transtypage dans une variable, utilisation de variable d'incrémentation, incrémentation de variable, utilisation if/else, comparaison entre deux variables, transtypage avec str d'une variable entière, utilisation de bloc if/else imbriqué, réutilisation de code, affichage avec concaténation de chaine entre texte et variable, savoir comparer deux variables,déclaration de fonctions, déclaration de variable, import de fonction depuis un module, utilisation du module random, instructions conditionnelles, conditions imbriquées, transtypage, fonctions natives, utilisation de variables aléatoires, incrémentation de variable, saisie clavier, test booleens, calcul sur variable, comparaisons d'entiers, construction de chaines de caractères, utilisations de boucles, boucles sur variables, utilisation d'itérables, arrêt d'une fonction, affichage de caractères,interface utilisateur, print, input, int, cast, comparaisons d'entiers, égal à, inférieur à, booléen, if, if else, from import, random, random randint, manipulation de variables, structure conditionnelle, no loops
IUTLabarre_02_02_03.txt	IUTLabarre_02_02_03.py	utilisation module random, utilisation fonction randint, demande et affectation de valeur avec transtypage dans une variable, utilisation de variable d'incrémentation, utilisation if/else, comparaison entre deux variables, transtypage avec str d'une variable entière, utilisation de bloc if/else imbriqué, réutilisation de code, affichage avec concaténation de chaine entre texte et variable, savoir comparer deux variables, annoncer à l'utilisateur une erreur dans la saisie, arrêt d'une fonction en fonction d'une condition,déclaration de variable, saisie clavier, transtypage, ,interface utilisateur, print, input, int, cast, comparaisons d'entiers, égal à, inférieur à, booléen, if, if else, from import, random, random randint, manipulation de variables, structure conditionnelle, no loops, vérification d'input, for in input
IUTLabarre_02_03_01.txt	IUTLabarre_02_03_01.py	utlisation de fonction input, demande à l'utilisateur de rentrer une valeur avec un texte,déclaration de variable, variable d'entiers, variables chaine de caractère, saisie clavier, transtypage, construction de chaine de caractères, instructions conditionnelles, conditions multiples, modulo, test booleens,int, input, variables, string, interface utilisateur
IUTLabarre_02_03_02.txt	IUTLabarre_02_03_02.py	utlisation de fonction input, demande à l'utilisateur de rentrer une valeur avec un texte, utilisation de chaine de caractère, utilsation du modulo, utilisation if/else, utilisation de elif,déclaration de variable, variable d'entiers, variables chaine de caractère,  saisie clavier, transtypage, construction de chaine de caractères, instructions conditionnelles, conditions multiples, opérateurs booleens, modulo, test booleens,int, input, variables, string, interface utilisateur, print, if, elif, else, modulo, divisibles, structure conditionnelle, booléen, manipulation de message, pas d'opérateurs booléens
IUTLabarre_02_03_03.txt	IUTLabarre_02_03_03.py	utlisation de fonction input, demande à l'utilisateur de rentrer une valeur avec un texte, utilisation de chaine de caractère, utilsation du modulo, utilisation opérateur booléen, utilisation d'un if à plusieurs conditions, utilisation opérateur or,  affichage de chaine de caractère en fonction d'une condition,déclaration de variable, variable d'entiers, variables chaine de caractère, saisie clavier, transtypage, construction de chaine de caractères, instructions conditionnelles, modulo, test booleens, condition multiples, opérateurs booleens,int, input, variables, string, interface utilisateur, print, if else, or, modulo, divisibles, structure conditionnelle, booléen, manipulation de message, only one if 
IUTLabarre_02_03_04.txt	IUTLabarre_02_03_04.py	utlisation de fonction input, demande à l'utilisateur de rentrer une valeur avec un texte, utilisation de chaine de caractère, utilsation du modulo, utilisation opérateur booléen, utilisation de plusieurs if, utilisation opérateur and, utlisation de la différence avec "!", affichage de chaine de caractère en fonction d'une condition,déclaration de variable, variable d'entiers, variables chaine de caractère, variables de booleens,  saisie clavier, transtypage, construction de chaine de caractères, instructions conditionnelles, modulo, test booleens, condition multiples,int, input, variables, string, interface utilisateur, print, if, and, différent de, modulo, divisibles, structure conditionnelle, booléen
IUTLabarre_02_03_05.txt	IUTLabarre_02_03_05.py	utlisation de fonction input, demande à l'utilisateur de rentrer une valeur avec un texte, utilisation de chaine de caractère, utilsation du modulo, utilisation opérateur booléen, utilisation de plusieurs if, utilisation opérateur not, affichage de chaine de caractère en fonction d'une condition, utilisation de variable booléenes, condition avec négation d'une variable,déclaration de variable, variable d'entiers, conditions imbriquées, saisie clavier, transtypage, test boolens, modulo, instructions conditionnelles, conditions multiples,int, input, variables, string, interface utilisateur, print, if, variable booléenne, différent de, modulo, divisibles, structure conditionnelle, booléen
IUTLabarre_02_03_06	IUTLabarre_02_03_06.py	utlisation de fonction input, demande à l'utilisateur de rentrer une valeur, utilisation de if/else, utilisation de elif, utilisation de if imbriqués, vérification d'une deuxieme condition dans un bloc if, utilisation du modulo,déclarations de variable, saisie clavier, transtypage, variable d'entiers, conditions imbriquées, enchainement des conditions, test boolens, comparaison d'entiers, utilisation de fonctions natives, affichage de variables,int, input, variables, string, interface utilisateur, print, if, elif, else, modulo, divisibles, structure conditionnelle, booléen
IUTLabarre_02_04_01.txt	IUTLabarre_02_04_01.py	utilisation de la fonction input, demande et affectation de plusieurs valeurs sur plusieurs variables, utilisation de if/else, utilisation de if imbriqués, affichage d'une variable en fonction d'une condition, recherche du plus grand nombre,  recherche de variable en fonction d'une condition, comparaison de variables,déclarations de variable, saisie clavier, transtypage, variable d'entiers, conditions imbriquées, enchainement des conditions, test boolens, comparaison d'entiers, utilisation de fonctions natives, affichage de variables,enchaînements de conditions, int, input, comparaison de nombres, supérieur à, print, if, else, structure conditionnelle
IUTLabarre_02_04_02.txt	IUTLabarre_02_04_02.py	utilisation de la fonction input, demande et affectation de plusieurs valeurs sur plusieurs variables, utilisation de if/else, utilisation de if imbriqués, affichage d'une variable en fonction d'une condition,  recherche de variable en fonction d'une condition, comparaison de variables,déclaration de variable, saisie clavier, transtypage, variable d'entiers, conditions multiples, enchainement des conditions, test booleens, comparaison d'entiers, utilisation de fonction natives, affichage de variables, ,enchaînements de conditions, int, input, comparaison de nombres, supérieur à, print, if, elif, else, structure conditionnelle
IUTLabarre_02_04_03.txt	IUTLabarre_02_04_03.py	utilisation de la fonction input, demande et affectation de plusieurs valeurs sur plusieurs variables, utilisation de if/else, non utilisation de if imbriquer, comparaison de variables,déclaration de variable, saisie clavier, transtypage, affectation de valeurs, algorithme de tri, comparaison d'entiers, enchainement des conditions, test booleens, utilisation de fonctions native, intervertissement de valeurs, utilisation de variables temporaires,enchaînements de conditions, int, input, comparaison de nombres, supérieur à, variables, print, if, else, structure conditionnelle
IUTLabarre_02_04_04.txt	IUTLabarre_02_04_04.py	utilisation de la fonction input, demande et affectation de plusieurs valeurs sur plusieurs variables, utilisation de if/else, utilisation de variables temporaires, comparaison de variables, tri de variables, affichage de multiples variables triés,déclaration de variable, saisie clavier, transtypage, utilisation de boucle for, affichage de variable, utilisation de fonctions natives,enchaînements de conditions, int, input, comparaison de nombres, supérieur à, variables, print, if, elif, échanges de variables, structure conditionnelle
IUTLabarre_03_01_01.txt	IUTLabarre_03_01_01.py	utilisation de la fonction input, connaissance du retour à la ligne, utilisation de boucle for, boucle sur une variable, affichage d'une variable de boucle i avec séparation par espace avec end=' ',déclaration de variable, saisie clavier, transtypage, affichage de variable, utilisation de fonctions natives, utilisation de boucle for, multiplication sur une variable, utilisation de range,int, input, print, string, cast, for in range, range(end), print(end)
IUTLabarre_03_01_02.txt	IUTLabarre_03_01_02.py	utilisation de la fonction input, connaissance du retour à la ligne, utilisation de boucle for, boucle sur une variable, affichage d'une variable de boucle i avec séparation par espace avec end=' ', affichage de multiple par rapport à une variable,déclaration de variable, saisie clavier, transtypage, instructions conditionnelles, conditions multiples, tests booleens, modulo, utilisation de boucle for, opérateurs booleens, utilisation de range,int, input, print, string, cast, for in range, range(end), print(end), multiples
IUTLabarre_03_01_03.txt	IUTLabarre_03_01_03.py	utilisation de la fonction input, connaissance du retour à la ligne, utilisation de boucle for, boucle sur une variable, affichage d'une variable de boucle i avec séparation par espace avec end=' ', affichage de multiple par rapport à une variable, utilisation d'opérateur booleén, utilisation de l'opérateur and, vérification de deux conditions dans un seul if, utilisation de boucle for avec départ et fin,déclaration de variable, saisie clavier, transtypage, affichage de variable, utilisation de fonction natives, utilisation de boucles for, utilisation de range, utilisation du step,for in range, range(begin end), print(end), if and, booléen, modulo, divisibles
IUTLabarre_03_01_04.txt	IUTLabarre_03_01_04.py	utilisation de la fonction input, connaissance du retour à la ligne, utilisation de boucle for, boucle sur une variable, affichage d'une variable de boucle i avec séparation par espace avec end=' ', affichage de multiple par rapport à une variable, utilisation d'opérateur booleén, utilisation de l'opérateur and, vérification de deux conditions dans un seul if, utilisation de boucle for avec départ et fin et un step ,déclaration de variable, saisie clavier, transtypage, affichage de variable, utilisation de fonctions natives, utilisation de boucle for, utilisation de range, utilisation du step, multiplication de variables,int input, print, string, for in range, range(begin end step), print(end)
IUTLabarre_03_01_05.txt	IUTLabarre_03_01_05.py	utilisation de la fonction input, connaissance du retour à la ligne, utilisation de boucle for, boucle sur une variable, affichage d'une variable de boucle i avec séparation par espace avec end=' ', affichage de multiple par rapport à une variable, utilisation d'opérateur booleén, utilisation de l'opérateur and, vérification de deux conditions dans un seul if, utilisation de boucle for avec départ et fin et un step , utilisation d'une boucle for pour parcourir dans l'ordre décroissant, connaissance du step négatif,déclaration de variable, saisie clavier, transtypage, affichage de variable, utilisation de fonctions natives, utilisation de boucles for, instructions conditionnelles, modulo, opérateurs booléens, comparaison d'entiers, test booleens,int input, print, string, for in range, range décroissant, range(begin end step), print(end)
IUTLabarre_03_02_01.txt	IUTLabarre_03_02_01.py	utilisation fonction input, utilisation de variable booléenes, recherche de nombre premier, affichage de texte en fonction d'une variable booléene et d'une comparaison, utilisation du modulo, utilisation de la boucle for, ,déclaration de variable, saisie clavier, transtypage, affichage de variable, utilisation de fonctions natives, utilisation de boucles for, instructions conditionnelles, modulo, opérateurs booléens, comparaison d'entiers, test booleens, boucles imbriquées,nombre premier, divisibles, modulo, if, structure booléen, for in range, range(begin, end), if else, and, comparaison de nombres
IUTLabarre_03_02_02.txt	IUTLabarre_03_02_02.py	utilisation fonction input, utilisation de variable booléenes, recherche de nombre premier, affichage de texte en fonction d'une variable booléene et d'une comparaison, utilisation du modulo, utilisation de la boucle for, utilisation de boucle for imbriquer,déclaration de variable, saisie clavier, transtypage, affichage de variable, utilisation de fonctions natives, utilisation de boucles for, instructions conditionnelles, modulo, opérateurs booléens, comparaison d'entiers, test booleens, incrementation de variable, utilisation de range, boucles imbriquées,nombre premier, divisibles, modulo, if, structure booléen, boucles imbriquées, for in range, range(begin, end), if else, and, comparaison de nombres
IUTLabarre_03_02_03.txt	IUTLabarre_03_02_03.py	utilisation fonction input, utilisation de variable booléenes, recherche de nombre premier, affichage d'un compteur en fonction d'une variable booléene et d'une comparaison, utilisation du modulo, utilisation de la boucle for, utilisation de boucle for imbriquer, utilisation d'une variable incrématatrice, incrémentation de variable,déclaration de variable, saisie clavier, utilisation d'itérable, boucle for sur variable, affichage de variable, utilisation de fonctions native,nombre premier, divisibles, modulo, if, structure booléen, boucles imbriquées, for in range, range(begin, end), if else, and, comparaison de nombres, énumération booléenne
IUTLabarre_03_03_01.txt	IUTLabarre_03_03_01.py	utilisation de la fonction input, parcours de chaine de caractères avec la fonction for, affichage de texte avec séparation d'espace par end=' ', affectation de chaine de caractères à une variable,déclaration de variable, saisie clavier, utilisation d'itérable, boucle for sur variable, affichage de variable, utilisation de fonctions natives, opérations sur chaine de caractère ,input, variables, string, for in string, print, print(end)
IUTLabarre_03_03_02.txt	IUTLabarre_03_03_02.py	 utilisation de la fonction input, parcours de chaine de caractères avec la fonction for, affichage de texte avec séparation d'espace par end=' ', affectation de chaine de caractères à une variable, répétition de caractère par multiplication,déclaration de variable, saisie clavier, utilisation d'itérable, boucle for sur variable, affichage de variable, utilisation de fonction native, test booleen. utilisation de variable type string,,input, variables, string, for in string, print, print(end), multiplication de string
IUTLabarre_03_03_03.txt	IUTLabarre_03_03_03.py	 utilisation de la fonction input, parcours de chaine de caractères avec la fonction for, affichage de texte avec séparation d'espace par end=' ', affectation de chaine de caractères à une variable, recherche de caractère dans une chaine de caractère, utliisation de if/else, remplacer un caractère en fonction d'une condition,déclaration de variable, saisie clavier, utilisation d'itérable, boucle for sur variable, affichage de variable, utilsation de fonction native, incrémentation de variable, test booleen, instruction conditionnelle,input, variables, for in string, string, print, print(end), if else, if in string, analyse de string, booléen
IUTLabarre_03_03_04.txt	IUTLabarre_03_03_04.py	 utilisation de la fonction input, parcours de chaine de caractères avec la fonction for, affichage de texte avec séparation d'espace par end=' ', affectation de chaine de caractères à une variable, utliisation de if, utilisation du modulo, utilisation de variable incrémentatrices ,déclaration de fonction, affichage, utilisation de fonction native,input, variables, for in string, string, index, parité, modulo, booléen, print(end)
IUTLabarre_04_01_01.txt	IUTLabarre_04_01_01.py	création de fonction, utilisation de fonction sans arguments et sans retour de fonction,déclaration de fonction, déclaration de fonction avec arguments, utilisation de boucle for, affichage, utilisation de fonction native,def, fonction sans arguments, print, string, 
IUTLabarre_04_01_02.txt	IUTLabarre_04_01_02.py	création de fonction, utilisation de fonction avec un argument et sans retour de fonction, utilisation de la boucle for en fonction de l'argument passé dans la fonction,déclaration de fonction, retour de valeur, déclaration de fonction avec argument, instruction conditionnelles, test booleens, operations sur chaines de caractères, comparaison d'entiers ,def, fonction à un argument, for in range, range(begin), print, string, int
IUTLabarre_04_01_03.txt	IUTLabarre_04_01_03.py	création de fonction, utilisation de fonction avec un argument et avec un retour de fonction, utilisation de la boucle for en fonction de l'argument passé dans la fonction, concaténation de chaine,  répétition de chaine par multiplication,déclaration de fonction, déclaration de fonction avec arguments, retour de valeur, multiplication d'entiers,def, fonction à un argument, int, if int négatif, string, modélisation de string, return
IUTLabarre_04_02_01.txt	IUTLabarre_04_02_01.py	création de fonction, utilisation de fonction avec un argument et un retour, multiplication d'entier, déterminisation du carré d'un nombre passé en argument ,déclaration de fonctions, déclaration de fonction avec arguments, utilisation de liste, import de fonction depuis un module, utilisation du module random, opérations sur les listes*,def, fonction à un argument, carré d'un nombre, int, multiplication, return
IUTLabarre_04_02_02.txt	IUTLabarre_04_02_02.py	création de fonction, utilisation de fonction avec plusieurs arguments et un retour d'une liste, utilsation de liste, utilisation du module random, utilisation de la fonction randrange du module random, génération de valeur aléatoire,création d'une liste de taille n passé en argument ,déclaration de fonction, déclaration de fonction avec arguments, utilisation de boucle for, affichage, utilisation de fonction native, déclaration de liste, méthodes sur les listes,def, fonction à deux arguments, from import, random, random randrange, for in range, range(begin end), list, append, int, return
IUTLabarre_04_02_03.txt	IUTLabarre_04_02_03.py	création de fonction, utilisation de fonction avec une liste comme argument, renvoie d'une liste, parcours avec boucle for d'une liste, création d'une liste intermédiaire, utilisation de la méthode append sur une liste, calcul sur les éléments d'une liste,déclaration de fonction, déclaration de fonction avec arguments, déclaration de liste, utilisation d'indices de listes, utilisation de slices, utilisation de boucles for, instructions conditionnelles, assertions, test booleens, utilisation d'itérables, , parcours de liste, retour de valeur,def, fonction demandant une liste, list, for in list, append, carré d'un nombre, return
IUTLabarre_04_02_04.txt	IUTLabarre_04_02_04.py	création de fonction, utilisation de fonction avec une liste comme argument, renvoie d'un maximum sur une liste, gestions d'erreur si liste vide avec assert, parcours sur une liste avec notation slicée, recherche du maximum,déclaration de fonction, déclaration de fonction avec arguments,  déclaration de liste, utilisation de boucles for, instructions conditionnelles, assertions, test booleens, utilisation d'itérables, méthodes de listes, parcours de liste, retour de valeur,def, fonction demandant une liste, assert, exception, list, slice, for in list, max d'une liste, comparaison d'entiers, variables, return
IUTLabarre_04_02_05.txt	IUTLabarre_04_02_05.py	création de fonction, utilisation de fonction avec une liste comme argument, renvoie d'une liste, parcours avec boucle for d'une liste, création d'une liste intermédiaire, utilisation de la méthode append sur une liste,déclaration de fonction, déclaration de fonction avec arguments, parcours de liste par indice, méthodes de listes, boucle for, instruction conditionnelles, test booleen, retour de valeur,singletons, def, fonction demandant une liste, list, for in list, if not, not in list, int, booléen, append, return
IUTLabarre_04_02_06.txt	IUTLabarre_04_02_06.py	création de fonction qui prend une liste et un entier en argument, utiilisation d'une boucle for sur une liste, recherche d'un élément d'une liste en fonction d'une condition,déclaration de variable, déclaration de fonction avec arguments, parcours de lste, incrémentation de variable, instructions conditionnelles, test booleen, retour de valeur,def, fonction demandant deux arguments, for in range, range(begin), list, len, if, comparaison d'entiers, lecture de liste, première occurence, return
IUTLabarre_04_02_07.txt	IUTLabarre_04_02_07.py	création de fonction  qui prend une liste et un entier en argument, parcours d'une liste par la boucle for, comparaison de valeurs, utilisation de variables incrémentatrice, incrémentation de variable, renvoie d'occurence,,def, fonction demandant deux arguments, for in range, range(begin), list, len, if, comparaison d'entiers, lecture de liste, nombre d'occurences, return
IUTLabarre_04_02_08.txt	IUTLabarre_04_02_08.py	,,def, fonction demandant une liste, lecture de liste, nombre d'occurences, list, couple, tuple, for in list, append, return, comparaison d'entiers, 
IUTLabarre_04_02_09.txt	IUTLabarre_04_02_09.py	,déclaration de variable, déclaration de liste, affichage de variable, affichage de liste,def, fonction demandant une liste, lecture de liste, nombre d'occurences, list, couple, tuple, for in list, append, return, comparaison d'entiers, 
IUTLabarre_05_01_01.txt	IUTLabarre_05_01_01.py	déclaration d'une liste, affichage de liste,déclaration de variable, déclaration de liste, affichage de variable, affichage de liste, division euclidienne, utilisation d'indice de liste, methode de liste,list, int, déclaration de liste, print
IUTLabarre_05_01_02.txt	IUTLabarre_05_01_02.py	déclaration d'une liste, affichage de liste, réaffectation de valeur après déclaration sans contrainte de la taille de la liste, utilisation de la notation slicée ,déclaration de variable, déclaration de liste, affichage de variable, affichage de liste, incrémentation de variable, parcours de liste par indice, boucle while, test boolens, instruction conditionnelles, comparaison d'entiers,list, int, déclaration de liste, print, index de liste, lecture de liste, modification de liste, len, dernier élément d'une liste, division euclidienne
IUTLabarre_05_01_03.txt	IUTLabarre_05_01_03.py	déclaration d'une liste, affichage de liste, réaffectation de valeur après déclaration, utilisation de la notation slicée, utilisation de variable incrémentatrices, incrémentation de variable, utilisation de la boucle while,déclaration de variable, déclaration de liste, affichage de variable, affichage de liste, incrémentation de variable, parcours de liste par indice, boucle while, test boolens, instruction conditionnelles, comparaison d'entiers,list, int, déclaration de liste, while, boucle conditionnelle, len, comparaison d'entiers, index de liste, lecture de liste, modification de liste, soustraction, incrémentation, print
IUTLabarre_05_01_04.txt	IUTLabarre_05_01_04.py	déclaraton d'une liste, utilisation de variable incrémentatrice, incrémentation de variable, utilisation de boucle while, parcours d'une liste avec la boucle while, affichage valeur d'une liste,déclaration de variable, déclaration de liste, affichage de variable, affichage de liste, incrémentation de variable, parcours de liste par indice, boucle while, test boolens, instruction conditionnelles, modulo, comparaison d'entiers,list, lecture de liste, print, boucle, incrémentation, while, len, for in list, boucle conditionnelle
IUTLabarre_05_01_05.txt	IUTLabarre_05_01_05.py	déclaration de liste, utilisation de variable incrémentatrice, incrémentation de variables, utilisation de la boucle whiile, parcours d'une liste avec la boucle while, affichage valeur d'une liste en fonction d'une condition,déclaration de variable, déclaration de liste, affichage de variable, affichage de liste, incrémentation de variable, boucles while, boucles imbriquées, utilisation de fonction natives, parcours de listes par indice,list, lecture de liste, print, boucle, incrémentation, while, len, for in list, boucle conditionnelle, modulo, parité
IUTLabarre_05_01_06.txt	IUTLabarre_05_01_06.py	déclaration de liste, utilisation de variable incrémentatrice, incrémentation de variables, utilisation de la boucle while, parcours d'une liste avec la boucle while, boucle while imbriquer, utilisation de la notation slicée, affichage de valeur avec séparation d'espace par end=' ',déclaration de variable, déclaration de liste, affichage de variable, affichage de liste, incrémentation de variable, boucles while, boucles imbriquées, utilisation de fonction natives, parcours de listes par indice,list, lecture de liste, boucles imbriquées, incrémentation, for in list, for in range, while, len, print, print(end)
IUTLabarre_05_01_07.txt	IUTLabarre_05_01_07.py	déclaration de liste, utilisation de variable incrémentatrice, incrémentation de variables, utilisation de la boucle while, parcours d'une liste avec la boucle while, boucle while imbriquer, utilisation de la notation slicée, affichage de valeur avec séparation d'espace par end=' ',déclaration de variable, déclaration de liste, affichage de variable, boucle for, calculs sur variable, modulo, multiplications, ,list, lecture de liste, boucles imbriquées, incrémentation, for in list, for in range, while, len, print, print(end)
IUTLabarre_05_01_08.txt	IUTLabarre_05_01_08.py	déclaration de liste, parcours de liste par la boucle for, utilisation du modulo, affichage de valeur d'une liste en fonction d'une condition,déclaration de variable, import de fonction depuis module, utilisation de variables aléatoires, utilisation du module random, déclaration de liste, méthode de liste, affichage de variables, affichage de liste,list, lecture de liste, for in list, parité, modulo, formule mathématique, print, print(end)
IUTLabarre_05_03_01.txt	IUTLabarre_05_03_01.py	utilisation du module random, utilisation de la fonction randint, utilsiation de la boucle for,  utilisation de la méthode append, ajout de valeur dans une liste, affichage de liste, utilisation de la fonction len, affichage de la longueur d'une liste,déclaration de variable, import de fonction depuis module, utilisation de variables aléatoires, utilisation du module random, déclaration de liste, opération sur les listes, affichage,random, randint, from import, int, list, append, for in range, range(end), print, len 
IUTLabarre_05_03_02.txt	IUTLabarre_05_03_02.py	utilisation du module random, utilisation de la fonction randint, création de liste par l'opérateur *, affichage de liste, utilisation de la fonction len, affichage de la longueur d'une liste,déclaration de variable, import de fonction depuis module, utilisation de variables aléatoires, utilisation du module random, déclaration de liste, boucle for, méthode de liste,random, randint, from import, int, list, multiplication de liste, range(end), print, len 
IUTLabarre_05_03_03.txt	IUTLabarre_05_03_03.py	utilisation du module random, utilisation de la fonction randint, ajout de valeur aléatoire dans une liste, utilisation de la méthode append, affichage d'une liste, affichage de la longueur d'une liste, création d'une liste,déclaration de variable, déclaration de liste, déclaration de matrices, boucles for, affichage de variables, parcours de listes par indices, affichage de variables, utilisation de fonctions natives,random, randint, from import, int, list, for in range, append, range(end), print, len
IUTLabarre_06_01_01.txt	IUTLabarre_06_01_01.py	déclaration de matrice, utilisation de boucle for, utilisation de boucle for imbriquer, utilisation de la notation slicée, affichage de matrice bien séparé par des espaces,déclaration de variable, déclaration de liste, déclaration de matrices, boucles for, affichage de variables, parcours de listes par indices, affichage de variables, utilisation de fonctions natives, import de fonction depuis un module, variables aléatoires, parcours de matrices par indice,matrice, listes imbriquées, lecture de matrice, for in range, range(len), boucles imbriquées, print, print(end)
IUTLabarre_06_01_02.txt	IUTLabarre_06_01_02.py	déclaration de matrice, utilisation de boucle for, utilisation de boucle for imbriquer, utilisation de la notation slicée, affichage de matrice bien séparé par des espaces, utilisation du module random, ajout d'une valeur dans une matrice, utilisation de la fonction randint,déclaration de variable, déclaration de liste, création de matrices, boucles for, affichage de variables, parcours de listes par indices, affichage de variables, utilisation de fonctions natives, import de fonction depuis un module, variables aléatoires, méthodes de listes,matrice, listes imbriquées, lecture de matrice, for in range, range(len), boucles imbriquées, print, print(end), from import, random, randint
IUTLabarre_06_01_03.txt	IUTLabarre_06_01_03.py	déclaration de matrice avec taille demandé, utilisation de boucle for imbriquer, utilisation de la notation slicée, ajout de liste dans une liste, utilisation de la fonction randrange du module random, utilisation de la méthode append,déclaration de fonction, déclaration de fonction avec arguments, boucles for, tests booleens, retour de valeur, instructions conditionnelles,from import, random, randrange, matrice, listes imbriquées, boucles imbriquées, création de matrices, append, for in range
IUTLabarre_06_01_04.txt	IUTLabarre_06_01_04.py	création de fonction, recherche d'élément dans une matrice, utilisation de la boucle for, fonction à retour booléen,déclaration de fonction, déclaration de fonction avec arguments, boucles for, retour de valeur, boucles imbriquées, parcours de matrices par indice, retour de valeur instructions conditionnelles, test booleens,def, fonction à deux arguments, lecture de matrice, sortie booléen, for in list, if in list, 
IUTLabarre_06_01_05.txt	IUTLabarre_06_01_05.py	création de fonction, recherche d'élément dans une matrice, utilisation de la boucle for, utilisation de if, utilisation de la fonction len sur une liste, utilisation de boucle for imbriquer, utilisation de la notation slicée, calcul des valeurs d'une matrice, parcours d'une matrice,déclaration de fonction, déclaration de fonction avec arguments, boucles for, partitionnement de programme, test booleens, retour de valeur, boucles imbriquées, délaration de variables, méthode de listes,def, fonction demandant une matrice, matrice, lecture de matrice, list, création de liste, len, boucles imbriquées, fonction renvoyant une liste
IUTLabarre_06_01_06.txt	IUTLabarre_06_01_06.py	création de multiples fonctions , utilisation de la méthode append, parcours d'une matrice, utilisation de la notation slicée, modification de données dans une matrice, utilisation de fonction entre elles, parcours d'une matrice par diagonale,déclaration de fonction, déclaration de fonction avec arguments, boucles for, utilisation de tuples, test booleens, instruction conditionnelles, déclaration de liste, retour de valeur, méthode listes, utilisation de la valeur None, ,def, matrice, fonction demandant une matrice, fonction renvoyant une copie, len, comparaison de longueurs, création de matrice, lecture de matrice, list, boucles imbriquées, append, return
IUTLabarre_06_01_07.txt	IUTLabarre_06_01_07.py	création de fonction, recherche de dimensions de matrices, parcours de matrice avec boucle for imbriquer, utlisation de la méthode append, ajout de liste, insertion de couple de données,déclaration de variable, déclaration de liste, création de matrices, boucles for, affichage de variables, parcours de listes par indices, méthodes de listes, utilisations de tuples, tests booleens, instructions conditionnelles, utilisation de la valeur None,def, matrice, création de matrice, lecture de matrice, comparaison de longueurs, len, couples, list, append, boucles imbriquées, return
IUTLabarre_06_01_08.txt	IUTLabarre_06_01_08.py	création de multiples fonctions , utilisation de la méthode append, parcours d'une matrice, utilisation de la notation slicée, calcul sur matrice, renvoie de tupple, parcours de liste à l'aide de la boucle for avec deux éléments, utilisation de la fonction len, déclaration de deux variables sur la meme ligne,déclaration de fonction, déclaration de fonction avec argument, déclaration de variable, déclaration de liste, création de matrices, boucles for, affichage de variables, parcours de listes par indices, affichage de variables, utilisation de fonctions natives, méthodes de listes, utilisation de la valeur None, retour de valeur,def, matrice, lecture de matrice, index de matrice, boucles imbriquées, couples de coordonnées, list, append, structure booléenne, voisins d'un index, return
IUTLabarre_06_01_09.txt	IUTLabarre_06_01_09.py	création de multiples fonctions, utilsiation de la méthode append, parcours de matrice, utilisation de boucle for imbriquer, copie de matrice, déclaration de deux variables sur une meme ligne, utilisation de la notation slicée sur une liste, utilisation de la notation slicée sur une matrice,déclaration de fonction, déclaration de fonction avec arguments, déclaration de liste, déclaration de variables, instructions conditionnelles, tests booleens, parcours de liste par indice, boucle for, utilisation du step, méthodes de listes, comparaisons d'entiers, retour de valeur,def, matrice, lecture de matrice, copie de matrice, index de matrice, boucles imbriquées, inversions d'éléments, voisins d'un index, list, 
IUTLabarre_06_02_01.txt	IUTLabarre_06_02_01.py	création de fonction, déclaration de liste, utilisation de la fonction len, utilisation de la méthode append, renvoie d'une liste, tri dans une liste, utilisation de la boucle for avec step,déclaration de fonction, déclaration de fonction avec arguments, déclaration de liste, déclaration de variables, parcours de liste par indice, boucle for, utilisation du step, méthodes de listes, retour de valeur,def, list, lecture de listes, index de liste, for in range, range(begin end step), parité de l'index, création de listes, append, return, liste de listes, séparation de listes
IUTLabarre_06_02_02.txt	IUTLabarre_06_02_02.py	création de fonction, utilisation de la fonction min, parcours de listes, ajout dans une liste, utilisation de la notation slicée, utilisation de la fonction range, utilisation de la fonction append, renvoie de liste,déclaration de fonction, déclaration de fonction avec arguments, partitionnement de programme, déclaration de liste, déclaration de variables, parcours de liste par indice, boucle for, méthodes de listes, retour de valeur, cassage de boucle, instruction conditionnelles,def, list, lecture de listes, création de liste, append, combination de listes
IUTLabarre_06_02_03.txt	IUTLabarre_06_02_03.py	création de multiples fonctions, utilisation de la méthode append, parcours de liste avec boucle for, utilsation du mot clé break, utilisation de la notation slicée, appel de fonction dans une fonction,déclaration de fonction, déclaration de fonction avec arguments, déclaration de liste, déclaration de variables, parcours de liste par indice, boucle for, méthodes de listes, retour de valeur boucle, instruction conditionnelles,def, list, lecture de liste, ordre croissant, préfixe croissant, comparaison d'entiers, création de liste, len, for in range, range(begin end), append, break, return 
IUTLabarre_06_02_04.txt	IUTLabarre_06_02_04.py	création de fonction, utilisation d'opérateur booléen, utilisation de l'opérateur not, création de matrice à partir d'un élément d'une liste, utilisation d'indice, parcours d'une liste avec boucle for, utilisation de la notation slicée, comparaison entre valeur d'une meme liste, utilisation de la méthode append, incrémentation d'indice, renvoie de matrice,déclaration de fonction, déclaration de fonction avec arguments, boucle for, parcours de string par indice, retour de valeur, test booleen, ,def, list, lecture de liste, ordre croissant, préfixe croissant, comparaison d'entiers, création de liste, len, for in range, range(begin end), append, liste de listes, découpage de liste, listes croissantes, break, return 
IUTLabarre_07_01_02.txt	IUTLabarre_07_01_02.py	création de fonction, utilisation de la fonction len, utilisation de la division entière, utilisation de la notation slicée, renvoie booléen, parcours d'une chaine de caractère selon une condition,déclaration de fonction, déclaration de fonction avec arguments, boucle for, parcours de string, retour de valeur, instruction conditionnelles, methodes listes, déclaration de liste, opérations sur les string,,def, palindrome, analyse de string, for in range, return booléen, comparaison de string, len
IUTLabarre_07_01_03.txt	IUTLabarre_07_01_03.py	création de fonction, parcours d'une chaine de caractère avec boucle for, utilisation de la méthode append, concaténation de chaine, renvoie de liste, utilisation de if/else,déclaration de fonction, déclaration de fonction avec argument, déclaration de variable, déclaration de liste, déclaration de string, methodes liste, test booleens, instruction conditionnelles,def, decoupage de chaine, analyse de string, for in string, comparaison de string, list, liste de chaines, append, initialisation de chaines, addition de string
IUTLabarre_07_01_04.txt	IUTLabarre_07_01_04.py	création de fonction, parcours d'une chaine de caractère avec boucle for, utilisation de la méthode append, concaténation de chaine, renvoie de liste, utilisation de if/else, utilisation de if/else imbriquer,déclaration de fonction, déclaration de fonction avec argument, déclaration de variable, utilisation de string, boucles for, instruction conditionnelles, tests booleens, retour de variable, opération sur les strings,def, decoupage de chaine, analyse de string, for in string, comparaison de string, list, liste de chaines, append, initialisation de chaines, addition de string
IUTLabarre_07_01_05.txt	IUTLabarre_07_01_05.py	création de multiples fonctions, utlisation de la bibliothèque string, parcours de chaine de caractère ,concaténation de chaine de caractère, utilisation de la méthode append, renvoie de liste, utilisation de fonction créer dans une  autre fonction créer, découpage de chaine de caractère utilisation de la méthode whitespace du module string, import de module avec "import", utilisation d'opérateur booléen, utilisation de l'opérateur not,,import, string, string.whitespace, def, decoupage de chaine, analyse de string, for in string, comparaison de string, list, liste de chaines, append, initialisation de chaines, addition de string