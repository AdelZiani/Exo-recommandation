operator,utilisation de fonctions native,key de sorted,plusieurs fonctions,parité d'entiers,création de liste,isupper,fonction à retour booléen,arrêt d'une fonction,randrange,print format,insert obligatoire,from import,insertion de couple de données,renvoie booléen,modélisation de string,utilsiation de la boucle for,conditionnel,méthode isupper,distance entre deux points,itertools,calcul d'une somme d'entier.,incrémentation d'une variable,tri par attributs,utilisation de fonction avec un argument et un retour,choice,variable d'entiers,booleans,utilisations de fonctions,ajout de valeur dans une liste,string.whitespace,combination de listes,for(begin end),utilisation de variable d'incrémentation,fonction,parité d'un élément,formatage d'un entier,utilisation de la notation slicée,prise d'inputs,string compressed,déclaration de deux variables sur une meme ligne,tests booleens,lambda,listes embriquées,utilisation de l'opérateur and,utilisation de fonction avec un argument et avec un retour de fonction,nombre premier,affichage de multiples variables triés,accès au maximum d'une liste,valeur,comparaison de liste,seed,singletons,compréhension de matrices,affichage d'une variable en fonction d'une condition,comparaison,format de string,calcul du nombre d'occurences,for in liste,utilisation de la fonction min,random choice,algorithme,fonction à paramètres spéciaux,appel fonction print,affectation à une liste,utilisation de string,arrêt d'une fonction en fonction d'une condition,exception,for in input,classe parent,retour de valeur,tri spécifique,utilisation de bloc if/else imbriqué,ajout de clé-valeur,fonction de lecture,timeit,division réel,décalage modulaire,utilisation fonction randint,réflexion,demande et affectation de valeur avec transtypage dans une variable,couple,utilisation de if,written doc,variable de classes,méthode insert,conditions multiples,méthode count,affichage valeur d'une liste en fonction d'une condition,liste écrasé,module re,sum,utilisation de la fonction randrange du module random,variables chaine de caractère,lecture de matrice,break,affichage,particularité d'ensembles, print,methode pop,methodes liste,n - uplets,modulo,random randrange,sample,cast ,variables de classes,opérations sur les listes*,matrice,nombres comme string,manipulation d'entiers,tuple to string,entier positif requis,list_to_tuple,range décroissant,exception créée,unicode,boucle for concaténation de listes,multiplication de variables,chaine de caractère,génération de class,cercle,opérateurs booléen,comparaison d'entiers,while input true,lecture d'ensemble,manipulation de string,range(len),for in string,binaire,utilisation de variables incrémentatrice,in range,programme à input précis,fonction sur les listes,utilsation du mot clé break,opérateur arithmétique +,accès aux éléments d'une liste,concaténation de liste,append interdit,carré,méthode split,suppression des doubles,valeur d'index,index de matrice,return break,parité d'index,interface utilisateur,analyse de chaine,base 2,méthode max,création d'une liste,méthode sorted,boucle conditionnelle,méthode pop,voisins d'un index,divisibilité,clés,passwordinput,algorithme de tri,multiple objectifs,concaténation de listes,types de listes,inférieur à,utilisation de fonction natives,création de fonction qui prend une liste et un entier en argument,remove,int binaire,compréhension de listes modulo,déclaration de string,méthode is lower,opérateur **,utilisation if/else,plusieurs objectifs,parcours de chaine de caractère,minimum d'une liste,renvoie de liste,reverse,calcul à variables,multiples,manipulation de matrice,définition de classe,utilisation de if imbriqués,str,document method,reverse order,fonction avec paramètres,dict.items,iterations,division entière,déterminisation du carré d'un nombre passé en argument,only one if ,boucles embriquées,retour de valeur boucle,fonction raw_input,appel de fonction,comment,roman numbers,calcul de coordonnées de matrice,test booleen,génération de valeur aléatoire,création de listes,fomat,création de matrices,random random,affichage écran texte et valeur formaté d'une variable,nombres premiers,utlisation de la méthode append,parcours de liste par indice,methodes listes,tri sans fonctions spéciales,condition if,opérations sur chaine de caractère,utilisation d'opérateur booléen,utilisation de fonction sans arguments et sans retour de fonction,timer,boucle while imbriquer,système booléen,déclaration de matrice,méthodes de listes,ordre croissant,pop,gestion des erreurs,fonctions importées,parcours de listes par indices,permutations de liste,ZeroDivisionError,reverse slice,déclaration de fonction,utilisation de classes ,parité de nombre,utilisation d'une variable incrématatrice,méthode reverse,fonction d'une ligne,incrémentation,for in range,utilisation de la bibliothèque standard,utilisation de la valeur None,déclaraton d'une liste,utilisation opérateur booléen,boucle booléenne,tuple,init,fonction récursive,list,ajout de valeur aléatoire dans une liste,rectangle,square value,moyenne,calcul des valeurs d'une matrice,isdigit,and,concaténation de chaîne,utilisation de boucle for imbriquer,instruction conditionnelles,accès au minimum d'une liste,manipulation d'erreurs,init class,liste de tuple,assert,initialistation de liste,if and,utliisation de if/else,fonction abs,compréhention de listes,optimisation de fonction,classes,utilisation opérateur and,coordonnées,méthode isdigit,slice until,condition avec négation d'une variable,factoriel,append,opérateur puissance,if complexe,sorted,utilisation d'itérable,délaration de variables,concaténation,calcul avec PI,utilisation de la boucle for en fonction de l'argument passé dans la fonction,tri par pas,reflexion,appel de dictionnaire,formule mathématique,listes imbriquées,islower,range(begin end step),égal à,ajout de liste dans une liste,chaines,tuples,condition,comparaison de valeurs,join,dictionnaire,comparaison de nombres,utilisation du module random,for in for,if int négatif,import math,liste croissante,print formatté,random sample,utilisation du modulo,filter,or,utilisation d'un if à plusieurs conditions,opération sur les strings,parcours de liste avec boucle for,map,no loops,condition booléen,demande et affectation de valeur dans une variable avec input et transtypage,opérateurs booléens,double boucle,déclaration de deux variables sur la meme ligne,finally,méthode joint,division impossible,fonction qui renvoi,random randint,reprise d'insert,transformations d'ensembles,calculs sur variable,méthode de listes,méthode upper,set,saisie clavier,module random,modification d'une liste durant une boucle dépendant de sa taille,attrgetter,test booleen. utilisation de variable type string,cast en int,comparaison d'éléments,assertions,utilsiation de la méthode append,indexes,liste,première occurence,utf-8,différent de,ajout d'une valeur dans une matrice,fonction de classe,utilisation de la boucle for avec step,filtre booléen,one line commands,input string,affectation de variable,opérateur booléen >,lecture d'un slice, affichage de chaine de caractère en fonction d'une condition,utilisation de variables temporaires,increment valeur dict,concaténation de string,import de module avec "import",self,while break,module operator,utilsation de liste,soustraction,utilisation de la fonction len,recherche de nombre premier,utilisation de la boucle for,decompress,types d'ensembles,fonction de classes,len ,méthode append,clé,fonction qui renvoie,inversion d'emplacements,utilisation opérateur or,utilisation de slices,manipulation d'éléments de matrice,liste de listes,utilisation d'opérateur booleén,test,initialisation de classes,generator,méthode fact,cassage de boucle,transformation de matrices,répétition de caractère par multiplication,déclaration de fonctions,utilisation if,tri de liste,type de char,différent,fonction avec paramêtre,création de matrice aléatoire,key word pass,méthode float,utilisation de class,type float,parcours de matrices par indice,renvoie d'une liste,méthode list,affichage valeur d'une liste,produit,connaissance du retour à la ligne,parcours de liste,utilisation de fonction avec une liste comme argument,utilisation de la méthode append sur une liste,attributs de classes,utilisation de fonction entre elles,affichage d'une variable de boucle i avec séparation par espace avec end=' ',calcul du produit d'entiers aléatoires,return,enchaînements de conditions,utilisation de la fonction range,division d'entiers aléatoires,boucle sur une variable,concaténation de chaîne ,definition d'une fonction,affichage d'un compteur en fonction d'une variable booléene et d'une comparaison,structure booléenne,no else,class,occurences de caractères,print(dict),parenté de classes,parcours d'une liste avec la boucle while,decoupage de chaine,modification de données dans une matrice,if elif else,échanges de variables,if not,identification d'un nombre premier,erreurs informatives,index valeur,création de liste aléatoire,gestions d'erreur si liste vide avec assert,boucles imbriquées,utilisation de la notation slicée sur une liste,transtypage avec str d'une variable entière,compréhension de listes,class self,chaine de caractères,group,affichage d'une chaine de caractères,manipulation de chaine de caractères,navigation dans un espace 2D,except,slice,range(begin),parité,intervalles,fonction sans arguments,exceptions,affectation de valeur dans une variable,condition and,imbrication de méthodes,parcours d'une matrice,comparaison de string,fréquence d'éléments,prise d' input,liste décroissante,analyse de chaines,méthode sqrt,filtre par position,lecture d'une liste,génération de classes,zlib,utilisation de variable booléenes,suppression de nombre pairs,renvoie d'occurence,get,entrée clavier,paramètre d'instance,parcours de listes par indice,affichage de variables,utilisations des listes,analyse de string,sqrt,fonction de listes,enchainement des conditions,fonctions,gestion de l'aléatoire,construction de chaine de caractères,appel de fonction dans une fonction,classe,manipulation de chaine,fonction à paramêtres,insertion d'éléments,index,variable de class,def,multiplication,affichage d'un nombre,déclaration de type,utilisations de boucles,découpage de chaine de caractère utilisation de la méthode whitespace du module string,déclaration de matrices,utilisation de boucle while,déclaration de fonction avec arguments,document,comparaison de valeur,multiplication de liste,affichage de caractères,print, répétition de chaine par multiplication,conditiionnel,while,bool,calcul sur matrice,__doc__,permutation,fonctions natives,divisibles,initialisation de paramètre,random shuffle,méthodes de classes,filtre de position,matrice carrée,utlisation de fonction input,end),trouver le minimum d'une liste,utilisation de boucle for avec départ et fin,durée d'exécution,méthode range,création de multiples fonctions,création de documentation,prime number,utilisation de chaine de caractère,méthode de liste,énoncé de situation,création de fonction,affichage écran texte et valeur d'une variable,renvoie de matrice,recherche du plus grand nombre,méthode listes,affichage de matrice bien séparé par des espaces,test booleens,manipulation de variables,création de matrice à partir d'un élément d'une liste,découpage de liste,calcul de distances,utilisation module random,input de données,parité de nombres,opérateur booléen,add,affichage de chaine de caractère en fonction d'une condition,utilisation du step,insertion dans une liste triée,utilisation d'indices de listes,utilisation de flottants,utilisation de if/else imbriquer,while not,addition,for ignorant les nombres pairs,affichage de multiple par rapport à une variable,comparaison entre valeur d'une meme liste,annoncer à l'utilisateur une erreur dans la saisie,affichage de valeur d'une liste en fonction d'une condition,bytes format,utilisation de liste,range(begin,slices,utilisation de plusieurs if,fonction demandant une matrice,construction de listes,manipulation de dictionnaire,fonctions chainées,manipulation de pas,definition de méthodes,récursivité des variables,paramètre de classe,utilisation de fonction créer dans une  autre fonction créer,parcours de string par indice,application concrète,énumération booléenne,findall,utilisation de la boucle while,somme d'entiers,demande et affectation de plusieurs valeurs sur plusieurs variables,liste triée,méthode statique,for in list,for in tuple,méthode sort,randint à intervalles changeants,math floor,match,compréhension,not in list,for in items,affichage de valeur avec séparation d'espace par end=' ',compress,variable,produit de réels aléatoires,analyse de caractère,float,conditions imbriquées,parcours d'une chaine de caractère selon une condition,int input,création d'une liste de taille n passé en argument,déclaration de matrice avec taille demandé,boucle for,tri dans une liste,recherche du maximum,liste de liste,key word break,méthode sum,parcours de liste à l'aide de la boucle for avec deux éléments, saisie clavier,utilisation de fonctions natives,test boolens,parcours de liste par la boucle for, déclaration de liste,mathématiques,méthodes héritées,conversion d'unités,comparaisons,regex,triples boucles,non utilisation de if imbriquer,boucle for sur variable,affichage d'une liste,réutilisation de code,random,opérations sur les string,compréhension de liste,parcours d'une liste par la boucle for,fonction renvoyant une liste,parité de l'index,fonction à un argument,utilisation de la notation slicée sur une matrice,condition elif,tri par priorité,one-line-commands,dictionnaires,retour de variable,raise,entrées clavier,variables aléatoires,utilisation de boucle for avec départ et fin et un step,méthode de classe,initialisation de variables,utilisation de la boucle whiile,remplacer une liste,manipulation de listes,récursivité,utilisation de boucle for,utilisation de elif,else,utliisation de if,operations sur chaines de caractères,copie de matrice,ajout dans une liste,split,concaténation de chaine de caractère,demande à l'utilisateur de rentrer une valeur avec un texte,opérateurs booleens,ensemble,méthode search,triage de liste sans fonction prédéfinie,détermination de l'emplacement du nouvel élément d'une liste,méthode isalpha,utilisation de la division entière,boucles sur variables,affichage de texte avec séparation d'espace par end=' ',if else,list to tuple,min,concaténation de chaine,__init__,import de fonction depuis un module,instruction conditionnelle,obtention d'une somme,input,fonctions avec paramêtres,palindrome,opérateur arithmétique *,liste de chaines,création d'une liste intermédiaire,retour de valeur instructions conditionnelles,yield,max,déclaration de variable,initialisation de dictionnaire,méthode join,fonction demandant une liste,utiilisation d'une boucle for sur une liste,operations,manipulation de classe,len,boucle while,even slice,utilisation d'exception,tri de variables,conversion de chaines de caractères,type int,méthode,calculs numériques,valeurs en doubles,utilisation de fonction native,fonction à deux paramètres,condition multiples,dict,set to list,fonction avec plusieurs paramètres,affichage de texte en fonction d'une variable booléene et d'une comparaison,opération modulo,initialisation de chaines,return booléen,coding,partitionnement de programme,recherche de dimensions de matrices,operation,key word continue,for,liste créée en une ligne,méthode get,parcours d'une liste avec boucle for,enumerate,préfixe croissant,binary search method ,listes,méthode set,lecture d'un dictionnaire,if,comparaison de chaines,utilisation d'itérables,recherche d'un élément d'une liste en fonction d'une condition,méthode str,méthodes sur les listes,sort,boucles while,formattage,pass,booléen,création de fonction  qui prend une liste et un entier en argument,tri,fonction à un paramètre,conditions,affichage de la longueur d'une liste,fonction renvoyant une copie,déclaration de liste,Connaissance condition d'arrêt d'une fonction,try catch,print(end),utilisation d'une boucle for pour parcourir dans l'ordre décroissant,division euclidienne,parcours d'une matrice par diagonale,aire de figure,suite mathématique,fibonacci,parcours d'une liste,randint,echange d'éléments d'une liste,réaffectation de valeur après déclaration,méthode de lecture de liste,création de matrice,utilisation de fonction avec un argument et sans retour de fonction,matrice 3D,utlisation de la différence avec "!",multiplication d'entier,variables,instructions conditionnelles,déclarations de variable,comparaison de longueurs,parcours d'une chaine de caractère avec boucle for,symétrie aléatoire,for in len de list,conversion de type,méthode len,utilisation de la fonction input,déclaration de fonction avec argument,utilisation de l'opérateur not,string to code,ajout de liste,remplacer un caractère en fonction d'une condition,utilisation de if/else,ensembles,import de bibliothèque,affichage de liste,comparaison de variables,parité d'un chiffre,variables de booleens,chaines de caractères,couples de coordonnées,for in generator,construction de chaines de caractères,fonction int,abs,import,addition de variables,itemgetter,connaissance du step négatif,listes de listes,not in liste,recherche de caractère dans une chaine de caractère,opérations,utlisation de la bibliothèque string,méthode int,fonction avec paramètre,string,parcours sur une liste avec notation slicée,assert expression,fonctions sur les listes,nombre d'occurences,object, utilisation de la méthode append,runtime Error,utilsation de fonction native,affichage de variable,utilisation de tuples,fonctions de listes,concaténation de chaines de caractères,opérations numériques,append obligatoire,utilisation de variable incrémentatrices,valeurs,multiplication d'entiers,utilisation de la fonction append,utilisation de la fonction randint,sortie booléen,affectation de chaine de caractères à une variable,multiplication de string,variables globales,conditonnel,comparaison entre deux variables,utilisation de la fonction zip,carré d'un nombre,fonction avec paramêtres,initialisation de variable,réaffectation de valeur après déclaration sans contrainte de la taille de la liste,initialisation de liste,résolution d'un poblème,savoir comparer deux variables,listes croissantes,méthode print,utilisation de variables aléatoires,parcours de lste,concaténation d'ensembles,décalage modulaire aléatoire,incrémentation de variables,slice from,parcours de string,isalpha,formation rapide de liste,elif,for de 1 à n,prise d'input,compteur,error,boolean,déclaration de variables,utilisation de fonction avec plusieurs arguments et un retour d'une liste,int,vérification de deux conditions dans un seul if,import de fonction depuis module,parcours de listes,développement objet,utilisation de range,structure conditionnelle,valeur de liste,division avec quotient,range(end),incrémentation d'indice,if in list,exponentielle,utilsation du modulo,methode de liste,key word yield,variable booléenne,condition not,range,supérieur à,fonction modifiant une liste,déclaration d'une liste,classes enfant,calcul sur les éléments d'une liste,couples,re,suppression d'éléments,calcul sur variable,dict.get,liste triée dans sa création,if in string,création de classe,lecture de listes,somme,création de liste par l'opérateur *,vérification d'une deuxieme condition dans un bloc if,unicode string,modulo operator,count,opérateur arithmétique /,incrementation de variable,math conversion de type,vérification d'input,boucle while True,for in keys,utilisation de set,division,insert,modification de liste,parcours de chaine de caractères avec la fonction for,affichage avec concaténation de chaine entre texte et variable, recherche de variable en fonction d'une condition,dernier élément d'une liste,continue,structure booléen,recherche d'élément dans une matrice,fonction à deux arguments,opération sur les listes,math,paramètre par défaut,parité d'un nombre,3D array,max d'une liste,multiplication sur une variable,subclass,incrémentation de variable,lecture de tuple,appel de fonction avec paramêtre,fonctions de classe parent,pas d'opérateurs booléens,diviseurs,utilisations de variables,manipulation de liste,analyse d'une liste,intervertissement de valeurs,renvoie de tupple,utilisation de variable incrémentatrice,transtypage int,list to set,affichage du resultat en fonction d'une condition,conditions if,format,assert statement,utilisations de tuples,utilisation de la fonction len sur une liste,application conrète,variables operations,range(begin end),formatage de chaines de caractères,return ,boucle,addition de string,séparation de listes,méthodes sur des chaines de caractères,format(u"string"),comparaisons d'entiers,manipulation d'indexes,python zip,utilisation de boucles for,flottants,fonctions sur les string,upper,index de liste,module math,re.search,aléatoire,transtypage,utilisation d'indice,boucles for,parcours de matrice avec boucle for imbriquer,parcours de matrice,programme principal et fonction secondaire,utilisation fonction input,formattage de chaines,conditions à la suite,utilisation de la méthode append,enumeration,cast,factorielle,n-uplets,échange d'éléments dans une liste,parcours avec boucle for d'une liste,inversions d'éléments,renvoie d'un maximum sur une liste,lecture de liste,variables d'entiers,utilisation opérateur not,manipulation de message,fonction demandant deux arguments,lien entre classes,décrémentation,early return,docstring,multiplications,utilisation d'indice de liste,méthode s,POO,dict keys,operation comparaison,demande à l'utilisateur de rentrer une valeur,round,affectation de valeurs,conditions or
